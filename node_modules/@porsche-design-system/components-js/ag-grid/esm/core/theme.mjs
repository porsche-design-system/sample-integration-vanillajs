import { themeQuartz } from 'ag-grid-community';
import { checkboxStyle } from '../parts/checkbox-styles.mjs';
import { pdsSvgIcons } from '../parts/icon-set.mjs';
import { toggleButtonStyle } from '../parts/toggle-button-styles.mjs';
import { pdsThemeModeDark } from '../types/theme-mode.mjs';
import { borderRadiusSmall } from '../utilities/projects/utilities/dist/esm/border/borderRadiusSmall.mjs';
import { borderRadiusMedium } from '../utilities/projects/utilities/dist/esm/border/borderRadiusMedium.mjs';
import { fontFamily } from '../utilities/projects/utilities/dist/esm/font/fontFamily.mjs';
import { fontSizeTextSmall } from '../utilities/projects/utilities/dist/esm/font/fontSizeTextSmall.mjs';
import { fontWeightSemiBold } from '../utilities/projects/utilities/dist/esm/font/fontWeightSemiBold.mjs';
import { fontSizeTextXSmall } from '../utilities/projects/utilities/dist/esm/font/fontSizeTextXSmall.mjs';
import { themeLightNotificationInfo } from '../utilities/projects/utilities/dist/esm/theme/themeLightNotificationInfo.mjs';
import { themeLightBackgroundBase } from '../utilities/projects/utilities/dist/esm/theme/themeLightBackgroundBase.mjs';
import { themeLightPrimary } from '../utilities/projects/utilities/dist/esm/theme/themeLightPrimary.mjs';
import { themeLightBackgroundSurface } from '../utilities/projects/utilities/dist/esm/theme/themeLightBackgroundSurface.mjs';
import { darkenColor } from '../shared/dist/esm/styles/color-utils.mjs';
import { themeLightBackgroundFrosted } from '../utilities/projects/utilities/dist/esm/theme/themeLightBackgroundFrosted.mjs';
import { themeLightStateHover } from '../utilities/projects/utilities/dist/esm/theme/themeLightStateHover.mjs';
import { themeLightStateFocus } from '../utilities/projects/utilities/dist/esm/theme/themeLightStateFocus.mjs';
import { themeLightContrastLow } from '../utilities/projects/utilities/dist/esm/theme/themeLightContrastLow.mjs';
import { themeLightContrastMedium } from '../utilities/projects/utilities/dist/esm/theme/themeLightContrastMedium.mjs';
import { themeLightNotificationError } from '../utilities/projects/utilities/dist/esm/theme/themeLightNotificationError.mjs';
import { themeLightStateDisabled } from '../utilities/projects/utilities/dist/esm/theme/themeLightStateDisabled.mjs';
import { themeDarkNotificationInfo } from '../utilities/projects/utilities/dist/esm/theme/themeDarkNotificationInfo.mjs';
import { themeDarkBackgroundBase } from '../utilities/projects/utilities/dist/esm/theme/themeDarkBackgroundBase.mjs';
import { themeDarkPrimary } from '../utilities/projects/utilities/dist/esm/theme/themeDarkPrimary.mjs';
import { themeDarkBackgroundSurface } from '../utilities/projects/utilities/dist/esm/theme/themeDarkBackgroundSurface.mjs';
import { themeDarkBackgroundFrosted } from '../utilities/projects/utilities/dist/esm/theme/themeDarkBackgroundFrosted.mjs';
import { themeDarkStateHover } from '../utilities/projects/utilities/dist/esm/theme/themeDarkStateHover.mjs';
import { themeDarkStateFocus } from '../utilities/projects/utilities/dist/esm/theme/themeDarkStateFocus.mjs';
import { themeDarkContrastLow } from '../utilities/projects/utilities/dist/esm/theme/themeDarkContrastLow.mjs';
import { themeDarkContrastMedium } from '../utilities/projects/utilities/dist/esm/theme/themeDarkContrastMedium.mjs';
import { themeDarkNotificationError } from '../utilities/projects/utilities/dist/esm/theme/themeDarkNotificationError.mjs';
import { themeDarkStateDisabled } from '../utilities/projects/utilities/dist/esm/theme/themeDarkStateDisabled.mjs';

const pdsTheme = themeQuartz
    .withParams({
    checkboxBorderWidth: 2,
    checkboxBorderRadius: borderRadiusSmall,
    focusShadow: 'none',
    inputFocusShadow: 'none',
    spacing: 10,
    toggleButtonHeight: 28,
    toggleButtonWidth: 48,
    iconSize: 24,
    borderRadius: borderRadiusSmall,
    wrapperBorderRadius: borderRadiusMedium,
    fontFamily: fontFamily,
    fontSize: fontSizeTextSmall,
    headerFontWeight: fontWeightSemiBold,
    headerFontSize: fontSizeTextXSmall,
    headerHeight: 'calc(var(--ag-font-size) + var(--ag-spacing) * 2.9)',
    rowHeight: 'calc(var(--ag-font-size) + var(--ag-spacing) * 4)',
    toggleButtonSwitchInset: 3,
    browserColorScheme: 'light',
    accentColor: themeLightNotificationInfo,
    backgroundColor: themeLightBackgroundBase,
    foregroundColor: themeLightPrimary,
    headerBackgroundColor: themeLightBackgroundSurface,
    selectedRowBackgroundColor: darkenColor(themeLightBackgroundSurface),
    oddRowBackgroundColor: themeLightBackgroundSurface,
    modalOverlayBackgroundColor: themeLightBackgroundFrosted,
    rowHoverColor: themeLightStateHover,
    columnHoverColor: themeLightStateHover,
    rangeSelectionBorderColor: themeLightStateFocus,
    borderColor: themeLightContrastLow,
    inputBorder: `1px solid ${themeLightContrastMedium}`,
    inputInvalidBorder: `1px solid ${themeLightNotificationError}`,
    inputDisabledBorder: `1px solid ${themeLightStateDisabled}`,
    inputDisabledBackgroundColor: themeLightBackgroundBase,
    invalidColor: themeLightNotificationError,
    inputFocusBorder: `1px solid ${themeLightPrimary}`,
})
    .withParams({
    browserColorScheme: 'dark',
    accentColor: themeDarkNotificationInfo,
    backgroundColor: themeDarkBackgroundBase,
    foregroundColor: themeDarkPrimary,
    headerBackgroundColor: themeDarkBackgroundSurface,
    selectedRowBackgroundColor: darkenColor(themeDarkBackgroundSurface),
    oddRowBackgroundColor: themeDarkBackgroundSurface,
    modalOverlayBackgroundColor: themeDarkBackgroundFrosted,
    rowHoverColor: themeDarkStateHover,
    columnHoverColor: themeDarkStateHover,
    rangeSelectionBorderColor: themeDarkStateFocus,
    borderColor: themeDarkContrastLow,
    inputBorder: `1px solid ${themeDarkContrastMedium}`,
    inputInvalidBorder: `1px solid ${themeDarkNotificationError}`,
    inputDisabledBorder: `1px solid ${themeDarkStateDisabled}`,
    inputDisabledBackgroundColor: themeDarkBackgroundBase,
    invalidColor: themeDarkNotificationError,
    inputFocusBorder: `1px solid ${themeDarkPrimary}`,
}, pdsThemeModeDark)
    .withPart(pdsSvgIcons)
    .withPart(toggleButtonStyle)
    .withPart(checkboxStyle);

export { pdsTheme };
