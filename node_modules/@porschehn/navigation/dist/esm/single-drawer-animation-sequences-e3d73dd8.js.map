{"file":"single-drawer-animation-sequences-e3d73dd8.js","mappings":"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","names":[],"sources":["src/components/single-drawer/single-drawer-animation-sequences.ts"],"sourcesContent":["import animationManager, {\n  AnimationEndsCallbacks,\n  AnimationStatusCallbacks,\n  makeSequence,\n  SequenceStep\n} from '../../services/animations/animation-manager';\nimport { AnimationDurations, AnimationSequences, AnimationSequencesType } from '../../utility/constants';\n\nexport const registerOpenSingleDrawerAnimation = ({\n  onAnimationStarts,\n  onAnimationEnds\n}: Required<AnimationStatusCallbacks>): void => {\n  const sequence: SequenceStep[] = [\n    [\n      {\n        onStart: onAnimationStarts,\n        elementSelector: 'phn-single-drawer .drawer.animating',\n        animation: {\n          name: 'slideInFromLeft',\n          from: -1000,\n          duration: AnimationDurations.drawerOpen,\n          cleanUpAfterAnimation: true\n        }\n      },\n      {\n        elementSelector: 'phn-backdrop',\n        animation: {\n          name: 'fadeInBackdrop',\n          duration: AnimationDurations.backdrop,\n          to: 0.6\n        },\n        onEnd: onAnimationEnds\n      }\n    ]\n  ];\n\n  animationManager.register(\n    AnimationSequences.OPEN_SINGLE_DRAWER,\n    makeSequence(sequence, { timingFunction: 'cubicBezierStart' })\n  );\n};\n\nexport const registerCloseSingleDrawerAnimation = ({\n  onAnimationStarts,\n  onAnimationEnds\n}: Required<AnimationStatusCallbacks>): void => {\n  const sequence: SequenceStep[] = [\n    [\n      {\n        onStart: onAnimationStarts,\n        elementSelector: 'phn-single-drawer .drawer.animating',\n        animation: {\n          name: 'slideOutToLeft',\n          duration: AnimationDurations.drawer,\n          to: -1000\n        }\n      },\n      {\n        elementSelector: 'phn-backdrop',\n        animation: {\n          name: 'fadeOutBackdrop',\n          duration: AnimationDurations.backdrop,\n          from: 0.6\n        },\n        onEnd: onAnimationEnds\n      }\n    ]\n  ];\n\n  animationManager.register(\n    AnimationSequences.CLOSE_SINGLE_DRAWER,\n    makeSequence(sequence, { timingFunction: 'cubicBezierEnd' })\n  );\n};\n\nexport const registerTransitionNextLevelSingleDrawerAnimation = ({ onAnimationEnds }: AnimationEndsCallbacks): void => {\n  animationManager.register(\n    AnimationSequences.TRANSITION_NEXT_LEVEL_SINGLE_DRAWER,\n    makeSequence([\n      [\n        {\n          elementSelector: 'phn-single-drawer .drawer.animating',\n          animation: {\n            name: 'slideInFromRightFixed',\n            duration: AnimationDurations.drawer,\n            timingFunction: 'easeInOutQuad'\n          },\n          onEnd: onAnimationEnds\n        }\n      ]\n    ])\n  );\n};\n\nexport const registerTransitionPreviousLevelSingleDrawerAnimation = ({\n  onAnimationEnds\n}: AnimationEndsCallbacks): void => {\n  animationManager.register(\n    AnimationSequences.TRANSITION_PREVIOUS_LEVEL_SINGLE_DRAWER,\n    makeSequence([\n      [\n        {\n          elementSelector: 'phn-single-drawer .drawer.animating',\n          animation: {\n            name: 'slideOutToRightFixed',\n            duration: AnimationDurations.drawer,\n            timingFunction: 'easeInOutQuad'\n          },\n          onEnd: onAnimationEnds\n        }\n      ]\n    ])\n  );\n};\n\nexport const isPlayingSingleDrawerAnimation = (): boolean => {\n  try {\n    const singleDrawerAnimationSequences: AnimationSequencesType[] = [\n      AnimationSequences.OPEN_SINGLE_DRAWER,\n      AnimationSequences.CLOSE_SINGLE_DRAWER,\n      AnimationSequences.TRANSITION_NEXT_LEVEL_SINGLE_DRAWER,\n      AnimationSequences.TRANSITION_PREVIOUS_LEVEL_SINGLE_DRAWER\n    ];\n\n    return singleDrawerAnimationSequences.some((sequence) => {\n      try {\n        return animationManager.isPlaying(sequence);\n      } catch {\n        return false;\n      }\n    });\n  } catch (e) {\n    return false;\n  }\n};\n"],"version":3}