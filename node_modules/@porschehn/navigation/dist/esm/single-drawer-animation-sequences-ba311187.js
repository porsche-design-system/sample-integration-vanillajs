import { a as animationManager, m as makeSequence } from './animation-manager-c48de0f1.js';
import { A as AnimationSequences } from './animations-8383aa25.js';

const registerOpenSingleDrawerAnimation = ({ onAnimationStarts, onAnimationEnds }) => {
  const sequence = [
    [
      {
        onStart: onAnimationStarts,
        elementSelector: 'phn-single-drawer',
        animation: {
          className: 'slide-in-from-left',
          cleanUpAfterAnimation: (element) => {
            element.style.left = '0px';
          }
        }
      },
      {
        elementSelector: 'phn-backdrop',
        animation: {
          className: 'fade-in-animation',
          cleanUpAfterAnimation: (element) => {
            element.style.backgroundColor = 'rgba(0, 0, 0, 0.6)';
            element.style.opacity = '1';
          }
        },
        onEnd: onAnimationEnds
      }
    ]
  ];
  animationManager.register(AnimationSequences.OPEN_SINGLE_DRAWER, makeSequence(sequence));
};
const registerCloseSingleDrawerAnimation = ({ onAnimationStarts, onAnimationEnds }) => {
  const sequence = [
    [
      {
        onStart: onAnimationStarts,
        elementSelector: 'phn-single-drawer',
        animation: {
          className: 'slide-out-to-left',
          cleanUpBeforeAnimation: (element) => {
            element.style.left = '';
          },
          cleanUpAfterAnimation: (element) => {
            element.style.left = '-1000px';
          }
        }
      },
      {
        elementSelector: 'phn-backdrop',
        animation: {
          className: 'fade-out-animation',
          cleanUpBeforeAnimation: (element) => {
            element.style.backgroundColor = '';
            element.style.opacity = '';
          }
        },
        onEnd: onAnimationEnds
      }
    ]
  ];
  animationManager.register(AnimationSequences.CLOSE_SINGLE_DRAWER, makeSequence(sequence));
};
const registerTransitionNextLevelSingleDrawerAnimation = ({ onAnimationEnds }) => {
  animationManager.register(AnimationSequences.TRANSITION_NEXT_LEVEL_SINGLE_DRAWER, makeSequence([
    [
      {
        elementSelector: 'phn-single-drawer .drawer.animating',
        animation: {
          className: 'slide-in-from-right-fixed'
        },
        onEnd: onAnimationEnds
      }
    ]
  ]));
};
const registerTransitionPreviousLevelSingleDrawerAnimation = ({ onAnimationEnds }) => {
  animationManager.register(AnimationSequences.TRANSITION_PREVIOUS_LEVEL_SINGLE_DRAWER, makeSequence([
    [
      {
        elementSelector: 'phn-single-drawer .drawer.animating',
        animation: {
          className: 'slide-out-to-right-fixed'
        },
        onEnd: onAnimationEnds
      }
    ]
  ]));
};
const isPlayingSingleDrawerAnimation = () => {
  try {
    const singleDrawerAnimationSequences = [
      AnimationSequences.OPEN_SINGLE_DRAWER,
      AnimationSequences.CLOSE_SINGLE_DRAWER,
      AnimationSequences.TRANSITION_NEXT_LEVEL_SINGLE_DRAWER,
      AnimationSequences.TRANSITION_PREVIOUS_LEVEL_SINGLE_DRAWER
    ];
    return singleDrawerAnimationSequences.some((sequence) => {
      try {
        return animationManager.isPlaying(sequence);
      }
      catch (_a) {
        return false;
      }
    });
  }
  catch (e) {
    return false;
  }
};

export { registerCloseSingleDrawerAnimation as a, registerTransitionNextLevelSingleDrawerAnimation as b, registerTransitionPreviousLevelSingleDrawerAnimation as c, isPlayingSingleDrawerAnimation as i, registerOpenSingleDrawerAnimation as r };

//# sourceMappingURL=single-drawer-animation-sequences-ba311187.js.map