{"file":"content-service-c76d855e.js","mappings":"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","names":[],"sources":["src/services/content-service.ts"],"sourcesContent":["import { Content, ShopContentResponse } from '../entities/content';\nimport { isCountryInOneOfRegions, splitLocale } from '../entities/locale';\nimport { Application, ApplicationType } from '../utility/constants/app';\nimport { constructCacheKey, getConfig } from '../utility/helper';\nimport { modifyShopItemDependingOnMarket } from '../utility/helpers/shop-helper';\nimport { NaviError, NaviErrorTypes } from '../utility/navi-error';\nimport featureToggles from './feature-toggles';\n\nexport const contentCache = new Map<string, Content>();\n\nexport async function fetchContent(locale: string, app?: ApplicationType): Promise<Content> {\n  const config = getConfig(featureToggles.env);\n\n  const isShopEnabled = featureToggles.isShopToggleActive() && app === Application.shop;\n\n  const naviContentPromise = fetchNaviContent(config.CONTENT_URL, locale);\n  const shopContentPromise = isShopEnabled ? fetchShopContent(config.SHOP_CONTENT_URL, locale) : Promise.resolve(null);\n\n  const [naviContentResult, shopContentResult] = await Promise.allSettled([naviContentPromise, shopContentPromise]);\n\n  if (naviContentResult.status === 'rejected') {\n    throw naviContentResult.reason;\n  }\n\n  const naviContent = modifyShopItemDependingOnMarket(locale, app, naviContentResult.value);\n\n  const shopContent = shopContentResult.status === 'fulfilled' ? shopContentResult.value : null;\n\n  if (shopContent === null || naviContent.shop === null) {\n    return naviContent;\n  }\n\n  return {\n    ...naviContent,\n    shop: {\n      ...naviContent.shop,\n      children: shopContent.menuItems || naviContent.shop?.children || [],\n      additionalContent: shopContent.additionalContent,\n      availableLocales: naviContent.shop.availableLocales,\n      availableLocalesOnlyForShop: naviContent.shop.availableLocalesOnlyForShop\n    }\n  };\n}\n\nasync function fetchNaviContent(contentUrl: string, locale: string): Promise<Content> {\n  const { country, language } = splitLocale(locale);\n\n  const cacheKey = constructCacheKey(contentUrl, locale);\n\n  const cachedContent = contentCache.get(cacheKey);\n  if (cachedContent !== undefined) {\n    return cachedContent;\n  }\n\n  const data = await fetch(`${contentUrl}/${`${language}-${country}`}.json`, {\n    headers: {\n      'Cache-Control': 'no-cache',\n      'Content-Type': 'application/json'\n    }\n  });\n\n  if (data.status === 404) {\n    throw new NaviError(`No content for locale ${locale} found`, NaviErrorTypes.NO_RESULTS);\n  }\n\n  if (!data.ok) {\n    throw new NaviError(`Could not get content for locale ${locale}`, NaviErrorTypes.GENERAL);\n  }\n\n  const content = await data.json();\n\n  contentCache.set(cacheKey, content);\n\n  return content;\n}\n\nasync function fetchShopContent(contentUrl: string, locale: string): Promise<ShopContentResponse> {\n  const { country, language } = splitLocale(locale);\n\n  const data = await fetch(`${contentUrl}/${country.toLowerCase()}/${`${language}-${country}`}/navigation`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'x-vercel-protection-bypass': 'SHOP_CONTENT_KEY'\n    }\n  });\n\n  if (data.status === 404) {\n    throw new NaviError(`No shop content for locale ${locale} found`, NaviErrorTypes.NO_RESULTS);\n  }\n\n  if (!data.ok) {\n    throw new NaviError(`Could not get shop content for locale ${locale}`, NaviErrorTypes.GENERAL);\n  }\n\n  return data.json();\n}\n\nexport function constructFlagURL(footerAssetsUrl: string, locale: string): string {\n  const { country } = splitLocale(locale);\n\n  let flag = country;\n  if (flag.includes('-') && !isCountryInOneOfRegions(flag)) {\n    flag = country.split('-')[0];\n  }\n\n  return `${footerAssetsUrl}/flags/${flag}.svg`;\n}\n\nexport async function getFlagURL(footerAssetsUrl: string, locale: string): Promise<string> {\n  try {\n    const flagURL = constructFlagURL(footerAssetsUrl, locale);\n\n    const res = await fetch(flagURL);\n\n    // Only set flagURL if flag actually exists\n    if (res.ok) {\n      return flagURL;\n    }\n  } catch (err) {\n    // ignore error\n  }\n\n  return '';\n}\n"],"version":3}