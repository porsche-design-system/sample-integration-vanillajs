import { n as navContentStore } from './nav-content-store.js';
import { b as isString } from './helper.js';

function showDealerSearchDropdown(country) {
  const countriesWithDropdown = ['CN'];
  return countriesWithDropdown.includes(country);
}
function getRegionSpecificCountry(country) {
  return country.includes('-') ? country.split('-')[0] : country;
}
function sanitizeDealerHomepage(originalUrl) {
  if (!originalUrl.startsWith('https://')) {
    return `http://${originalUrl}`;
  }
  return originalUrl;
}
function getOpeningHours(openingHoursData) {
  const { openingHours } = navContentStore.state.dealer;
  if (!openingHours) {
    return '';
  }
  const WEEK_DAYS = [
    openingHours.monday,
    openingHours.tuesday,
    openingHours.wednesday,
    openingHours.thursday,
    openingHours.friday,
    openingHours.saturday,
    openingHours.sunday
  ];
  const openingHoursMap = getOpeningHoursMap(openingHours, openingHoursData);
  const result = [];
  let previousOpeningHours = '';
  let previousDayIndex = -1;
  let consecutiveDays = [];
  for (const day of WEEK_DAYS) {
    const currentDayIndex = WEEK_DAYS.indexOf(day);
    const openHours = openingHoursMap.get(day);
    const openingHoursString = getOpeningHoursString(openHours);
    if (openingHoursString !== '') {
      if (previousOpeningHours === '') {
        previousOpeningHours = openingHoursString;
        consecutiveDays.push(day);
      }
      else if (previousOpeningHours !== openingHoursString || previousDayIndex !== currentDayIndex - 1) {
        result.push(getDayRange(consecutiveDays, previousOpeningHours));
        consecutiveDays = [day];
        previousOpeningHours = openingHoursString;
      }
      else {
        consecutiveDays.push(day);
      }
      previousDayIndex = currentDayIndex;
    }
  }
  if (previousOpeningHours !== '') {
    result.push(getDayRange(consecutiveDays, previousOpeningHours));
  }
  return result.join('\n');
}
function getDayRange(days, openingHoursString) {
  if (days.length === 1) {
    return `${days[0]}: ${openingHoursString}`;
  }
  return `${days[0]} - ${days[days.length - 1]}: ${openingHoursString}`;
}
function getOpeningHoursMap(openingHours, openingHoursData) {
  const openingHoursMap = new Map();
  for (const item of openingHoursData) {
    const day = openingHours[item.day.toLowerCase()];
    if (isString(day)) {
      openingHoursMap.set(day, { open: item.open, close: item.close });
    }
  }
  return openingHoursMap;
}
function getOpeningHoursString(openHours) {
  return openHours && openHours.open !== '' && openHours.close !== '' ? getTimeFormat(openHours) : '';
}
function getTimeFormat(openHours) {
  const { openingHours } = navContentStore.state.dealer;
  const timeFormat = (openingHours === null || openingHours === void 0 ? void 0 : openingHours.timeFormat) === 12;
  return `${convertToLocalTime(openHours.open, timeFormat)} - ${convertToLocalTime(openHours.close, timeFormat)}`;
}
function convertToLocalTime(time, timeFormat = false) {
  const [hour, minute] = time.split(':').map(Number);
  const date = new Date(0, 0, 0, hour, minute);
  return date
    .toLocaleString(undefined, {
    hour: 'numeric',
    minute: 'numeric',
    hour12: timeFormat
  })
    .toUpperCase();
}

export { showDealerSearchDropdown as a, getRegionSpecificCountry as b, getOpeningHours as g, sanitizeDealerHomepage as s };

//# sourceMappingURL=dealer-search-helper.js.map