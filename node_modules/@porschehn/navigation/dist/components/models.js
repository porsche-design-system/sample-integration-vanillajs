import { proxyCustomElement, HTMLElement, createEvent, getAssetPath, h, Host } from '@stencil/core/internal/client';
import { a as getModelsRoutingKey } from './routing-key.js';
import { n as navContentStore } from './nav-content-store.js';
import { n as navStateStore } from './nav-state-store.js';
import { e as getConfig, r as MenuItemVariant, x as getImageSize } from './helper.js';
import { d as defineCustomElement$1 } from './menu-item.js';
import { E as EventActions } from './global-data-layer-service.js';

const modelsCss = "@-webkit-keyframes slideDown{from{max-height:0}to{max-height:1000px}}@keyframes slideDown{from{max-height:0}to{max-height:1000px}}@-webkit-keyframes slideUp{from{max-height:1000px}to{max-height:0}}@keyframes slideUp{from{max-height:1000px}to{max-height:0}}@-webkit-keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@-webkit-keyframes slideRight{from{max-width:1000px}to{max-width:0}}@keyframes slideRight{from{max-width:1000px}to{max-width:0}}@-webkit-keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@-webkit-keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@-webkit-keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@-webkit-keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@-webkit-keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@-webkit-keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes fadeOut{0%{opacity:1}100%{opacity:0}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}.phn-flex-col.sc-phn-models{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.phn-flex-row.sc-phn-models{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}.phn-align-center.sc-phn-models{-ms-flex-align:center;align-items:center}.phn-justify-around.sc-phn-models{-ms-flex-pack:distribute;justify-content:space-around}.phn-justify-between.sc-phn-models{-ms-flex-pack:justify;justify-content:space-between}.phn-flex-wrap.sc-phn-models{-ms-flex-wrap:wrap;flex-wrap:wrap}.sc-phn-models-h{display:block}@media (min-width: 760px){.sc-phn-models-h{margin-top:-1.75rem}}@media (min-width: 1760px){.sc-phn-models-h{margin-top:-2.25rem}}.sc-phn-models-h ul.sc-phn-models{margin:0;padding:0}.sc-phn-models-h .skeleton-headline.sc-phn-models{width:auto;height:3.125rem;background:#d8d8db;border-radius:4px}.sc-phn-models-h .series.sc-phn-models{-ms-flex-pack:center;justify-content:center;margin:0 0 0.5rem 0}@media (min-width: 760px){.sc-phn-models-h .series.sc-phn-models{margin:0 0 0.5rem 0}}@media (min-width: 1000px){.sc-phn-models-h .series.sc-phn-models{margin:0 0 0.25rem 0}}@media (min-width: 1760px){.sc-phn-models-h .series.sc-phn-models{margin:0 0 0.5rem 0}}.sc-phn-models-h .series.sc-phn-models .image.sc-phn-models{position:relative;-webkit-transition:-webkit-transform 0.24s ease;transition:-webkit-transform 0.24s ease;transition:transform 0.24s ease;transition:transform 0.24s ease, -webkit-transform 0.24s ease;inset:0px;backface-visibility:hidden;-webkit-backface-visibility:hidden;-webkit-transform:translateZ(0);transform:translateZ(0)}.sc-phn-models-h .series.sc-phn-models .image.sc-phn-models:hover{image-rendering:high-quality;-webkit-transform:scale3d(1.08, 1.08, 1.08);transform:scale3d(1.08, 1.08, 1.08)}@media (min-width: 0px){.sc-phn-models-h .series.sc-phn-models .image.sc-phn-models{width:10.875rem}}@media (min-width: 480px){.sc-phn-models-h .series.sc-phn-models .image.sc-phn-models{width:14.9375rem}}@media (min-width: 760px){.sc-phn-models-h .series.sc-phn-models .image.sc-phn-models{width:10.875rem}}@media (min-width: 1300px){.sc-phn-models-h .series.sc-phn-models .image.sc-phn-models{width:12.25rem}}@media (min-width: 1920px){.sc-phn-models-h .series.sc-phn-models .image.sc-phn-models{width:14.9375rem}}.sc-phn-models-h .series.skeleton.sc-phn-models{margin:0 0 0.5rem 0}@media (min-width: 480px){.sc-phn-models-h .series.skeleton.sc-phn-models{margin:0 0 1rem}}@media (min-width: 1920px){.sc-phn-models-h .series.skeleton.sc-phn-models{margin:0 0 1.5rem 0}}";

const Models = /*@__PURE__*/ proxyCustomElement(class Models extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.mobileMenuItemClick = createEvent(this, "mobileMenuItemClick", 7);
    this.seriesImagesLoaded = new Set();
    this.seriesImagesNotLoaded = new Set();
    this.breakpoint = undefined;
    this.showHeadline = false;
    this.showSkeleton = true;
  }
  showMenuWithModels(series) {
    const modelsSeriesRoutingKey = getModelsRoutingKey(series.id);
    this.mobileMenuItemClick.emit([modelsSeriesRoutingKey]);
  }
  handleImageLoad(seriesId) {
    const { models } = navContentStore.state;
    this.seriesImagesLoaded.add(seriesId);
    if (models.series.every(({ id }) => this.seriesImagesLoaded.has(id))) {
      this.showSkeleton = false;
    }
  }
  handleImageLoadError(seriesId) {
    this.handleImageLoad(seriesId);
    this.seriesImagesNotLoaded.add(seriesId);
  }
  getImageSource(image) {
    const assetPath = getAssetPath(`${getConfig(navStateStore.state.env).ASSETS_URL}/series-assets`);
    const imageSize = getImageSize(this.breakpoint);
    const imagePath = `${assetPath}/${imageSize}`;
    return `${imagePath}/${image}.webp, ${imagePath}/${image}@2x.webp 2x`;
  }
  render() {
    const { models } = navContentStore.state;
    return (h(Host, null, h("ul", null, models.series.map((modelsSeries) => (h("phn-menu-item", { key: modelsSeries.id, class: `series ${this.seriesImagesNotLoaded.has(modelsSeries.id) || this.showSkeleton ? 'skeleton' : ''}`, elementId: getModelsRoutingKey(modelsSeries.id), analyticsId: modelsSeries.id, text: modelsSeries.name, subtext: modelsSeries.tags.map((tag) => tag.text).join(' | '), onClick: () => this.showMenuWithModels(modelsSeries), variant: MenuItemVariant.Model, isModels: true, datalayerEventAction: EventActions.MODEL_RANGE_CLICK, role: "listitem" }, h("img", { slot: "media", class: "image", srcSet: this.getImageSource(modelsSeries.image), alt: `${modelsSeries.name} Frontshot`, onLoad: () => this.handleImageLoad(modelsSeries.id), onError: () => this.handleImageLoadError(modelsSeries.id) })))))));
  }
  static get assetsDirs() { return ["series-assets"]; }
  get el() { return this; }
  static get style() { return modelsCss; }
}, [2, "phn-models", {
    "breakpoint": [2],
    "showHeadline": [4, "show-headline"],
    "showSkeleton": [32]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["phn-models", "phn-menu-item"];
  components.forEach(tagName => { switch (tagName) {
    case "phn-models":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, Models);
      }
      break;
    case "phn-menu-item":
      if (!customElements.get(tagName)) {
        defineCustomElement$1();
      }
      break;
  } });
}
defineCustomElement();

export { Models as M, defineCustomElement as d };

//# sourceMappingURL=models.js.map