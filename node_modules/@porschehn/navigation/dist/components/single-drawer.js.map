{"file":"single-drawer.js","mappings":"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","names":["router.syncAnimation","router.pop","router.getCurrentRoute"],"sources":["src/components/single-drawer/drawer-content.tsx","src/components/single-drawer/animations/sequences/register-next-level-single-drawer-animation.ts","src/components/single-drawer/animations/sequences/register-previous-level-single-drawer-animation.ts","src/components/single-drawer/animations/sequences/register-open-single-drawer-animation.ts","src/components/single-drawer/animations/sequences/register-close-single-drawer-animation.ts","src/components/single-drawer/animations/animations-register.ts","src/components/single-drawer/single-drawer.scss?tag=phn-single-drawer&encapsulation=scoped","src/components/single-drawer/single-drawer.tsx"],"sourcesContent":["import { Fragment, h, JSX } from '@stencil/core';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { showBackButton } from '../../services/routing-manager';\n\nexport default function DrawerContent({\n  routingKey,\n  breakpoint,\n  locale,\n  receivedContent\n}: {\n  routingKey: string;\n  breakpoint: number;\n  locale: string;\n  receivedContent: boolean;\n}): JSX.Element {\n  const { menu } = navContentStore.state;\n\n  return (\n    <Fragment>\n      <div class=\"bottom-gradient\"></div>\n      <div class=\"drawer-content\">\n        <phn-drawer-header\n          showBackButton={showBackButton(routingKey)}\n          backButtonAnalyticsId={menu.id}\n          breakpoint={breakpoint}\n          route={routingKey}\n          receivedContent={receivedContent}\n          locale={locale}\n        />\n        <phn-router\n          activeRoutingKey={routingKey}\n          breakpoint={breakpoint}\n          locale={locale}\n          receivedContent={receivedContent}\n        />\n      </div>\n    </Fragment>\n  );\n}\n","import animationManager, {\n  AnimationEndsCallbacks,\n  makeSequence\n} from '../../../../services/animations/animation-manager';\nimport { AnimationSequences } from '../../../../utility/constants';\n\nexport default function registerTransitionNextLevelSingleDrawerAnimation({\n  onAnimationEnds\n}: AnimationEndsCallbacks): void {\n  animationManager.register(\n    AnimationSequences.TRANSITION_NEXT_LEVEL_SINGLE_DRAWER,\n    makeSequence([\n      [\n        {\n          elementSelector: 'phn-single-drawer .drawer.animating',\n          animation: {\n            className: 'slide-in-from-right-fixed'\n          },\n          onEnd: onAnimationEnds\n        }\n      ]\n    ])\n  );\n}\n","import animationManager, {\n  AnimationEndsCallbacks,\n  makeSequence\n} from '../../../../services/animations/animation-manager';\nimport { AnimationSequences } from '../../../../utility/constants';\n\nexport default function registerTransitionPreviousLevelSingleDrawerAnimation({\n  onAnimationEnds\n}: AnimationEndsCallbacks): void {\n  animationManager.register(\n    AnimationSequences.TRANSITION_PREVIOUS_LEVEL_SINGLE_DRAWER,\n    makeSequence([\n      [\n        {\n          elementSelector: 'phn-single-drawer .drawer.animating',\n          animation: {\n            className: 'slide-out-to-right-fixed'\n          },\n          onEnd: onAnimationEnds\n        }\n      ]\n    ])\n  );\n}\n","import animationManager, {\n  AnimationStatusCallbacks,\n  makeSequence,\n  SequenceStep\n} from '../../../../services/animations/animation-manager';\nimport { AnimationSequences } from '../../../../utility/constants';\n\nexport default function registerOpenSingleDrawerAnimation({\n  onAnimationStarts,\n  onAnimationEnds\n}: Required<AnimationStatusCallbacks>): void {\n  const sequence: SequenceStep[] = [\n    [\n      {\n        onStart: onAnimationStarts,\n        elementSelector: 'phn-single-drawer',\n        animation: {\n          className: 'slide-in-from-left',\n          cleanUpAfterAnimation: (element) => {\n            element.style.left = '0px';\n          }\n        }\n      },\n      {\n        elementSelector: 'phn-backdrop',\n        animation: {\n          className: 'fade-in-animation',\n          cleanUpAfterAnimation: (element) => {\n            element.style.backgroundColor = 'rgba(0, 0, 0, 0.6)';\n            element.style.opacity = '1';\n          }\n        },\n        onEnd: onAnimationEnds\n      }\n    ]\n  ];\n\n  animationManager.register(AnimationSequences.OPEN_SINGLE_DRAWER, makeSequence(sequence));\n}\n","import animationManager, {\n  AnimationStatusCallbacks,\n  makeSequence,\n  SequenceStep\n} from '../../../../services/animations/animation-manager';\nimport { AnimationSequences } from '../../../../utility/constants';\n\nexport default function registerCloseSingleDrawerAnimation({\n  onAnimationStarts,\n  onAnimationEnds\n}: Required<AnimationStatusCallbacks>): void {\n  const sequence: SequenceStep[] = [\n    [\n      {\n        onStart: onAnimationStarts,\n        elementSelector: 'phn-single-drawer',\n        animation: {\n          className: 'slide-out-to-left',\n          cleanUpBeforeAnimation: (element) => {\n            element.style.left = '';\n          },\n          cleanUpAfterAnimation: (element) => {\n            element.style.left = '-1000px';\n          }\n        }\n      },\n      {\n        elementSelector: 'phn-backdrop',\n        animation: {\n          className: 'fade-out-animation',\n          cleanUpBeforeAnimation: (element) => {\n            element.style.backgroundColor = '';\n            element.style.opacity = '';\n          }\n        },\n        onEnd: onAnimationEnds\n      }\n    ]\n  ];\n\n  animationManager.register(AnimationSequences.CLOSE_SINGLE_DRAWER, makeSequence(sequence));\n}\n","import { DrawerStatusTypes, DrawerStatusValues } from '../../../utility/constants/app';\nimport {\n  dispatchEvent,\n  focusOnElement,\n  getHTMLElement,\n  getHTMLElementFromRoot,\n  isString\n} from '../../../utility/helper';\nimport registerTransitionNextLevelSingleDrawerAnimation from './sequences/register-next-level-single-drawer-animation';\nimport registerTransitionPreviousLevelSingleDrawerAnimation from './sequences/register-previous-level-single-drawer-animation';\nimport registerOpenSingleDrawerAnimation from './sequences/register-open-single-drawer-animation';\nimport registerCloseSingleDrawerAnimation from './sequences/register-close-single-drawer-animation';\nimport * as router from '../../../services/routing-manager';\nimport analyticsManager from '../../../services/analytics/analytics-manager';\nimport {\n  DisplayElementTypes,\n  ElementTypes,\n  EventActions,\n  FOCUSABLE_ELEMENTS_SELECTOR\n} from '../../../utility/constants';\nimport globalDataLayerService from '../../../services/analytics/global-data-layer-service';\nimport { routerStore } from '../../../state/router-store';\nimport { navStateStore } from '../../../state/nav-state-store';\n\nexport default function registerSingleDrawerAnimationSequences(): void {\n  function dispatchDrawerStatusEvent(status: DrawerStatusTypes) {\n    dispatchEvent('phn-single-drawer', 'phnDrawerStatus', {\n      bubbles: true,\n      composed: true,\n      detail: { status }\n    });\n  }\n\n  registerTransitionNextLevelSingleDrawerAnimation({\n    onAnimationEnds: () => onTransitionEnd()\n  });\n  registerTransitionPreviousLevelSingleDrawerAnimation({ onAnimationEnds: () => onTransitionEnd() });\n  registerOpenSingleDrawerAnimation({\n    onAnimationStarts: () => {\n      dispatchDrawerStatusEvent(DrawerStatusValues.startOpening);\n    },\n    onAnimationEnds: () => {\n      onTransitionEnd();\n      dispatchDrawerStatusEvent(DrawerStatusValues.finishOpening);\n    }\n  });\n  registerCloseSingleDrawerAnimation({\n    onAnimationStarts: () => {\n      dispatchDrawerStatusEvent(DrawerStatusValues.startClosing);\n    },\n    onAnimationEnds: () => {\n      dispatchDrawerStatusEvent(DrawerStatusValues.finishClosing);\n      router.syncAnimation();\n\n      if (navStateStore.state.usingKeyboard) {\n        setTimeout(() => {\n          focusOnElement(getHTMLElementFromRoot('phn-burger-button phn-p-button-pure'));\n        }, 100);\n      }\n    }\n  });\n}\n\nfunction onTransitionEnd() {\n  const focussedElementId =\n    routerStore.state.animatingPointer > routerStore.state.routingKeyPointer\n      ? routerStore.state.routingKeyHistory[routerStore.state.animatingPointer]\n      : '';\n\n  router.syncAnimation();\n  router.pop();\n\n  setTimeout(() => {\n    const singleDrawer = getHTMLElementFromRoot('.drawer');\n    focusOn(singleDrawer, focussedElementId);\n  });\n\n  sendDataLayerEvent();\n}\n\nfunction sendDataLayerEvent() {\n  analyticsManager.setDrawerType(DisplayElementTypes.SingleDrawer);\n\n  globalDataLayerService.pushDataLayerEvent(EventActions.DRAWER_LOAD, {\n    componentDisplay: {\n      displayElementType: analyticsManager.calculateDisplayElementType(\n        router.getCurrentRoute(),\n        ElementTypes.singleDrawer\n      ),\n      displayElementId: analyticsManager.calculateDisplayElementId(),\n      displayElementName: 'Single Drawer'\n    }\n  });\n}\n\nfunction focusOn(element: HTMLElement | null, focussedElementId: string): void {\n  if (!element) return;\n\n  const autoFocusElement = getHTMLElement(element.querySelector('.autofocus'));\n  if (autoFocusElement !== null) {\n    focusOnElement(autoFocusElement);\n    return;\n  }\n\n  if (navStateStore.state.usingKeyboard) {\n    let focussableElement: HTMLElement | null = null;\n\n    if (isString(focussedElementId)) {\n      focussableElement = getHTMLElement(element.querySelector(`.active [data-id=\"${focussedElementId}\"]`));\n    }\n\n    if (focussableElement === null) {\n      focussableElement = getHTMLElement(element.querySelector(`.active ${FOCUSABLE_ELEMENTS_SELECTOR}`));\n    }\n\n    if (focussableElement !== null) {\n      focusOnElement(focussableElement);\n    }\n  } else {\n    const firstFocus = getHTMLElement(element.querySelector('.first-focus'));\n\n    if (firstFocus !== null) {\n      focusOnElement(firstFocus);\n    }\n  }\n}\n","@import '../../scss';\n\n:host {\n  display: block;\n  position: fixed;\n  top: 0;\n  left: -1000px;\n  height: 100vh;\n  width: 100vw;\n  z-index: $phn-z-index-mega-flyout + 1;\n\n  &.slide-in-from-left {\n    position: absolute;\n    animation: slide-in-from-left-absolute 600ms;\n  }\n\n  &.slide-out-to-left {\n    position: absolute;\n    animation: slide-in-from-left-absolute 600ms reverse;\n  }\n\n  .drawer {\n    z-index: $phn-z-index-mega-flyout + 1;\n    background-color: $pds-theme-light-background-base;\n    position: absolute;\n    left: 0;\n\n    .drawer-content {\n      overflow-y: auto;\n      height: 100vh;\n      width: 100vw;\n      box-sizing: border-box;\n      padding: 0 p-px-to-rem(27px) p-px-to-rem(100px) p-px-to-rem(27px);\n\n      @include pds-media-query-min('xs') {\n        padding: 0 p-px-to-rem(35px) p-px-to-rem(100px) p-px-to-rem(35px);\n      }\n\n      @include pds-media-query-min('s') {\n        padding: 0 p-px-to-rem(54px) p-px-to-rem(100px) p-px-to-rem(54px);\n      }\n\n      @include pds-media-query-min('m') {\n        padding: 0 p-px-to-rem(36px) p-px-to-rem(100px) p-px-to-rem(36px);\n      }\n\n      phn-drawer-header {\n        box-sizing: border-box;\n        margin-top: p-px-to-rem(18px);\n        margin-bottom: p-px-to-rem(31px);\n\n        @include pds-media-query-min('xs') {\n          margin-top: p-px-to-rem(32px);\n          margin-bottom: p-px-to-rem(37px);\n        }\n\n        @include pds-media-query-min('s') {\n          margin-bottom: p-px-to-rem(20px);\n        }\n      }\n\n      phn-router {\n        padding-bottom: 4rem;\n      }\n    }\n\n    .bottom-gradient{\n      @include drawer-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255));\n      margin-left: 0;\n      z-index: 1;\n    }\n  }\n\n}\n","import { Component, Element, h, Host, Listen, Prop } from '@stencil/core';\nimport { RoutingKeys } from '../../entities/routing-key';\nimport { focusOnElement, getHTMLElement, isString } from '../../utility/helper';\nimport { Timeout } from '../../utility/timeout';\nimport DrawerContent from './drawer-content';\nimport { getAllFocusableElements } from '../double-drawer/helper';\nimport { getCurrentRoute, isAnimatingForward } from '../../services/routing-manager';\nimport { routerStore } from '../../state/router-store';\nimport { handleAnimationRouting } from './animations/animations-controller';\nimport registerSingleDrawerAnimationSequences from './animations/animations-register';\n\n@Component({\n  tag: 'phn-single-drawer',\n  scoped: true,\n  styleUrl: 'single-drawer.scss'\n})\nexport class SingleDrawer {\n  @Prop() breakpoint!: number;\n  @Prop() locale!: string;\n  @Prop() usingKeyboard = false;\n  @Prop() receivedContent = false;\n\n  @Element() el!: HTMLPhnSingleDrawerElement;\n\n  private focusTimeout = new Timeout(0);\n\n  @Listen('keydown', { passive: false })\n  handleKeyDown(e: KeyboardEvent): void {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    const targetElement = getHTMLElement(e.target);\n    if (targetElement === null) {\n      return;\n    }\n\n    let focusableDrawerElements = getAllFocusableElements(this.el.querySelector('.active'));\n    if (focusableDrawerElements.length === 0) {\n      return;\n    }\n\n    if (getCurrentRoute().startsWith(RoutingKeys.DEALER_SEARCH)) {\n      focusableDrawerElements = focusableDrawerElements.filter(\n        (element) => element.nodeName !== 'BUTTON' && element.nodeName !== 'A'\n      );\n    }\n\n    const firstFocusableDrawerElement = focusableDrawerElements[0];\n    const lastFocusableDrawerElement = focusableDrawerElements[focusableDrawerElements.length - 1];\n\n    if (targetElement === firstFocusableDrawerElement && e.shiftKey) {\n      e.preventDefault();\n\n      if (lastFocusableDrawerElement !== null) {\n        focusOnElement(lastFocusableDrawerElement);\n      }\n\n      return;\n    }\n\n    if (targetElement === lastFocusableDrawerElement && !e.shiftKey) {\n      e.preventDefault();\n\n      if (firstFocusableDrawerElement !== null) {\n        focusOnElement(firstFocusableDrawerElement);\n      }\n\n      return;\n    }\n  }\n\n  componentWillLoad(): void {\n    registerSingleDrawerAnimationSequences();\n  }\n\n  disconnectedCallback(): void {\n    this.focusTimeout.cancel();\n    routerStore.reset();\n  }\n\n  render(): HTMLPhnSingleDrawerElement {\n    const { nextRoute, currentRoute } = handleAnimationRouting();\n\n    return (\n      <Host>\n        {isString(currentRoute) ? (\n          <div class=\"drawer active\" key={currentRoute}>\n            <span class=\"first-focus\" tabIndex={-1} aria-hidden=\"true\" />\n            <DrawerContent\n              routingKey={currentRoute}\n              breakpoint={this.breakpoint}\n              locale={this.locale}\n              receivedContent={this.receivedContent}\n            />\n          </div>\n        ) : null}\n\n        {isString(nextRoute) ? (\n          <div class={`drawer animating`} style={isAnimatingForward() ? { left: '100%' } : {}} key={nextRoute}>\n            <DrawerContent\n              routingKey={nextRoute}\n              breakpoint={this.breakpoint}\n              locale={this.locale}\n              receivedContent={this.receivedContent}\n            />\n          </div>\n        ) : null}\n      </Host>\n    );\n  }\n}\n"],"version":3}