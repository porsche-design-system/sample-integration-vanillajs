import { proxyCustomElement, HTMLElement, createEvent, h, Fragment } from '@stencil/core/internal/client';
import { g as globalDataLayerService, E as EventActions, C as ClickElementTypes, a as ElementTypes } from './global-data-layer-service.js';
import { a as analyticsManager, e as getHeadlineText, f as getSubtext } from './analytics-manager.js';
import { n as navContentStore } from './nav-content-store.js';
import { a as isString, q as isDesktop } from './helper.js';
import { f as findTopLevelRoutingKey } from './routing-key.js';
import { c as componentsOnReady, T as Timeout } from './timeout.js';
import { d as defineCustomElement$3 } from './back-button.js';
import { d as defineCustomElement$2 } from './heading.js';
import { d as defineCustomElement$1 } from './signature-heading.js';

const drawerHeaderCss = "@-webkit-keyframes slideDown{from{max-height:0}to{max-height:1000px}}@keyframes slideDown{from{max-height:0}to{max-height:1000px}}@-webkit-keyframes slideUp{from{max-height:1000px}to{max-height:0}}@keyframes slideUp{from{max-height:1000px}to{max-height:0}}@-webkit-keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@-webkit-keyframes slideRight{from{max-width:1000px}to{max-width:0}}@keyframes slideRight{from{max-width:1000px}to{max-width:0}}@-webkit-keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@-webkit-keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@-webkit-keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@-webkit-keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@-webkit-keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@-webkit-keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes fadeOut{0%{opacity:1}100%{opacity:0}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}.phn-flex-col.sc-phn-drawer-header{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.phn-flex-row.sc-phn-drawer-header{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}.phn-align-center.sc-phn-drawer-header{-ms-flex-align:center;align-items:center}.phn-justify-around.sc-phn-drawer-header{-ms-flex-pack:distribute;justify-content:space-around}.phn-justify-between.sc-phn-drawer-header{-ms-flex-pack:justify;justify-content:space-between}.phn-flex-wrap.sc-phn-drawer-header{-ms-flex-wrap:wrap;flex-wrap:wrap}.sc-phn-drawer-header-h{display:block}.drawer-header.sc-phn-drawer-header{height:100%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.heading-items.sc-phn-drawer-header{margin-bottom:0.25rem;-ms-flex-align:center;align-items:center}.skeleton-headline.sc-phn-drawer-header{width:9.375rem;height:1.5rem;background:#d8d8db;border-radius:4px}.button-skeleton.sc-phn-drawer-header{margin-left:0.5rem;border-radius:0.25rem;height:1.5rem;width:1.5rem;background:#d8d8db}";

const DrawerHeader = /*@__PURE__*/ proxyCustomElement(class DrawerHeader extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.clickDrawerHeaderBack = createEvent(this, "clickDrawerHeaderBack", 7);
    this.clickDrawerHeaderClose = createEvent(this, "clickDrawerHeaderClose", 7);
    this.backButtonText = '';
    this.backButtonAnalyticsId = undefined;
    this.showBackButton = false;
    this.activeRoutingKey = undefined;
    this.breakpoint = undefined;
    this.receivedContent = false;
    this.locale = undefined;
    this.showSkeleton = true;
  }
  componentWillLoad() {
    this.waitForComponentsToLoad();
  }
  async waitForComponentsToLoad() {
    await componentsOnReady(this.el, new Timeout(5000));
    this.showSkeleton = !this.receivedContent;
  }
  sendDataLayerEvent() {
    globalDataLayerService.pushDataLayerEvent(EventActions.MENU_CLOSE_CLICK, {
      componentClick: {
        clickElementId: 'mainmenu.drawer.close',
        clickElementName: 'X',
        clickElementType: ClickElementTypes.Button,
        targetElement: 'level-0'
      },
      componentDisplay: {
        displayElementId: analyticsManager.calculateDisplayElementId(),
        displayElementType: analyticsManager.calculateDisplayElementType(this.activeRoutingKey, ElementTypes.closeButton),
        displayElementName: 'X'
      }
    });
  }
  render() {
    const topLevelRoutingKey = findTopLevelRoutingKey(this.activeRoutingKey);
    const isMobile = !isDesktop(this.breakpoint);
    const displayHeadlineContent = topLevelRoutingKey !== undefined
      ? getHeadlineText(navContentStore.state, this.activeRoutingKey, topLevelRoutingKey)
      : '';
    const modelType = displayHeadlineContent.includes('mainmenu.') ? displayHeadlineContent.split('mainmenu.')[1] : '';
    const subtext = getSubtext(topLevelRoutingKey, this.activeRoutingKey, this.locale);
    return (h("div", { class: "drawer-header" }, this.showBackButton ? (h(Fragment, null, h("phn-back-button", { class: "back-button", onClick: () => {
        this.clickDrawerHeaderBack.emit();
      }, analyticsId: this.backButtonAnalyticsId, text: isMobile ? '' : this.backButtonText, activeRoutingKey: this.activeRoutingKey, style: !this.showSkeleton ? {} : { display: 'none' } }), this.showSkeleton ? h("div", { class: "button-skeleton" }) : null)) : (h("div", { class: "spacer" })), isMobile ? (modelType === '' ? (h(Fragment, null, this.showSkeleton && this.showBackButton ? h("div", { class: "skeleton-headline" }) : null, h("phn-heading", { text: displayHeadlineContent, style: this.showSkeleton || !isString(displayHeadlineContent) ? { display: 'none' } : {}, class: "heading-items", subtext: subtext }))) : (h(Fragment, null, this.showSkeleton ? h("div", { class: "skeleton-headline" }) : null, h("phn-signature-heading", { text: modelType, subtext: subtext })))) : null, h(Fragment, null, h("phn-p-button-pure", { class: "close-button", icon: "close", hideLabel: "true", aria: { 'aria-label': 'close dialog' }, size: "small", style: !this.showSkeleton ? {} : { display: 'none' }, "data-test-id": "close-button", onClick: () => {
        this.sendDataLayerEvent();
        this.clickDrawerHeaderClose.emit();
      } }, "Close Dialog"), this.showSkeleton ? h("div", { class: "button-skeleton" }) : null)));
  }
  get el() { return this; }
  static get style() { return drawerHeaderCss; }
}, [2, "phn-drawer-header", {
    "backButtonText": [1, "back-button-text"],
    "backButtonAnalyticsId": [1, "back-button-analytics-id"],
    "showBackButton": [4, "show-back-button"],
    "activeRoutingKey": [1, "active-routing-key"],
    "breakpoint": [2],
    "receivedContent": [4, "received-content"],
    "locale": [1],
    "showSkeleton": [32]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["phn-drawer-header", "phn-back-button", "phn-heading", "phn-signature-heading"];
  components.forEach(tagName => { switch (tagName) {
    case "phn-drawer-header":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DrawerHeader);
      }
      break;
    case "phn-back-button":
      if (!customElements.get(tagName)) {
        defineCustomElement$3();
      }
      break;
    case "phn-heading":
      if (!customElements.get(tagName)) {
        defineCustomElement$2();
      }
      break;
    case "phn-signature-heading":
      if (!customElements.get(tagName)) {
        defineCustomElement$1();
      }
      break;
  } });
}
defineCustomElement();

export { DrawerHeader as D, defineCustomElement as d };

//# sourceMappingURL=drawer-header.js.map