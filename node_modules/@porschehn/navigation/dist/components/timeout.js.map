{"file":"timeout.js","mappings":";;AAIO,eAAe,iBAAiB,CACrC,MAA0B,EAC1B,OAAgB,EAChB,GAAG,SAAmB;EAEtB,IAAI,MAAM,KAAK,IAAI,EAAE;IACnB,OAAO,IAAI,CAAC;GACb;EACD,MAAM,cAAc,GAAG,OAAO,QAAiB;IAC7C,MAAM,EAAE,GAAG,MAAM,aAAa,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAEhE,IAAI,QAAQ,EAAyB,aAAzB,EAAE,uBAAF,EAAE,CAAyB,gBAAgB,CAAA,KAAK,UAAU,EAAE;MACtE,MAAO,EAAyB,CAAC,gBAAgB,EAAE,CAAC;KACrD;IAED,OAAO,EAAE,CAAC;GACX,CAAC;EAEF,MAAM,eAAe,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;EAElG,MAAM,KAAK,GAAG,IAAI,OAAO,CAAO,CAAC,OAAO,KAAK,OAAO,CAAC,GAAG,CAAC,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrF,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7D;;MC1Ba,OAAO;EAGlB,YAAoB,KAAa;IAAb,UAAK,GAAL,KAAK,CAAQ;IAFzB,UAAK,GAA0B,IAAI,CAAC;GAEP;EAErC,GAAG,CAAI,EAAoB;IACzB,IAAI,CAAC,MAAM,EAAE,CAAC;IAEd,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;MACtB,MAAM,EAAE,EAAE,CAAC;MACX,IAAI,CAAC,MAAM,EAAE,CAAC;KACf,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;GAChB;EAED,MAAM;IACJ,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;MACvB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;MAEzB,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,UAAU,EAAE;QAC1C,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;OACpB;MAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;KACnB;GACF;;;;;","names":[],"sources":["src/utility/ready.ts","src/utility/timeout.ts"],"sourcesContent":["import { HTMLStencilElement } from '@stencil/core/internal';\nimport windowService from '../services/window-service';\nimport { Timeout } from './timeout';\n\nexport async function componentsOnReady(\n  parent: HTMLElement | null,\n  timeout: Timeout,\n  ...selectors: string[]\n): Promise<HTMLElement[] | null> {\n  if (parent === null) {\n    return null;\n  }\n  const waitForElement = async (selector?: string) => {\n    const el = await windowService.waitForElement(parent, selector);\n\n    if (typeof (el as HTMLStencilElement)?.componentOnReady === 'function') {\n      await (el as HTMLStencilElement).componentOnReady();\n    }\n\n    return el;\n  };\n\n  const waitForElements = selectors.length > 0 ? selectors.map(waitForElement) : [waitForElement()];\n\n  const timer = new Promise<null>((resolve) => timeout.set(async () => resolve(null)));\n  return Promise.race([Promise.all(waitForElements), timer]);\n}\n","export class Timeout {\n  private timer: NodeJS.Timeout | null = null;\n\n  constructor(private delay: number) {}\n\n  set<T>(cb: () => Promise<T>): void {\n    this.cancel();\n\n    this.timer = setTimeout(async () => {\n      await cb();\n      this.cancel();\n    }, this.delay);\n  }\n\n  cancel(): void {\n    if (this.timer !== null) {\n      clearTimeout(this.timer);\n\n      if (typeof this.timer.unref === 'function') {\n        this.timer.unref();\n      }\n\n      this.timer = null;\n    }\n  }\n}\n"],"version":3}