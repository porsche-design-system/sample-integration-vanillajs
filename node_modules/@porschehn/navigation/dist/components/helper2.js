import { F as FOCUSABLE_ELEMENTS_SELECTOR, g as getHTMLElement } from './helper.js';

const AnimationSequences = {
  OPEN_DOUBLE_DRAWER: 'openDoubleDrawer',
  CLOSE_DOUBLE_DRAWER: 'closeDoubleDrawer',
  TRANSITION_SAME_LEVEL_DOUBLE_DRAWER: 'transitionSameLevelDoubleDrawer',
  TRANSITION_SAME_LEVEL_DOUBLE_DRAWER_REVERSE: 'transitionSameLevelDoubleDrawerReverse',
  TRANSITION_NEXT_LEVEL_DOUBLE_DRAWER: 'transitionNextLevelDoubleDrawer',
  TRANSITION_PREVIOUS_LEVEL_DOUBLE_DRAWER: 'transitionPreviousLevelDoubleDrawer',
  OPEN_SINGLE_DRAWER: 'openSingleDrawer',
  CLOSE_SINGLE_DRAWER: 'closeSingleDrawer',
  TRANSITION_NEXT_LEVEL_SINGLE_DRAWER: 'transitionNextLevelSingleDrawer',
  TRANSITION_PREVIOUS_LEVEL_SINGLE_DRAWER: 'transitionPreviousLevelSingleDrawer'
};

function getAllFocusableElements(element) {
  const htmlElements = [];
  element === null || element === void 0 ? void 0 : element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR).forEach((element) => {
    const htmlElement = getHTMLElement(element);
    if (htmlElement !== null) {
      htmlElements.push(htmlElement);
    }
  });
  return htmlElements;
}

export { AnimationSequences as A, getAllFocusableElements as g };

//# sourceMappingURL=helper2.js.map