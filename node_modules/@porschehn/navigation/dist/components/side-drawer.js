import { proxyCustomElement, HTMLElement, createEvent, h, Fragment } from '@stencil/core/internal/client';
import { d as getSideDrawerItems } from './analytics-manager.js';
import { d as dealerSearchResultsStore } from './dealer-search-results-store.js';
import { n as navContentStore } from './nav-content-store.js';
import { n as navStateStore } from './nav-state-store.js';
import { a as isString, y as isModelName } from './helper.js';
import { d as defineCustomElement$1 } from './side-drawer-item.js';

const sideDrawerCss = "@-webkit-keyframes slideDown{from{max-height:0}to{max-height:1000px}}@keyframes slideDown{from{max-height:0}to{max-height:1000px}}@-webkit-keyframes slideUp{from{max-height:1000px}to{max-height:0}}@keyframes slideUp{from{max-height:1000px}to{max-height:0}}@-webkit-keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@-webkit-keyframes slideRight{from{max-width:1000px}to{max-width:0}}@keyframes slideRight{from{max-width:1000px}to{max-width:0}}@-webkit-keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@-webkit-keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@-webkit-keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@-webkit-keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@-webkit-keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@-webkit-keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes fadeOut{0%{opacity:1}100%{opacity:0}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}.phn-flex-col.sc-phn-side-drawer{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.phn-flex-row.sc-phn-side-drawer{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}.phn-align-center.sc-phn-side-drawer{-ms-flex-align:center;align-items:center}.phn-justify-around.sc-phn-side-drawer{-ms-flex-pack:distribute;justify-content:space-around}.phn-justify-between.sc-phn-side-drawer{-ms-flex-pack:justify;justify-content:space-between}.phn-flex-wrap.sc-phn-side-drawer{-ms-flex-wrap:wrap;flex-wrap:wrap}.sc-phn-side-drawer-h{display:block;width:100%}.sc-phn-side-drawer-h .item-highlight.sc-phn-side-drawer{display:none}.sc-phn-side-drawer-h phn-side-drawer-item.sc-phn-side-drawer{margin-top:2.25rem}@media (min-width: 1000px){.sc-phn-side-drawer-h phn-side-drawer-item.sc-phn-side-drawer{margin-top:0.85rem}}@media (min-width: 1920px){.sc-phn-side-drawer-h phn-side-drawer-item.sc-phn-side-drawer{margin-top:1rem}}.sc-phn-side-drawer-h phn-side-drawer-item.models.sc-phn-side-drawer{margin-top:0.5rem}@media (min-width: 1920px){.sc-phn-side-drawer-h phn-side-drawer-item.models.sc-phn-side-drawer{margin-top:1rem}}.sc-phn-side-drawer-h phn-side-drawer-item.sc-phn-side-drawer:first-of-type{margin-top:0}";

var __rest = (undefined && undefined.__rest) || function (s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
const SideDrawer = /*@__PURE__*/ proxyCustomElement(class SideDrawer extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.sideDrawerItemClick = createEvent(this, "sideDrawerItemClick", 7);
    this.activeRoutingKey = undefined;
    this.locale = undefined;
  }
  render() {
    const { loggedInState, unreadMessagesCount, userConsent } = navStateStore.state;
    const sideDrawerItems = getSideDrawerItems(navContentStore.state, dealerSearchResultsStore.state, this.locale, loggedInState, unreadMessagesCount, this.activeRoutingKey, userConsent);
    return (h("nav", null, sideDrawerItems.map((_a) => {
      var { routingKeys } = _a, sideDrawerItem = __rest(_a, ["routingKeys"]);
      const isActive = routingKeys.includes(this.activeRoutingKey);
      return (h(Fragment, null, h("phn-side-drawer-item", Object.assign({ key: sideDrawerItem.elementId, onClick: () => {
          if (!isString(sideDrawerItem.link) && !isActive) {
            this.sideDrawerItemClick.emit(routingKeys);
          }
        }, isActive: isActive, class: isModelName(sideDrawerItem.text) ? 'models' : '' }, sideDrawerItem)), isActive ? h("div", { class: `item-highlight` }) : null));
    })));
  }
  static get style() { return sideDrawerCss; }
}, [2, "phn-side-drawer", {
    "activeRoutingKey": [1, "active-routing-key"],
    "locale": [1]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["phn-side-drawer", "phn-side-drawer-item"];
  components.forEach(tagName => { switch (tagName) {
    case "phn-side-drawer":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, SideDrawer);
      }
      break;
    case "phn-side-drawer-item":
      if (!customElements.get(tagName)) {
        defineCustomElement$1();
      }
      break;
  } });
}
defineCustomElement();

export { SideDrawer as S, defineCustomElement as d };

//# sourceMappingURL=side-drawer.js.map