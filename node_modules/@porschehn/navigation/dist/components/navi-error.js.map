{"file":"navi-error.js","mappings":"MAEa,SAAU,SAAQ,KAAK;EAGlC,YAAY,OAAe,EAAE,IAAmB;IAC9C,KAAK,CAAC,OAAO,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;;;IAKjB,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;GAClD;CACF;MAEY,cAAc,GAAG;EAC5B,QAAQ,EAAE,UAAU;EACpB,aAAa,EAAE,eAAe;EAC9B,UAAU,EAAE,YAAY;EACxB,OAAO,EAAE,SAAS;EAClB,KAAK,EAAE,OAAO;EACd,kBAAkB,EAAE,oBAAoB;EACxC,YAAY,EAAE,cAAc;EACnB;SAIK,eAAe,CAAC,YAAoB,EAAE,GAAU;EAC9D,IAAI,EAAE,GAAG,YAAY,SAAS,CAAC,EAAE;IAC/B,OAAO,YAAY,CAAC,KAAK,CAAC;GAC3B;EAED,QAAQ,GAAG,CAAC,IAAI;IACd,KAAK,cAAc,CAAC,QAAQ;MAC1B,OAAO,YAAY,CAAC,OAAO,CAAC;IAC9B,KAAK,cAAc,CAAC,aAAa;MAC/B,OAAO,YAAY,CAAC,YAAY,CAAC;IACnC,KAAK,cAAc,CAAC,UAAU;MAC5B,OAAO,YAAY,CAAC,SAAS,CAAC;IAChC,KAAK,cAAc,CAAC,OAAO;MACzB,OAAO,YAAY,CAAC,KAAK,CAAC;IAC5B,KAAK,cAAc,CAAC,KAAK;MACvB,OAAO,YAAY,CAAC,KAAK,CAAC;IAC5B,KAAK,cAAc,CAAC,kBAAkB;MACpC,OAAO,YAAY,CAAC,iBAAiB,CAAC;IACxC;MACE,OAAO,YAAY,CAAC,KAAK,CAAC;GAC7B;AACH;;;;","names":[],"sources":["src/utility/navi-error.ts"],"sourcesContent":["import { Errors } from '../entities/content';\n\nexport class NaviError extends Error {\n  type: NaviErrorType;\n\n  constructor(message: string, type: NaviErrorType) {\n    super(message);\n    this.type = type;\n\n    // This line fixes a bug/feature in typescript to do with extending built-in classes.\n    // Do not touch.\n    // Link: https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, NaviError.prototype);\n  }\n}\n\nexport const NaviErrorTypes = {\n  NO_INPUT: 'NO_INPUT',\n  INVALID_INPUT: 'INVALID_INPUT',\n  NO_RESULTS: 'NO_RESULTS',\n  GENERAL: 'GENERAL',\n  RETRY: 'RETRY',\n  GEOLOCATION_DENIED: 'GEOLOCATION_DENIED',\n  UNAUTHORIZED: 'UNAUTHORIZED'\n} as const;\n\nexport type NaviErrorType = (typeof NaviErrorTypes)[keyof typeof NaviErrorTypes];\n\nexport function getErrorMessage(errorContent: Errors, err: Error): string {\n  if (!(err instanceof NaviError)) {\n    return errorContent.wrong;\n  }\n\n  switch (err.type) {\n    case NaviErrorTypes.NO_INPUT:\n      return errorContent.noInput;\n    case NaviErrorTypes.INVALID_INPUT:\n      return errorContent.invalidInput;\n    case NaviErrorTypes.NO_RESULTS:\n      return errorContent.noResults;\n    case NaviErrorTypes.GENERAL:\n      return errorContent.wrong;\n    case NaviErrorTypes.RETRY:\n      return errorContent.retry;\n    case NaviErrorTypes.GEOLOCATION_DENIED:\n      return errorContent.geolocationDenied;\n    default:\n      return errorContent.wrong;\n  }\n}\n"],"version":3}