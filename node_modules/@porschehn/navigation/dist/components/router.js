import { h, Fragment, proxyCustomElement, HTMLElement, createEvent } from '@stencil/core/internal/client';
import { R as RoutingKeys, c as constructRoutingKey, f as findTopLevelRoutingKey, b as getLastRoutingSegment } from './routing-key.js';
import { n as navContentStore } from './nav-content-store.js';
import { a as isString, q as isDesktop, I as IsLoggedIn } from './helper.js';
import { c as getMenuContent } from './analytics-manager.js';
import { E as EventActions } from './global-data-layer-service.js';
import { n as navStateStore } from './nav-state-store.js';
import { f as filterWishlistItemsByAuthStatus, g as getIconNameByMenuItemId, a as getAvailableShopVariables } from './shop-helper.js';
import { d as defineCustomElement$f } from './autocomplete-search-field.js';
import { d as defineCustomElement$e } from './car-body-types-drawer.js';
import { d as defineCustomElement$d } from './dealer-details-drawer.js';
import { d as defineCustomElement$c } from './dealer-search-by-number-of-dealers.js';
import { d as defineCustomElement$b } from './dealer-search-form.js';
import { d as defineCustomElement$a } from './dealer-search-form-dropdown.js';
import { d as defineCustomElement$9 } from './dealer-search-form-geolocation.js';
import { d as defineCustomElement$8 } from './dealer-search-results.js';
import { d as defineCustomElement$7 } from './level-1.js';
import { d as defineCustomElement$6 } from './menu.js';
import { d as defineCustomElement$5 } from './menu-item.js';
import { d as defineCustomElement$4 } from './menu-item-card.js';
import { d as defineCustomElement$3 } from './models.js';
import { d as defineCustomElement$2 } from './myporsche-drawer.js';
import { d as defineCustomElement$1 } from './myporsche-login.js';

function replaceVariables(template, data) {
  const regex = /{(.*?)}/g;
  return ((template === null || template === void 0 ? void 0 : template.replace(regex, (_match, variable) => {
    const value = data[variable.trim()];
    return value !== undefined ? String(value) : '';
  })) || '');
}

function ShopSection({ activeRoutingKey, breakpoint, receivedContent, loginEvent }) {
  const showHeadline = !isDesktop(breakpoint);
  const displayedContent = getMenuContent(navContentStore.state, activeRoutingKey, RoutingKeys.SHOP);
  if (displayedContent === null) {
    return h("div", null);
  }
  const wishListAuthStatusList = IsLoggedIn(navStateStore.state.loggedInState)
    ? ['loggedIn', null]
    : ['loggedOut', null];
  const wishListItems = filterWishlistItemsByAuthStatus(displayedContent.additionalContent, wishListAuthStatusList);
  function emitLogin(id) {
    if (id === 'login')
      loginEvent.emit();
  }
  return (h(Fragment, null,
    h("phn-menu", { item: displayedContent, routingKey: activeRoutingKey, showHeadline: showHeadline, receivedContent: receivedContent }),
    activeRoutingKey === RoutingKeys.SHOP ? (h("div", { class: "wishlist-container", role: "list" }, wishListItems.map((childItem) => {
      return (h("phn-menu-item", { key: childItem.id, "data-id": childItem.id, size: 'x-small', class: !(isString(childItem.iconUrl) || isString(childItem.icon)) ? 'no-icon' : '', iconLeft: (isString(childItem.id) && getIconNameByMenuItemId(childItem.id)) ||
          childItem.icon ||
          childItem.iconUrl, elementId: constructRoutingKey(activeRoutingKey, childItem.id), analyticsId: childItem.id, text: replaceVariables(childItem.text, getAvailableShopVariables()), link: childItem.link, datalayerEventAction: isString(childItem.link) ? EventActions.NAVIGATION_LINK_CLICK : EventActions.NAVIGATION_CLICK, onClick: () => {
          emitLogin(childItem.id);
        }, role: "listitem" }));
    }))) : null));
}

function VehiclePurchaseSection({ activeRoutingKey, topLevelRoutingKey, breakpoint, receivedContent }) {
  const showHeadline = !isDesktop(breakpoint);
  const displayedContent = getMenuContent(navContentStore.state, activeRoutingKey, topLevelRoutingKey);
  /* istanbul ignore if */
  if (displayedContent === null) {
    return h("div", null);
  }
  return (h("phn-menu", { item: displayedContent, routingKey: activeRoutingKey, showHeadline: showHeadline, receivedContent: receivedContent }));
}

const routerCss = "@-webkit-keyframes transition-forward-in-animation{from{left:150%}to{left:0%}}@keyframes transition-forward-in-animation{from{left:150%}to{left:0%}}@-webkit-keyframes transition-backward-in-animation{from{left:-150%}to{left:0%}}@keyframes transition-backward-in-animation{from{left:-150%}to{left:0%}}@-webkit-keyframes single-drawer-transition-forward-in-animation{from{left:100%}to{left:0%}}@keyframes single-drawer-transition-forward-in-animation{from{left:100%}to{left:0%}}@-webkit-keyframes fade-in-animation{from{opacity:0;background-color:rgba(0, 0, 0, 0)}to{opacity:1;background-color:rgba(0, 0, 0, 0.6)}}@keyframes fade-in-animation{from{opacity:0;background-color:rgba(0, 0, 0, 0)}to{opacity:1;background-color:rgba(0, 0, 0, 0.6)}}@-webkit-keyframes slide-in-from-left-absolute{from{left:-1000px}to{left:0px}}@keyframes slide-in-from-left-absolute{from{left:-1000px}to{left:0px}}@-webkit-keyframes slideDown{from{max-height:0}to{max-height:1000px}}@keyframes slideDown{from{max-height:0}to{max-height:1000px}}@-webkit-keyframes slideUp{from{max-height:1000px}to{max-height:0}}@keyframes slideUp{from{max-height:1000px}to{max-height:0}}@-webkit-keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@-webkit-keyframes slideRight{from{max-width:1000px}to{max-width:0}}@keyframes slideRight{from{max-width:1000px}to{max-width:0}}@-webkit-keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@-webkit-keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@-webkit-keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@-webkit-keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@-webkit-keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@-webkit-keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes fadeOut{0%{opacity:1}100%{opacity:0}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}.transition-forward-animation-out.sc-phn-router{-webkit-transition:left 250ms;transition:left 250ms;position:relative !important;left:-150% !important}.transition-forward-animation-in.sc-phn-router{position:relative;-webkit-animation:transition-forward-in-animation 250ms;animation:transition-forward-in-animation 250ms}.transition-backward-animation-out.sc-phn-router{-webkit-transition:left 250ms;transition:left 250ms;position:relative !important;left:150% !important}.transition-backward-animation-in.sc-phn-router{position:relative !important;-webkit-animation:transition-backward-in-animation 250ms;animation:transition-backward-in-animation 250ms}.slide-out-to-right-fixed.sc-phn-router{-webkit-transition:left 400ms;transition:left 400ms;position:fixed;left:100% !important}.slide-in-from-right-fixed.sc-phn-router{position:fixed;-webkit-animation:single-drawer-transition-forward-in-animation 400ms;animation:single-drawer-transition-forward-in-animation 400ms}.phn-flex-col.sc-phn-router{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.phn-flex-row.sc-phn-router{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}.phn-align-center.sc-phn-router{-ms-flex-align:center;align-items:center}.phn-justify-around.sc-phn-router{-ms-flex-pack:distribute;justify-content:space-around}.phn-justify-between.sc-phn-router{-ms-flex-pack:justify;justify-content:space-between}.phn-flex-wrap.sc-phn-router{-ms-flex-wrap:wrap;flex-wrap:wrap}.sc-phn-router-h{display:block;-webkit-box-sizing:border-box;box-sizing:border-box}.sc-phn-router-h .wishlist-container.sc-phn-router{padding:1rem;background-color:#ffffff;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;gap:16px;border-radius:0.75rem;margin-top:3rem}@media (max-width: 759px){.sc-phn-router-h .wishlist-container.sc-phn-router{background-color:#EEEFF2}}.sc-phn-router-h .wishlist-container.sc-phn-router .no-icon.sc-phn-router{padding-left:1.75rem}";

const Router = /*@__PURE__*/ proxyCustomElement(class Router extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.loginEvent = createEvent(this, "loginEvent", 7);
    this.activeRoutingKey = undefined;
    this.breakpoint = undefined;
    this.locale = undefined;
    this.receivedContent = false;
  }
  render() {
    const { models, myPorsche, dealer } = navContentStore.state;
    const topLevelRoutingKey = findTopLevelRoutingKey(this.activeRoutingKey);
    const showHeadline = !isDesktop(this.breakpoint);
    switch (topLevelRoutingKey) {
      case RoutingKeys.DEALER_SEARCH: {
        const routingId = getLastRoutingSegment(this.activeRoutingKey);
        const dealerId = routingId !== topLevelRoutingKey ? routingId : '';
        if (isString(dealerId)) {
          return h("phn-dealer-details-drawer", { breakpoint: this.breakpoint, dealerId: dealerId, locale: this.locale });
        }
        return (h("phn-dealer-search-form", { breakpoint: this.breakpoint, dealer: dealer, locale: this.locale, showHeadline: showHeadline }));
      }
      case RoutingKeys.MY_PORSCHE: {
        if (myPorsche !== null) {
          return h("phn-myporsche-drawer", { class: "overlay-content" });
        }
        return h("div", null);
      }
      case RoutingKeys.SERIES:
      case RoutingKeys.MODELS: {
        const routingId = getLastRoutingSegment(this.activeRoutingKey);
        const activeModelsSeries = models.series.find((modelsSeries) => routingId === modelsSeries.id);
        if (activeModelsSeries !== undefined) {
          return (h("phn-car-body-types-drawer", { series: activeModelsSeries, breakpoint: this.breakpoint, activeRoutingKey: this.activeRoutingKey }));
        }
        return h("phn-models", { showHeadline: showHeadline, breakpoint: this.breakpoint });
      }
      case RoutingKeys.MORE:
      case RoutingKeys.EXPERIENCE:
      case RoutingKeys.SERVICES:
      case RoutingKeys.VEHICLE_PURCHASE: {
        return (h(VehiclePurchaseSection, { activeRoutingKey: this.activeRoutingKey, topLevelRoutingKey: topLevelRoutingKey, receivedContent: this.receivedContent, breakpoint: this.breakpoint }));
      }
      case RoutingKeys.SHOP:
        return (h(ShopSection, { activeRoutingKey: this.activeRoutingKey, receivedContent: this.receivedContent, breakpoint: this.breakpoint, loginEvent: this.loginEvent }));
      default: {
        return h("phn-level-1", { locale: this.locale, breakpoint: this.breakpoint });
      }
    }
  }
  static get style() { return routerCss; }
}, [2, "phn-router", {
    "activeRoutingKey": [1, "active-routing-key"],
    "breakpoint": [2],
    "locale": [1],
    "receivedContent": [4, "received-content"]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["phn-router", "phn-autocomplete-search-field", "phn-car-body-types-drawer", "phn-dealer-details-drawer", "phn-dealer-search-by-number-of-dealers", "phn-dealer-search-form", "phn-dealer-search-form-dropdown", "phn-dealer-search-form-geolocation", "phn-dealer-search-results", "phn-level-1", "phn-menu", "phn-menu-item", "phn-menu-item-card", "phn-models", "phn-myporsche-drawer", "phn-myporsche-login"];
  components.forEach(tagName => { switch (tagName) {
    case "phn-router":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, Router);
      }
      break;
    case "phn-autocomplete-search-field":
      if (!customElements.get(tagName)) {
        defineCustomElement$f();
      }
      break;
    case "phn-car-body-types-drawer":
      if (!customElements.get(tagName)) {
        defineCustomElement$e();
      }
      break;
    case "phn-dealer-details-drawer":
      if (!customElements.get(tagName)) {
        defineCustomElement$d();
      }
      break;
    case "phn-dealer-search-by-number-of-dealers":
      if (!customElements.get(tagName)) {
        defineCustomElement$c();
      }
      break;
    case "phn-dealer-search-form":
      if (!customElements.get(tagName)) {
        defineCustomElement$b();
      }
      break;
    case "phn-dealer-search-form-dropdown":
      if (!customElements.get(tagName)) {
        defineCustomElement$a();
      }
      break;
    case "phn-dealer-search-form-geolocation":
      if (!customElements.get(tagName)) {
        defineCustomElement$9();
      }
      break;
    case "phn-dealer-search-results":
      if (!customElements.get(tagName)) {
        defineCustomElement$8();
      }
      break;
    case "phn-level-1":
      if (!customElements.get(tagName)) {
        defineCustomElement$7();
      }
      break;
    case "phn-menu":
      if (!customElements.get(tagName)) {
        defineCustomElement$6();
      }
      break;
    case "phn-menu-item":
      if (!customElements.get(tagName)) {
        defineCustomElement$5();
      }
      break;
    case "phn-menu-item-card":
      if (!customElements.get(tagName)) {
        defineCustomElement$4();
      }
      break;
    case "phn-models":
      if (!customElements.get(tagName)) {
        defineCustomElement$3();
      }
      break;
    case "phn-myporsche-drawer":
      if (!customElements.get(tagName)) {
        defineCustomElement$2();
      }
      break;
    case "phn-myporsche-login":
      if (!customElements.get(tagName)) {
        defineCustomElement$1();
      }
      break;
  } });
}
defineCustomElement();

export { Router as R, defineCustomElement as d };

//# sourceMappingURL=router.js.map