{"file":"models.js","mappings":"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","names":[],"sources":["src/components/models/models.scss?tag=phn-models&encapsulation=scoped","src/components/models/models.tsx"],"sourcesContent":["@import '../../scss';\n\n:host {\n  display: block;\n\n  @include pds-media-query-min('s') {\n    margin-top: p-px-to-rem(-28px);\n  }\n\n  @include pds-media-query-min('xl') {\n    margin-top: p-px-to-rem(-36px);\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  .skeleton-headline {\n    width: auto;\n    height: p-px-to-rem(50px);\n    background: $pds-theme-light-contrast-low;\n    border-radius: 4px;\n  }\n\n  .series {\n    justify-content: center;\n\n    margin: 0 0 p-px-to-rem(8px) 0;\n\n    @include pds-media-query-min('s') {\n      margin: 0 0 p-px-to-rem(8px) 0;\n    }\n\n    @include pds-media-query-min('m') {\n      margin: 0 0 p-px-to-rem(4px) 0;\n    }\n\n    @include pds-media-query-min('xl') {\n      margin: 0 0 p-px-to-rem(8px)  0;\n    }\n\n    .image {\n      @include hoverZoom();\n\n      @include pds-media-query-min('base') {\n        width: p-px-to-rem(174px);\n      }\n\n      @include pds-media-query-min('xs') {\n        width: p-px-to-rem(239px);\n      }\n\n      @include pds-media-query-min('s') {\n        width: p-px-to-rem(174px);\n      }\n\n      @include pds-media-query-min('l') {\n        width: p-px-to-rem(196px);\n      }\n\n      @include pds-media-query-min('xxl') {\n        width: p-px-to-rem(239px);\n      }\n    }\n\n    &.skeleton {\n      margin: 0 0 p-px-to-rem(8px) 0;\n\n      @include pds-media-query-min('xs') {\n        margin: 0 0 p-px-to-rem(16px);\n      }\n\n      @include pds-media-query-min('xxl') {\n        margin: 0 0 p-px-to-rem(24px) 0;\n      }\n    }\n  }\n}\n","import { Component, Element, Event, EventEmitter, getAssetPath, h, Host, JSX, Prop, State } from '@stencil/core';\nimport { Series } from '../../entities/content';\nimport { getModelsRoutingKey } from '../../entities/routing-key';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { navStateStore } from '../../state/nav-state-store';\nimport { EventActions, MenuItemVariant } from '../../utility/constants';\nimport { getConfig, getImageSize } from '../../utility/helper';\n\n@Component({\n  tag: 'phn-models',\n  styleUrl: 'models.scss',\n  assetsDirs: ['series-assets'],\n  scoped: true\n})\nexport class Models {\n  @Prop() breakpoint!: number;\n  @Prop() showHeadline = false;\n  @State() showSkeleton = true;\n\n  @Element() el!: HTMLPhnModelsElement;\n\n  private seriesImagesLoaded = new Set<string>();\n  private seriesImagesNotLoaded = new Set<string>();\n\n  @Event({ bubbles: true }) mobileMenuItemClick!: EventEmitter<string[]>;\n\n  private showMenuWithModels(series: Series): void {\n    const modelsSeriesRoutingKey = getModelsRoutingKey(series.id);\n    this.mobileMenuItemClick.emit([modelsSeriesRoutingKey]);\n  }\n\n  private handleImageLoad(seriesId: string) {\n    const { models } = navContentStore.state;\n\n    this.seriesImagesLoaded.add(seriesId);\n\n    if (models.series.every(({ id }) => this.seriesImagesLoaded.has(id))) {\n      this.showSkeleton = false;\n    }\n  }\n\n  private handleImageLoadError(seriesId: string) {\n    this.handleImageLoad(seriesId);\n    this.seriesImagesNotLoaded.add(seriesId);\n  }\n\n  private getImageSource(image: string): string {\n    const assetPath = getAssetPath(`${getConfig(navStateStore.state.env).ASSETS_URL}/series-assets`);\n    const imageSize = getImageSize(this.breakpoint);\n    const imagePath = `${assetPath}/${imageSize}`;\n\n    return `${imagePath}/${image}.webp, ${imagePath}/${image}@2x.webp 2x`;\n  }\n\n  render(): JSX.Element {\n    const { models } = navContentStore.state;\n\n    return (\n      <Host>\n        <ul>\n          {models.series.map((modelsSeries) => (\n            <phn-menu-item\n              key={modelsSeries.id}\n              class={`series ${this.seriesImagesNotLoaded.has(modelsSeries.id) || this.showSkeleton ? 'skeleton' : ''}`}\n              elementId={getModelsRoutingKey(modelsSeries.id)}\n              analyticsId={modelsSeries.id}\n              text={modelsSeries.name}\n              subtext={modelsSeries.tags.map((tag) => tag.text).join(' | ')}\n              onClick={() => this.showMenuWithModels(modelsSeries)}\n              variant={MenuItemVariant.Model}\n              isModels={true}\n              datalayerEventAction={EventActions.MODEL_RANGE_CLICK}\n              role=\"listitem\"\n            >\n              <img\n                slot=\"media\"\n                class=\"image\"\n                srcSet={this.getImageSource(modelsSeries.image)}\n                alt={`${modelsSeries.name} Frontshot`}\n                onLoad={() => this.handleImageLoad(modelsSeries.id)}\n                onError={() => this.handleImageLoadError(modelsSeries.id)}\n              />\n            </phn-menu-item>\n          ))}\n        </ul>\n      </Host>\n    );\n  }\n}\n"],"version":3}