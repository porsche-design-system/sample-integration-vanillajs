import { h, Fragment, proxyCustomElement, HTMLElement, createEvent, Host } from '@stencil/core/internal/client';
import { i as getVehiclePurchaseRoutingKey, c as constructRoutingKey } from './routing-key.js';
import { E as EventActions } from './global-data-layer-service.js';
import { a as isString } from './helper.js';
import { c as componentsOnReady, T as Timeout } from './timeout.js';
import { f as finderStateStore } from './finder-state-store.js';
import { d as defineCustomElement$1 } from './menu-item.js';

function MenuItemCountIndicator({ count }) {
  if (count <= 0)
    return null;
  return (h("phn-p-tag", { slot: "suffix", class: "menu-item-count", color: "notification-info-soft" }, count));
}

function MenuItemLink({ content, count, showSkeleton }) {
  return content ? (h(Fragment, null,
    h("phn-menu-item", { elementId: getVehiclePurchaseRoutingKey(content.id), key: content.id, class: `${showSkeleton ? 'skeleton' : 'vehiclepurchase-link'}`, analyticsId: content.id, text: content.text, link: content.link, datalayerEventAction: EventActions.NAVIGATION_LINK_CLICK, role: "listitem" },
      h(MenuItemCountIndicator, { count: count })))) : null;
}

const menuCss = "@-webkit-keyframes transition-forward-in-animation{from{left:150%}to{left:0%}}@keyframes transition-forward-in-animation{from{left:150%}to{left:0%}}@-webkit-keyframes transition-backward-in-animation{from{left:-150%}to{left:0%}}@keyframes transition-backward-in-animation{from{left:-150%}to{left:0%}}@-webkit-keyframes single-drawer-transition-forward-in-animation{from{left:100%}to{left:0%}}@keyframes single-drawer-transition-forward-in-animation{from{left:100%}to{left:0%}}@-webkit-keyframes fade-in-animation{from{opacity:0;background-color:rgba(0, 0, 0, 0)}to{opacity:1;background-color:rgba(0, 0, 0, 0.6)}}@keyframes fade-in-animation{from{opacity:0;background-color:rgba(0, 0, 0, 0)}to{opacity:1;background-color:rgba(0, 0, 0, 0.6)}}@-webkit-keyframes slide-in-from-left-absolute{from{left:-1000px}to{left:0px}}@keyframes slide-in-from-left-absolute{from{left:-1000px}to{left:0px}}@-webkit-keyframes slideDown{from{max-height:0}to{max-height:1000px}}@keyframes slideDown{from{max-height:0}to{max-height:1000px}}@-webkit-keyframes slideUp{from{max-height:1000px}to{max-height:0}}@keyframes slideUp{from{max-height:1000px}to{max-height:0}}@-webkit-keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@-webkit-keyframes slideRight{from{max-width:1000px}to{max-width:0}}@keyframes slideRight{from{max-width:1000px}to{max-width:0}}@-webkit-keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@-webkit-keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@-webkit-keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@-webkit-keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@-webkit-keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@-webkit-keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes fadeOut{0%{opacity:1}100%{opacity:0}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}.transition-forward-animation-out.sc-phn-menu{-webkit-transition:left 250ms;transition:left 250ms;position:relative !important;left:-150% !important}.transition-forward-animation-in.sc-phn-menu{position:relative;-webkit-animation:transition-forward-in-animation 250ms;animation:transition-forward-in-animation 250ms}.transition-backward-animation-out.sc-phn-menu{-webkit-transition:left 250ms;transition:left 250ms;position:relative !important;left:150% !important}.transition-backward-animation-in.sc-phn-menu{position:relative !important;-webkit-animation:transition-backward-in-animation 250ms;animation:transition-backward-in-animation 250ms}.slide-out-to-right-fixed.sc-phn-menu{-webkit-transition:left 400ms;transition:left 400ms;position:fixed;left:100% !important}.slide-in-from-right-fixed.sc-phn-menu{position:fixed;-webkit-animation:single-drawer-transition-forward-in-animation 400ms;animation:single-drawer-transition-forward-in-animation 400ms}.phn-flex-col.sc-phn-menu{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.phn-flex-row.sc-phn-menu{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}.phn-align-center.sc-phn-menu{-ms-flex-align:center;align-items:center}.phn-justify-around.sc-phn-menu{-ms-flex-pack:distribute;justify-content:space-around}.phn-justify-between.sc-phn-menu{-ms-flex-pack:justify;justify-content:space-between}.phn-flex-wrap.sc-phn-menu{-ms-flex-wrap:wrap;flex-wrap:wrap}.sc-phn-menu-h{display:block}.sc-phn-menu-h .skeleton.sc-phn-menu{width:auto;height:1.5rem;background:#d8d8db;border-radius:4px}.sc-phn-menu-h .skeleton-headline.sc-phn-menu{width:auto;height:3.125rem;background:#d8d8db;border-radius:4px}.sc-phn-menu-h ul.sc-phn-menu{padding:0;margin:0}.sc-phn-menu-h phn-headline.sc-phn-menu{margin-bottom:2.25rem}.sc-phn-menu-h phn-menu-item.sc-phn-menu{margin-top:1.5rem}@media (min-width: 480px){.sc-phn-menu-h phn-menu-item.sc-phn-menu{margin-top:1.25rem}.sc-phn-menu-h phn-menu-item.sc-phn-menu:first-of-type{margin:0}}@media (min-width: 1300px){.sc-phn-menu-h phn-menu-item.sc-phn-menu{margin-top:2rem}}.sc-phn-menu-h phn-menu-item.sc-phn-menu .vehiclepurchase-link.sc-phn-menu{margin-top:1.5rem}@media (min-width: 480px){.sc-phn-menu-h phn-menu-item.sc-phn-menu .vehiclepurchase-link.sc-phn-menu{margin-top:1.25rem}}@media (min-width: 1300px){.sc-phn-menu-h phn-menu-item.sc-phn-menu .vehiclepurchase-link.sc-phn-menu{margin-top:1.875rem}}.sc-phn-menu-h phn-menu-item.sc-phn-menu .vehiclepurchase-link.sc-phn-menu .menu-item-count.sc-phn-menu{margin-left:1rem}";

const Menu = /*@__PURE__*/ proxyCustomElement(class Menu extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.mobileMenuItemClick = createEvent(this, "mobileMenuItemClick", 6);
    this.savedVehiclesPosition = 3;
    this.routingKey = undefined;
    this.item = undefined;
    this.showHeadline = true;
    this.receivedContent = false;
    this.showSkeleton = true;
  }
  componentWillLoad() {
    this.waitForComponentsToLoad();
  }
  async waitForComponentsToLoad() {
    await componentsOnReady(this.el, new Timeout(5000));
    this.showSkeleton = !this.receivedContent;
  }
  showMenu(childItem) {
    if (!isString(childItem.link)) {
      this.mobileMenuItemClick.emit([constructRoutingKey(this.routingKey, childItem.id)]);
    }
  }
  getSavedVehiclesContent(content) {
    const savedVehicles = content.savedVehicles;
    if (savedVehicles !== undefined) {
      return savedVehicles;
    }
    return null;
  }
  render() {
    const displayedItem = this.item.children.length === 1 ? this.item.children[0] : this.item;
    const savedVehicles = this.getSavedVehiclesContent(this.item);
    const { savedVehiclesCount } = finderStateStore.state;
    const menuItems = displayedItem.children.map((childItem) => (h("phn-menu-item", { key: childItem.id, class: `${this.showSkeleton ? 'skeleton' : ''}`, elementId: constructRoutingKey(this.routingKey, childItem.id), iconRight: childItem.children.length > 0 && !this.showSkeleton ? 'arrow-head-right' : '', analyticsId: childItem.id, text: childItem.text, link: childItem.link, datalayerEventAction: isString(childItem.link) ? EventActions.NAVIGATION_LINK_CLICK : EventActions.NAVIGATION_CLICK, onClick: () => this.showMenu(childItem), role: "listitem" })));
    return (h(Host, { role: "list" }, h("ul", null, menuItems, savedVehicles
      ? menuItems.splice(this.savedVehiclesPosition, 0, h(MenuItemLink, { content: savedVehicles, count: savedVehiclesCount, showSkeleton: this.showSkeleton }))
      : null)));
  }
  get el() { return this; }
  static get style() { return menuCss; }
}, [2, "phn-menu", {
    "routingKey": [1, "routing-key"],
    "item": [16],
    "showHeadline": [4, "show-headline"],
    "receivedContent": [4, "received-content"],
    "showSkeleton": [32]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["phn-menu", "phn-menu-item"];
  components.forEach(tagName => { switch (tagName) {
    case "phn-menu":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, Menu);
      }
      break;
    case "phn-menu-item":
      if (!customElements.get(tagName)) {
        defineCustomElement$1();
      }
      break;
  } });
}
defineCustomElement();

export { Menu as M, defineCustomElement as d };

//# sourceMappingURL=menu.js.map