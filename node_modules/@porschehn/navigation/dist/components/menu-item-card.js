import { proxyCustomElement, HTMLElement, h, Fragment, Host } from '@stencil/core/internal/client';
import { E as EventActions, C as ClickElementTypes } from './global-data-layer-service.js';
import { a as getHTMLElement, b as isString } from './helper.js';
import { s as sendDataLayerEvent } from './data-layer-event-sender.js';

const menuItemCardCss = "@-webkit-keyframes transition-forward-in-animation{from{left:150%}to{left:0%}}@keyframes transition-forward-in-animation{from{left:150%}to{left:0%}}@-webkit-keyframes transition-backward-in-animation{from{left:-150%}to{left:0%}}@keyframes transition-backward-in-animation{from{left:-150%}to{left:0%}}@-webkit-keyframes single-drawer-transition-forward-in-animation{from{left:100%}to{left:0%}}@keyframes single-drawer-transition-forward-in-animation{from{left:100%}to{left:0%}}@-webkit-keyframes fade-in-animation{from{opacity:0;background-color:rgba(0, 0, 0, 0)}to{opacity:1;background-color:rgba(0, 0, 0, 0.6)}}@keyframes fade-in-animation{from{opacity:0;background-color:rgba(0, 0, 0, 0)}to{opacity:1;background-color:rgba(0, 0, 0, 0.6)}}@-webkit-keyframes slide-in-from-left-absolute{from{left:-1000px}to{left:0px}}@keyframes slide-in-from-left-absolute{from{left:-1000px}to{left:0px}}@-webkit-keyframes slideDown{from{max-height:0}to{max-height:1000px}}@keyframes slideDown{from{max-height:0}to{max-height:1000px}}@-webkit-keyframes slideUp{from{max-height:1000px}to{max-height:0}}@keyframes slideUp{from{max-height:1000px}to{max-height:0}}@-webkit-keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@-webkit-keyframes slideRight{from{max-width:1000px}to{max-width:0}}@keyframes slideRight{from{max-width:1000px}to{max-width:0}}@-webkit-keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@-webkit-keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@-webkit-keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@-webkit-keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@-webkit-keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@-webkit-keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes fadeOut{0%{opacity:1}100%{opacity:0}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}.transition-forward-animation-out.sc-phn-menu-item-card{-webkit-transition:left 250ms;transition:left 250ms;position:relative !important;left:-150% !important}.transition-forward-animation-in.sc-phn-menu-item-card{position:relative;-webkit-animation:transition-forward-in-animation 250ms;animation:transition-forward-in-animation 250ms}.transition-backward-animation-out.sc-phn-menu-item-card{-webkit-transition:left 250ms;transition:left 250ms;position:relative !important;left:150% !important}.transition-backward-animation-in.sc-phn-menu-item-card{position:relative !important;-webkit-animation:transition-backward-in-animation 250ms;animation:transition-backward-in-animation 250ms}.slide-out-to-right-fixed.sc-phn-menu-item-card{-webkit-transition:left 400ms;transition:left 400ms;position:fixed;left:100% !important}.slide-in-from-right-fixed.sc-phn-menu-item-card{position:fixed;-webkit-animation:single-drawer-transition-forward-in-animation 400ms;animation:single-drawer-transition-forward-in-animation 400ms}.phn-flex-col.sc-phn-menu-item-card{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.phn-flex-row.sc-phn-menu-item-card{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}.phn-align-center.sc-phn-menu-item-card{-ms-flex-align:center;align-items:center}.phn-justify-around.sc-phn-menu-item-card{-ms-flex-pack:distribute;justify-content:space-around}.phn-justify-between.sc-phn-menu-item-card{-ms-flex-pack:justify;justify-content:space-between}.phn-flex-wrap.sc-phn-menu-item-card{-ms-flex-wrap:wrap;flex-wrap:wrap}.sc-phn-menu-item-card-h{display:block;padding:1.1875rem;margin-top:1rem;border-radius:8px;background-color:rgba(148, 149, 152, 0.18);-webkit-transition:background-color 0.24s ease;transition:background-color 0.24s ease;cursor:pointer}.sc-phn-menu-item-card-h button.sc-phn-menu-item-card{all:unset;display:block;width:100%}.skeleton.sc-phn-menu-item-card-h{pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background:#d8d8db;border-radius:4px}.skeleton.sc-phn-menu-item-card-h *.sc-phn-menu-item-card{visibility:hidden}@media (min-width: 760px){.sc-phn-menu-item-card-h{background-color:#fff}}@media (min-width: 760px){.sc-phn-menu-item-card-h:hover{background-color:rgba(148, 149, 152, 0.18)}}.sc-phn-menu-item-card-h a.sc-phn-menu-item-card{text-decoration:none}.sc-phn-menu-item-card-h .subtext.sc-phn-menu-item-card{color:#010205}.sc-phn-menu-item-card-h .dealer-card-item.sc-phn-menu-item-card{font-size:16px;font-family:\"Porsche Next\";font-style:normal;font-weight:400;line-height:24px;color:#010205;word-break:break-word;white-space:pre-line}.sc-phn-menu-item-card-h .title-container.sc-phn-menu-item-card{width:100%;margin:0}.sc-phn-menu-item-card-h .title-container.sc-phn-menu-item-card phn-p-heading.sc-phn-menu-item-card{word-break:break-word;white-space:pre-line}.sc-phn-menu-item-card-h .title-container.sc-phn-menu-item-card phn-p-icon.sc-phn-menu-item-card{margin-left:1rem}";

const MenuItemCard = /*@__PURE__*/ proxyCustomElement(class MenuItemCard extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.text = undefined;
    this.analyticsId = undefined;
    this.subtext = '';
    this.elementId = '';
    this.link = '';
    this.datalayerEventAction = EventActions.NAVIGATION_CLICK;
    this.customDatalayerProperties = {};
    this.target = '_self';
    this.iconLeft = '';
  }
  handleKeyDown(e) {
    var _a;
    if (e.key === 'Enter') {
      const anchorElement = (_a = getHTMLElement(e.target)) === null || _a === void 0 ? void 0 : _a.querySelector('a');
      const targetElement = anchorElement ? anchorElement : getHTMLElement(e.target);
      if (targetElement) {
        targetElement.click();
        !anchorElement ? this.sendDataLayerEvent(ClickElementTypes.Button, this.elementId) : null;
      }
    }
  }
  sendDataLayerEvent(clickElementType, elementId) {
    sendDataLayerEvent({
      analyticsId: this.analyticsId,
      text: this.text,
      elementId,
      clickElementType,
      link: this.link,
      customDatalayerProperties: this.customDatalayerProperties,
      datalayerEventAction: this.datalayerEventAction
    });
  }
  renderTitle() {
    return (h("div", { class: "phn-flex-row phn-align-center phn-justify-between title-container" }, this.elementId ? (h("phn-p-text", { className: 'dealer-card-item' }, this.text)) : (h("phn-p-heading", { tag: "h3", size: "medium" }, this.text)), isString(this.iconLeft) ? h("phn-p-icon", { name: this.iconLeft }) : null));
  }
  renderSubtitle() {
    if (!isString(this.subtext)) {
      return null;
    }
    return (h("phn-p-text", { class: 'subtext', color: "contrast-medium", weight: "regular", size: "xx-small", tag: "div", ellipsis: "true", "data-test-id": "subtext" }, this.subtext));
  }
  render() {
    const body = (h(Fragment, null, h("div", { class: "texts" }, this.renderTitle(), this.renderSubtitle()), h("slot", null)));
    if (isString(this.link))
      return (h("a", { tabIndex: -1, onClick: () => {
          this.sendDataLayerEvent(ClickElementTypes.Link, this.elementId);
        }, class: "card-link", href: this.link, target: this.target }, body));
    return (h(Host, null, h("button", { tabIndex: -1, onClick: () => {
        this.sendDataLayerEvent(ClickElementTypes.Button, this.elementId);
      } }, body)));
  }
  get el() { return this; }
  static get style() { return menuItemCardCss; }
}, [6, "phn-menu-item-card", {
    "text": [1],
    "analyticsId": [1, "analytics-id"],
    "subtext": [1],
    "elementId": [1, "element-id"],
    "link": [1],
    "datalayerEventAction": [1, "datalayer-event-action"],
    "customDatalayerProperties": [16],
    "target": [1],
    "iconLeft": [1, "icon-left"]
  }, [[0, "keydown", "handleKeyDown"]]]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["phn-menu-item-card"];
  components.forEach(tagName => { switch (tagName) {
    case "phn-menu-item-card":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, MenuItemCard);
      }
      break;
  } });
}
defineCustomElement();

export { MenuItemCard as M, defineCustomElement as d };

//# sourceMappingURL=menu-item-card.js.map