{"version":3,"names":["handleAnimationRouting","exports","actions","OPENING","openingAction","CLOSING","closingAction","FORWARD","forwardAction","BACKWARDS","backwardAction","UNCHANGED","unchangedAction","conditionToExecute","getSingleDrawerAction","isOpening","isClosing","isAnimatingForward","isAnimatingBackward","animationManager","play","AnimationSequences","OPEN_SINGLE_DRAWER","nextRoute","currentRoute","getCurrentRoute","CLOSE_SINGLE_DRAWER","then","getAnimatedRoute","setTimeout","TRANSITION_NEXT_LEVEL_SINGLE_DRAWER","_a","_b","TRANSITION_PREVIOUS_LEVEL_SINGLE_DRAWER","isPlayingSingleDrawerAnimation","singleDrawerAnimationSequences","some","sequence","isPlaying","e","_c","routerStore","state","routingKeyHistory","routingKeyPointer","animatingPointer","goTo","routes","_i","arguments","length","newHistory","__spreadArray","RoutingKeys","MAIN_MENU","back","findTopLevelRoutingKey","DEALER_SEARCH","dealerSearchResultsStore","savedDealerCookie","pop","isNavigatingBackwards","addRoute","newRoute","isDesktop","windowService","getBreakpoint","dispatchEvent","bubbles","cancelable","detail","constructRoutingKey","apply","reset","RoutingKeyPointers","LEVEL_ZERO","isOpened","isClosed","syncAnimation","showBackButton","section","sectionKey","indexOf","LEVEL_TWO"],"sources":["src/components/single-drawer/animations/animations-controller.ts","src/services/routing-manager.ts"],"sourcesContent":["import animationManager from '../../../services/animations/animation-manager';\nimport { AnimationSequences, AnimationSequencesType } from '../../../utility/constants';\nimport {\n  getAnimatedRoute,\n  getCurrentRoute,\n  isAnimatingBackward,\n  isAnimatingForward,\n  isClosing,\n  isOpening\n} from '../../../services/routing-manager';\n\nexport const handleAnimationRouting = (): AnimationRouting => {\n  const actions: Record<Operations, () => AnimationRouting> = {\n    OPENING: openingAction,\n    CLOSING: closingAction,\n    FORWARD: forwardAction,\n    BACKWARDS: backwardAction,\n    UNCHANGED: unchangedAction\n  };\n\n  const conditionToExecute = getSingleDrawerAction();\n\n  return actions[conditionToExecute]();\n};\n\ntype Operations = 'OPENING' | 'CLOSING' | 'FORWARD' | 'BACKWARDS' | 'UNCHANGED';\nfunction getSingleDrawerAction(): Operations {\n  if (isOpening()) {\n    return 'OPENING';\n  }\n  if (isClosing()) {\n    return 'CLOSING';\n  }\n  if (isAnimatingForward()) {\n    return 'FORWARD';\n  }\n  if (isAnimatingBackward()) {\n    return 'BACKWARDS';\n  }\n  return 'UNCHANGED';\n}\n\ntype AnimationRouting = { nextRoute: string; currentRoute: string };\n\nconst openingAction = (): AnimationRouting => {\n  animationManager.play(AnimationSequences.OPEN_SINGLE_DRAWER);\n\n  return {\n    nextRoute: '',\n    currentRoute: getCurrentRoute()\n  };\n};\n\nconst closingAction = (): AnimationRouting => {\n  animationManager.play(AnimationSequences.CLOSE_SINGLE_DRAWER).then(() => {\n    // TODO: Focus on burger button if using the keyboard\n  });\n\n  return {\n    nextRoute: getCurrentRoute() || '',\n    currentRoute: getAnimatedRoute() || ''\n  };\n};\n\nconst forwardAction = (): AnimationRouting => {\n  setTimeout(() => {\n    animationManager.play(AnimationSequences.TRANSITION_NEXT_LEVEL_SINGLE_DRAWER);\n  });\n\n  return {\n    nextRoute: getCurrentRoute() ?? '',\n    currentRoute: getAnimatedRoute() ?? ''\n  };\n};\n\nconst backwardAction = (): AnimationRouting => {\n  if (getCurrentRoute() !== '') {\n    setTimeout(() => {\n      animationManager.play(AnimationSequences.TRANSITION_PREVIOUS_LEVEL_SINGLE_DRAWER);\n    });\n  }\n\n  return {\n    nextRoute: getAnimatedRoute() ?? '',\n    currentRoute: getCurrentRoute() ?? ''\n  };\n};\n\nconst unchangedAction = (): AnimationRouting => {\n  return {\n    nextRoute: '',\n    currentRoute: getCurrentRoute()\n  };\n};\n\nexport const isPlayingSingleDrawerAnimation = (): boolean => {\n  try {\n    const singleDrawerAnimationSequences: AnimationSequencesType[] = [\n      AnimationSequences.OPEN_SINGLE_DRAWER,\n      AnimationSequences.CLOSE_SINGLE_DRAWER,\n      AnimationSequences.TRANSITION_NEXT_LEVEL_SINGLE_DRAWER,\n      AnimationSequences.TRANSITION_PREVIOUS_LEVEL_SINGLE_DRAWER\n    ];\n\n    return singleDrawerAnimationSequences.some((sequence) => {\n      try {\n        return animationManager.isPlaying(sequence);\n      } catch {\n        return false;\n      }\n    });\n  } catch (e) {\n    return false;\n  }\n};\n","import { routerStore } from '../state/router-store';\nimport { constructRoutingKey, findTopLevelRoutingKey, RoutingKeyPointers, RoutingKeys } from '../entities/routing-key';\nimport { dispatchEvent, isDesktop } from '../utility/helper';\nimport windowService from './window-service';\nimport { dealerSearchResultsStore } from '../state/dealer-search-results-store';\nimport { isPlayingSingleDrawerAnimation } from '../components/single-drawer/animations/animations-controller';\n\nexport const getCurrentRoute = (): string => {\n  const { routingKeyHistory, routingKeyPointer } = routerStore.state;\n  return routingKeyHistory[routingKeyPointer] || '';\n};\n\nexport const getAnimatedRoute = (): string => {\n  const { routingKeyHistory, animatingPointer } = routerStore.state;\n  return routingKeyHistory[animatingPointer] || '';\n};\n\nexport const goTo = (...routes: string[]): void => {\n  const newHistory = [RoutingKeys.MAIN_MENU, ...routes];\n  routerStore.state.routingKeyPointer = routes.length;\n  routerStore.state.routingKeyHistory = newHistory;\n};\n\nexport const back = (): void => {\n  if (!isPlayingSingleDrawerAnimation()) {\n    if (findTopLevelRoutingKey(getCurrentRoute()) === RoutingKeys.DEALER_SEARCH) {\n      dealerSearchResultsStore.state.savedDealerCookie = null;\n    }\n    routerStore.state.routingKeyPointer = routerStore.state.routingKeyPointer - 1;\n  }\n};\n\nexport const pop = (): void => {\n  if (isNavigatingBackwards()) routerStore.state.routingKeyHistory.pop();\n};\n\nexport const addRoute = (newRoute: string[]): void => {\n  if (isDesktop(windowService.getBreakpoint())) {\n    dispatchEvent('phn-router', 'mobileMenuItemClick', {\n      bubbles: true,\n      cancelable: false,\n      detail: [constructRoutingKey(getCurrentRoute(), ...newRoute)]\n    });\n  } else {\n    const newHistory = [...routerStore.state.routingKeyHistory, constructRoutingKey(getCurrentRoute(), ...newRoute)];\n    routerStore.state.routingKeyPointer = newHistory.length - 1;\n    routerStore.state.routingKeyHistory = newHistory;\n  }\n};\n\nexport const reset = (): void => {\n  routerStore.state.routingKeyPointer = -1;\n};\n\nexport const isNavigatingBackwards = (): boolean => {\n  return routerStore.state.routingKeyPointer < routerStore.state.routingKeyHistory.length - 1;\n};\n\nexport const isAnimating = (): boolean => {\n  const { routingKeyPointer, animatingPointer } = routerStore.state;\n  return routingKeyPointer !== animatingPointer;\n};\n\n//____________ANIMATIONS______________//\n\nexport const isAnimatingForward = (): boolean => {\n  return routerStore.state.routingKeyPointer > routerStore.state.animatingPointer;\n};\n\nexport const isAnimatingBackward = (): boolean => {\n  return routerStore.state.routingKeyPointer < routerStore.state.animatingPointer;\n};\n\nexport const isOpening = (): boolean => {\n  return (\n    routerStore.state.animatingPointer === RoutingKeyPointers.LEVEL_ZERO && routerStore.state.routingKeyPointer >= 0\n  );\n};\n\nexport const isOpened = (): boolean => {\n  return !isClosed();\n};\n\nexport const isClosed = (): boolean => {\n  return (\n    routerStore.state.routingKeyPointer === RoutingKeyPointers.LEVEL_ZERO &&\n    routerStore.state.animatingPointer === RoutingKeyPointers.LEVEL_ZERO\n  );\n};\nexport const isClosing = (): boolean => {\n  return routerStore.state.routingKeyPointer === -1 && routerStore.state.animatingPointer >= 0;\n};\n\nexport const syncAnimation = () => {\n  routerStore.state.animatingPointer = routerStore.state.routingKeyPointer;\n};\n\nexport const showBackButton = (section: string): boolean => {\n  const sectionKey = routerStore.state.routingKeyHistory.indexOf(section);\n\n  return sectionKey >= RoutingKeyPointers.LEVEL_TWO;\n};\n"],"mappings":"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"}