{"version":3,"names":["shrinkElement","el","progress","to","style","width","growElement","slideOutToRightRelative","from","right","position","slideOutToLeftRelative","left","slideInFromLeftRelative","slideInFromRightRelative","slideInFromRight","slideInFromLeft","slideOutToRight","slideOutToLeft","slideInFromRightFixed","slideOutToRightFixed","slideInFromLeftFixed","slideOutToLeftFixed","fadeOut","opacity","fadeIn","fadeOutBackdrop","backgroundColor","fadeInBackdrop","AnimationsAction","resetStyle","removeAttribute","getAnimationEffect","effectName","timingFunctions","easeInOutSin","timeFraction","Math","cos","PI","easeInOutQuad","linear","round","cubicBezierStart","cubicBezier","cubicBezierEnd","animationPromiseGenerator","animation","duration","cleanUpAfterAnimation","effect","__rest","Promise","resolve","animationFrame","timeout","setTimeout","cancelAnimationFrame","finishAnimation","playEffect","clearTimeout","maybePromise","isPromise","then","start","performance","now","name","animate","time","timingFunction","Number","EPSILON","ANIMATION_HAS_FINISHED","ANIMATION_ON_PROGRESS","windowService","requestAnimationFrame","t","initial","p1","p2","final","sequences","rootElement","initialize","element","register","sequenceIdentifier","animationSequence","reset","Object","keys","forEach","key","async","play","sequence","undefined","_","reject","Error","running","promise","value","applyCurrentAnimationSequenceStep","finishAnimationSequence","currentStepIndex","_a","call","steps","length","sequenceStep","promises","push","executeAnimation","all","error","onStart","onEnd","elementSelector","animatedElements","Array","querySelectorAll","animationExecutors","animationPromiseEffect","isPlaying","makeSequence","sequenceSteps","animationDefaults","map","step","assign","animationManager"],"sources":["src/services/animations/animation-actions.ts","src/services/animations/animation-effects.ts","src/services/animations/animation-manager.ts"],"sourcesContent":["/* istanbul ignore file */\n\nimport { EffectType } from './animation-effects';\n\nconst shrinkElement = (el: HTMLElement, progress: number, { to = 100 }: EffectType): void => {\n  el.style.width = `${(1 - progress) * to}%`;\n};\n\nconst growElement = (el: HTMLElement, progress: number, { to = 100 }: EffectType): void => {\n  el.style.width = `${progress * to}%`;\n};\n\nconst slideOutToRightRelative = (el: HTMLElement, progress: number, { from = 0, to = -100 }: EffectType): void => {\n  el.style.right = `calc(${progress * to + from}%)`;\n  el.style.position = 'relative';\n};\n\nconst slideOutToLeftRelative = (el: HTMLElement, progress: number, { from = 0, to = -100 }: EffectType): void => {\n  el.style.left = `calc(${progress * to + from}%)`;\n  el.style.position = 'relative';\n};\n\nconst slideInFromLeftRelative = (el: HTMLElement, progress: number, { from = -100, to = 0 }: EffectType): void => {\n  el.style.left = `calc(${(1 - progress) * from + to}%)`;\n  el.style.position = 'relative';\n};\n\nconst slideInFromRightRelative = (el: HTMLElement, progress: number, { from = -100, to = 0 }: EffectType): void => {\n  el.style.right = `calc(${(1 - progress) * from + to}%)`;\n  el.style.position = 'relative';\n};\n\nconst slideInFromRight = (el: HTMLElement, progress: number, { from = -100, to = 0 }: EffectType): void => {\n  el.style.right = `${(1 - progress) * from + to}px`;\n};\n\nconst slideInFromLeft = (el: HTMLElement, progress: number, { from = -100, to = 0 }: EffectType): void => {\n  el.style.left = `${(1 - progress) * from + to}px`;\n};\n\nconst slideOutToRight = (el: HTMLElement, progress: number, { from = 0, to = -100 }: EffectType): void => {\n  el.style.right = `${progress * to + from}px`;\n};\n\nconst slideOutToLeft = (el: HTMLElement, progress: number, { from = 0, to = -100 }: EffectType): void => {\n  el.style.left = `${progress * to + from}px`;\n};\n\nconst slideInFromRightFixed = (el: HTMLElement, progress: number, { from = -100, to = 0 }: EffectType) => {\n  el.style.right = `calc(${(1 - progress) * from + to}%)`;\n  el.style.position = 'fixed';\n};\n\nconst slideOutToRightFixed = (el: HTMLElement, progress: number, { from = 0, to = -100 }: EffectType): void => {\n  el.style.right = `calc(${progress * to + from}%)`;\n  el.style.position = 'fixed';\n};\n\nconst slideInFromLeftFixed = (el: HTMLElement, progress: number, { from = -100, to = 0 }: EffectType) => {\n  el.style.left = `calc(${(1 - progress) * from + to}%)`;\n  el.style.position = 'fixed';\n};\n\nconst slideOutToLeftFixed = (el: HTMLElement, progress: number, { from = 0, to = -100 }: EffectType): void => {\n  el.style.left = `calc(${progress * to + from}%)`;\n  el.style.position = 'fixed';\n};\n\nconst fadeOut = (el: HTMLElement, progress: number, { from = 1, to = 0 }: EffectType): void => {\n  el.style.opacity = `${(1 - progress) * from + progress * to}`;\n};\n\nconst fadeIn = (el: HTMLElement, progress: number, { from = 0, to = 1 }: EffectType): void => {\n  el.style.opacity = `${progress * to + (progress - 1) * from}`;\n};\n\nconst fadeOutBackdrop = (el: HTMLElement, progress: number, { from = 1, to = 0 }: EffectType): void => {\n  el.style.backgroundColor = `rgba(0, 0, 0, ${(1 - progress) * from + progress * to})`;\n  el.style.opacity = `${1 - progress + progress * to}`;\n};\n\nconst fadeInBackdrop = (el: HTMLElement, progress: number, { from = 0, to = 1 }: EffectType): void => {\n  el.style.backgroundColor = `rgba(0, 0, 0, ${progress * to + (progress - 1) * from})`;\n  el.style.opacity = `${progress + (progress - 1) * from}`;\n};\n\nconst AnimationsAction = {\n  slideOutToLeftRelative,\n  slideInFromRightRelative,\n  slideInFromLeftRelative,\n  slideOutToRightRelative,\n  shrinkElement,\n  growElement,\n  slideInFromRight,\n  slideInFromLeft,\n  slideOutToRight,\n  slideOutToLeft,\n  fadeOut,\n  fadeIn,\n  fadeInBackdrop,\n  fadeOutBackdrop,\n  slideInFromRightFixed,\n  slideOutToRightFixed,\n  slideInFromLeftFixed,\n  slideOutToLeftFixed\n} as const;\n\nexport default AnimationsAction;\n","import { isPromise } from '../../utility/helper';\nimport windowService from '../window-service';\nimport AnimationsAction from './animation-actions';\n\nexport type AvailableAnimations = keyof typeof AnimationsAction;\ntype TimingFunction = keyof typeof timingFunctions;\nexport type AnimationGeneratorType = {\n  cleanUpAfterAnimation?: ((el: HTMLElement) => Promise<void>) | ((el: HTMLElement) => void) | boolean;\n  duration?: number;\n};\nexport type EffectType = {\n  name: AvailableAnimations;\n  to?: number;\n  from?: number;\n  timingFunction?: TimingFunction;\n};\n\nconst resetStyle = (el: HTMLElement): void => {\n  el.removeAttribute('style');\n};\n\nexport const getAnimationEffect = (\n  effectName: AvailableAnimations\n): ((el: HTMLElement, progress: number, effect: EffectType) => void) => {\n  return AnimationsAction[effectName];\n};\n\n/* istanbul ignore next */\nconst timingFunctions = {\n  easeInOutSin: (timeFraction: number): number => {\n    return -(Math.cos(Math.PI * timeFraction) - 1) / 2;\n  },\n  easeInOutQuad: (timeFraction: number): number => {\n    if (timeFraction < 0.5) {\n      return (2 * timeFraction) / 2;\n    } else {\n      return (2 - 2 * (1 - timeFraction)) / 2;\n    }\n  },\n  linear: (timeFraction: number): number => {\n    return timeFraction < 0 || timeFraction > 1 ? Math.round(timeFraction) : timeFraction;\n  },\n  cubicBezierStart: (timeFraction: number) => {\n    return cubicBezier(timeFraction, 0.1, 0.0, 0.0, 100);\n  },\n  cubicBezierEnd: (timeFraction: number) => {\n    return cubicBezier(timeFraction, 0.3, 0.0, 1.0, 0.8);\n  }\n} as const;\n\nexport function animationPromiseGenerator(\n  el: HTMLElement,\n  animation: AnimationGeneratorType & EffectType\n): Promise<void> {\n  const { duration = 300, cleanUpAfterAnimation = false, ...effect } = animation;\n\n  return new Promise<void>((resolve) => {\n    let animationFrame: number;\n\n    const timeout = setTimeout(() => {\n      cancelAnimationFrame(animationFrame);\n      finishAnimation();\n    }, duration + 50);\n\n    function finishAnimation() {\n      playEffect(el, 1, effect);\n\n      clearTimeout(timeout);\n      if (typeof cleanUpAfterAnimation === 'function') {\n        const maybePromise: void | Promise<void> = cleanUpAfterAnimation(el);\n        if (isPromise<void>(maybePromise)) {\n          maybePromise.then(() => resolve());\n          return;\n        }\n      } else if (cleanUpAfterAnimation === true) {\n        resetStyle(el);\n      }\n\n      resolve();\n    }\n\n    const start = performance.now();\n    const playEffect = getAnimationEffect(effect.name);\n    function animate(time: DOMHighResTimeStamp) {\n      const timingFunction = timingFunctions[effect.timingFunction || 'linear'];\n      let progress = timingFunction((time - start) / duration);\n      progress = Math.round((progress + Number.EPSILON) * 1000) / 1000;\n\n      const ANIMATION_HAS_FINISHED = progress >= 1;\n      const ANIMATION_ON_PROGRESS = progress < 1;\n\n      if (ANIMATION_HAS_FINISHED) {\n        return finishAnimation();\n      }\n\n      playEffect(el, progress, effect);\n\n      if (ANIMATION_ON_PROGRESS) {\n        animationFrame = windowService.requestAnimationFrame(animate);\n      }\n    }\n\n    animationFrame = windowService.requestAnimationFrame(animate);\n  });\n}\n\nfunction cubicBezier(t: number, initial: number, p1: number, p2: number, final: number) {\n  return (\n    (1 - t) * (1 - t) * (1 - t) * initial +\n    3 * (1 - t) * (1 - t) * t * p1 +\n    3 * (1 - t) * t * t * p2 +\n    t * t * t * final\n  );\n}\n","import { AnimationSequencesType } from '../../utility/constants';\nimport { isPromise } from '../../utility/helper';\nimport { animationPromiseGenerator, AnimationGeneratorType, EffectType } from './animation-effects';\n\nexport type WithRequired<T, K extends keyof T> = T & { [P in K]-?: T[P] };\nexport type AnimationStartsCallbacks = {\n  onAnimationStarts?: (() => Promise<unknown>) | (() => void);\n};\n\nexport type AnimationEndsCallbacks = {\n  onAnimationEnds?: (() => Promise<unknown>) | (() => void);\n};\n\nexport type AnimationStatusCallbacks = AnimationStartsCallbacks & AnimationEndsCallbacks;\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type SequenceIdentifier = AnimationSequencesType | (string & {});\n\nexport interface NaviAnimation {\n  animation: EffectType & AnimationGeneratorType;\n  elementSelector: string;\n  onStart?: (() => Promise<unknown>) | (() => unknown);\n  onEnd?: (() => Promise<unknown>) | (() => unknown);\n}\n\nexport type SequenceStep = Array<NaviAnimation>;\n\nexport type AnimationSequence = {\n  steps: Array<SequenceStep>;\n  currentStepIndex: number;\n  running: boolean;\n  resolve?: (value: unknown) => void;\n  reject?: (reason?: unknown) => void;\n  promise?: Promise<void>;\n};\n\nconst sequences: {\n  [key in SequenceIdentifier]?: AnimationSequence | undefined;\n} = {};\nlet rootElement: HTMLElement | null = null;\n\nfunction initialize(element: HTMLElement): void {\n  rootElement = element;\n}\n\nfunction register(sequenceIdentifier: SequenceIdentifier, animationSequence: AnimationSequence): void {\n  sequences[sequenceIdentifier] = animationSequence;\n}\n\nfunction reset(): void {\n  Object.keys(sequences).forEach((key) => delete sequences[key]);\n}\n\nasync function play(sequenceIdentifier: SequenceIdentifier): Promise<unknown> {\n  const sequence = sequences[sequenceIdentifier];\n\n  if (sequence === undefined) {\n    return new Promise((_, reject) => reject(new Error(`Sequence ${sequenceIdentifier} has not been registered`)));\n  }\n\n  if (!sequence.running) {\n    sequence.promise = new Promise<void>((resolve, reject) => {\n      sequence.resolve = () => {\n        sequence.running = false;\n        resolve();\n      };\n\n      sequence.reject = (value: unknown) => {\n        sequence.running = false;\n        reject(value);\n      };\n\n      sequence.running = true;\n\n      applyCurrentAnimationSequenceStep(sequence);\n    });\n  }\n\n  return sequence.promise;\n}\n\nfunction finishAnimationSequence(sequence: AnimationSequence) {\n  sequence.currentStepIndex = 0;\n  sequence.resolve?.(null);\n  sequence.promise = undefined;\n}\n\nasync function applyCurrentAnimationSequenceStep(sequence: AnimationSequence) {\n  if (sequence.currentStepIndex >= sequence.steps.length) {\n    finishAnimationSequence(sequence);\n    return;\n  }\n\n  const sequenceStep = sequence.steps[sequence.currentStepIndex];\n\n  const promises = [];\n  for (const animation of sequenceStep) {\n    promises.push(executeAnimation(animation));\n  }\n\n  try {\n    await Promise.all(promises);\n  } catch (error) {\n    sequence.reject?.(error);\n    return;\n  }\n\n  sequence.currentStepIndex += 1;\n\n  setTimeout(() => applyCurrentAnimationSequenceStep(sequence), 0);\n}\n\nasync function executeAnimation({ onStart, onEnd, animation, elementSelector }: NaviAnimation): Promise<void> {\n  if (rootElement === null) {\n    throw new Error('No root element present');\n  }\n\n  if (onStart) {\n    const maybePromise = onStart();\n    if (isPromise<void>(maybePromise)) {\n      await maybePromise;\n    }\n  }\n\n  const animatedElements: HTMLElement[] = Array.from(rootElement.querySelectorAll(elementSelector));\n  const animationExecutors = [];\n\n  for (const element of animatedElements) {\n    const animationPromiseEffect = animationPromiseGenerator(element, animation);\n    animationExecutors.push(animationPromiseEffect);\n  }\n\n  await Promise.all(animationExecutors);\n\n  if (onEnd) {\n    const maybePromise = onEnd();\n    if (isPromise<void>(maybePromise)) {\n      await maybePromise;\n    }\n  }\n}\n\nfunction isPlaying(sequenceIdentifier: SequenceIdentifier): boolean {\n  const sequence = sequences[sequenceIdentifier];\n\n  if (sequence === undefined) {\n    throw new Error(`Sequence ${sequenceIdentifier} has not been registered`);\n  }\n\n  return sequence.promise !== undefined;\n}\n\nfunction makeSequence(\n  sequenceSteps: SequenceStep[],\n  animationDefaults?: Partial<Omit<AnimationGeneratorType & EffectType, 'name'>>\n): AnimationSequence {\n  return {\n    steps: sequenceSteps.map((step) => step.map((animation) => ({ ...animationDefaults, ...animation }))),\n    currentStepIndex: 0,\n    running: false\n  };\n}\n\nexport default {\n  initialize,\n  play,\n  isPlaying,\n  register,\n  reset\n};\n\nexport { makeSequence };\n"],"mappings":"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"}