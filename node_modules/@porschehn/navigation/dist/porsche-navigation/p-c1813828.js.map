{"version":3,"names":["animationRegistry","sequences","rootElement","animationTimeoutDurationMs","initialize","element","addEventListener","animationEndListener","register","sequenceIdentifier","animationSequence","reset","Object","keys","forEach","key","async","play","sequence","undefined","Promise","_","reject","Error","running","promise","resolve","value","applyCurrentAnimationSequenceStep","currentStepIndex","steps","length","finishAnimationSequence","sequenceStep","promises","animation","push","executeAnimation","all","error","_a","call","setTimeout","event","target","getHTMLElement","type","id","dataset","phnAmId","finishAnimationPromise","onStart","onEnd","elementSelector","maybePromise","isPromise","animatedElements","Array","from","querySelectorAll","animationExecutors","animationPromiseEffect","generateAndCleanUpAnimationPromise","animationPromiseGenerator","cleanUpBeforeAnimation","cleanUpAfterAnimation","animationPromise","classList","remove","className","Math","floor","random","add","toString","timeout","_resolve","_reject","console","warn","String","clearTimeout","isPlaying","makeSequence","sequenceSteps","animationDefaults","map","step","assign","animationManager"],"sources":["src/services/animations/animation-manager.ts"],"sourcesContent":["import { AnimationSequencesType } from '../../utility/constants';\nimport { getHTMLElement, isPromise } from '../../utility/helper';\n\nexport type AnimationStartsCallbacks = {\n  onAnimationStarts?: (() => Promise<unknown>) | (() => void);\n};\n\nexport type AnimationEndsCallbacks = {\n  onAnimationEnds?: (() => Promise<unknown>) | (() => void);\n};\n\nexport type AnimationStatusCallbacks = AnimationStartsCallbacks & AnimationEndsCallbacks;\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type SequenceIdentifier = AnimationSequencesType | (string & {});\n\nexport interface NaviAnimation {\n  animation: AnimationGeneratorType;\n  elementSelector: string;\n  onStart?: (() => Promise<unknown>) | (() => unknown);\n  onEnd?: (() => Promise<unknown>) | (() => unknown);\n}\n\nexport type SequenceStep = Array<NaviAnimation>;\n\nexport type AnimationSequence = {\n  steps: Array<SequenceStep>;\n  currentStepIndex: number;\n  running: boolean;\n  resolve?: (value: unknown) => void;\n  reject?: (reason?: unknown) => void;\n  promise?: Promise<void>;\n};\n\nexport type AnimationGeneratorType = {\n  className: string;\n  cleanUpBeforeAnimation?: ((el: HTMLElement) => Promise<void>) | ((el: HTMLElement) => void) | boolean;\n  cleanUpAfterAnimation?: ((el: HTMLElement) => Promise<void>) | ((el: HTMLElement) => void) | boolean;\n};\n\nconst animationRegistry: Record<\n  string,\n  {\n    promise: Promise<void>;\n    resolve: (value: void) => void;\n    reject: (reason?: unknown) => void;\n    animation: AnimationGeneratorType;\n    timeout: NodeJS.Timeout;\n  }\n> = {};\n\nconst sequences: {\n  [key in SequenceIdentifier]?: AnimationSequence | undefined;\n} = {};\n\nlet rootElement: HTMLElement | null = null;\n\nconst animationTimeoutDurationMs = 1000;\n\nfunction initialize(element: HTMLElement): void {\n  rootElement = element;\n\n  rootElement.addEventListener('transitionend', animationEndListener);\n  rootElement.addEventListener('animationend', animationEndListener);\n}\n\nfunction register(sequenceIdentifier: SequenceIdentifier, animationSequence: AnimationSequence): void {\n  sequences[sequenceIdentifier] = animationSequence;\n}\n\nfunction reset(): void {\n  Object.keys(sequences).forEach((key) => delete sequences[key]);\n}\n\nasync function play(sequenceIdentifier: SequenceIdentifier): Promise<unknown> {\n  const sequence = sequences[sequenceIdentifier];\n\n  if (sequence === undefined) {\n    return new Promise((_, reject) => reject(new Error(`Sequence ${sequenceIdentifier} has not been registered`)));\n  }\n\n  if (!sequence.running) {\n    sequence.promise = new Promise<void>((resolve, reject) => {\n      sequence.resolve = () => {\n        sequence.running = false;\n        resolve();\n      };\n\n      sequence.reject = (value: unknown) => {\n        sequence.running = false;\n        reject(value);\n      };\n\n      sequence.running = true;\n\n      applyCurrentAnimationSequenceStep(sequence);\n    });\n  }\n\n  return sequence.promise;\n}\n\nasync function applyCurrentAnimationSequenceStep(sequence: AnimationSequence) {\n  if (sequence.currentStepIndex >= sequence.steps.length) {\n    finishAnimationSequence(sequence);\n    return;\n  }\n\n  const sequenceStep = sequence.steps[sequence.currentStepIndex];\n\n  const promises = [];\n  for (const animation of sequenceStep) {\n    promises.push(executeAnimation(animation));\n  }\n\n  try {\n    await Promise.all(promises);\n  } catch (error) {\n    sequence.reject?.(error);\n    return;\n  }\n\n  sequence.currentStepIndex += 1;\n\n  setTimeout(() => applyCurrentAnimationSequenceStep(sequence), 0);\n}\n\nfunction finishAnimationSequence(sequence: AnimationSequence) {\n  sequence.currentStepIndex = 0;\n  sequence.resolve?.(null);\n  sequence.promise = undefined;\n}\n\nfunction animationEndListener(event: AnimationEvent | TransitionEvent): void {\n  const target = getHTMLElement(event.target);\n\n  if (target === null) {\n    throw new Error(`${event.type} event target is null`);\n  }\n\n  const id = target.dataset.phnAmId;\n\n  if (id !== undefined && id !== null) {\n    finishAnimationPromise(id, target);\n  }\n}\n\nasync function executeAnimation({ onStart, onEnd, animation, elementSelector }: NaviAnimation): Promise<void> {\n  if (rootElement === null) {\n    throw new Error('No root element present');\n  }\n\n  if (onStart) {\n    const maybePromise = onStart();\n    if (isPromise<void>(maybePromise)) {\n      await maybePromise;\n    }\n  }\n\n  const animatedElements: HTMLElement[] = Array.from(rootElement.querySelectorAll(elementSelector));\n  const animationExecutors = [];\n\n  for (const element of animatedElements) {\n    const animationPromiseEffect = generateAndCleanUpAnimationPromise(animationPromiseGenerator)(element, animation);\n    animationExecutors.push(animationPromiseEffect);\n  }\n\n  await Promise.all(animationExecutors);\n\n  if (onEnd) {\n    const maybePromise = onEnd();\n    if (isPromise<void>(maybePromise)) {\n      await maybePromise;\n    }\n  }\n}\n\nfunction generateAndCleanUpAnimationPromise(\n  animationPromiseGenerator: (element: HTMLElement, animation: AnimationGeneratorType) => Promise<void>\n): (element: HTMLElement, animation: AnimationGeneratorType) => Promise<void> {\n  return async function (element: HTMLElement, animation: AnimationGeneratorType): Promise<void> {\n    const { cleanUpBeforeAnimation, cleanUpAfterAnimation } = animation;\n\n    const animationPromise = animationPromiseGenerator(element, animation);\n\n    if (typeof cleanUpBeforeAnimation === 'function') {\n      const maybePromise: void | Promise<void> = cleanUpBeforeAnimation(element);\n      if (isPromise<void>(maybePromise)) {\n        await maybePromise;\n      }\n    }\n\n    await animationPromise;\n\n    if (typeof cleanUpAfterAnimation === 'function') {\n      const maybePromise: void | Promise<void> = cleanUpAfterAnimation(element);\n      if (isPromise<void>(maybePromise)) {\n        await maybePromise;\n      }\n    }\n\n    if (cleanUpAfterAnimation !== false) {\n      // only not remove class if cleanUpAfterAnimation is explicitely set to false\n      element.classList.remove(animation.className);\n    }\n  };\n}\n\nconst animationPromiseGenerator = (element: HTMLElement, animation: AnimationGeneratorType): Promise<void> => {\n  const id = Math.floor(Math.random() * 1e7);\n\n  element.classList.add(animation.className);\n  element.dataset.phnAmId = id.toString();\n\n  let resolve!: (value: void) => void;\n  let reject!: (reason?: unknown) => void;\n  let timeout!: NodeJS.Timeout;\n  const promise = new Promise<void>((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n\n    timeout = setTimeout(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Animation with className ${animation.className} didn't finish after ${animationTimeoutDurationMs}ms. Forcefully finishing animation and continuing with the rest of the sequence.`\n      );\n      finishAnimationPromise(String(id), element);\n    }, animationTimeoutDurationMs);\n  });\n\n  animationRegistry[id] = { animation, resolve, reject, promise, timeout };\n\n  return promise;\n};\n\nfunction finishAnimationPromise(phnAmId: string, target: HTMLElement): void {\n  const { resolve, timeout } = animationRegistry[phnAmId];\n\n  clearTimeout(timeout);\n  delete animationRegistry[phnAmId];\n  delete target.dataset.phnAmId;\n\n  resolve();\n}\n\nfunction isPlaying(sequenceIdentifier: SequenceIdentifier): boolean {\n  const sequence = sequences[sequenceIdentifier];\n\n  if (sequence === undefined) {\n    throw new Error(`Sequence ${sequenceIdentifier} has not been registered`);\n  }\n\n  return sequence.promise !== undefined;\n}\n\nfunction makeSequence(\n  sequenceSteps: SequenceStep[],\n  animationDefaults?: Partial<Omit<AnimationGeneratorType, 'name'>>\n): AnimationSequence {\n  return {\n    steps: sequenceSteps.map((step) => step.map((animation) => ({ ...animationDefaults, ...animation }))),\n    currentStepIndex: 0,\n    running: false\n  };\n}\n\nexport default {\n  initialize,\n  play,\n  isPlaying,\n  register,\n  reset\n};\n\nexport { makeSequence };\n"],"mappings":"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"}