import{b as e,n as t}from"./p-b43baa04.js";import{c as n,N as a,a as r,b as o}from"./p-f7be0ef8.js";import{w as i}from"./p-f167c919.js";var s=undefined&&undefined.__rest||function(e,t){var n={};for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0)n[a]=e[a];if(e!=null&&typeof Object.getOwnPropertySymbols==="function")for(var r=0,a=Object.getOwnPropertySymbols(e);r<a.length;r++){if(t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r]))n[a[r]]=e[a[r]]}return n};async function d(e,t,n){return c(e,t,{latitude:0,longitude:0},n,{radius:1e7})}async function c(t,o,d,c,f={}){const{radius:l}=f;let u;let w;try{const a=new Headers;a.set("Accept","*/*");if(t===e.LOCAL){a.set("Authorization","Basic "+i.btoa(`${"undefined"}:${"undefined"}`))}const r={coordinates:`${d.latitude},${d.longitude}`,radius:l};u=await fetch(`${o}/${c}/dealers?${n(r)}`,{method:"GET",headers:a})}catch(e){throw new a("Unable to fetch dealers",r.GENERAL)}if(u.status===400){throw new a("dealerService.getPPNDealers failed with invalid coordinates",r.GENERAL)}if(u.status===404){throw new a("dealerService.getPPNDealers failed with invalid country code and therefore responded with no results",r.NO_RESULTS)}if(u.status!==200){throw new a("dealerService.getPPNDealers failed with invalid response",r.GENERAL)}try{w=await u.json()}catch(e){throw new a("dealerService.getPPNDealers could not parse response into json format",r.GENERAL)}return w.map((e=>{var{dealer:t}=e,n=s(e,["dealer"]);return Object.assign({ppnDealer:t},n)}))}async function f(e,t,n,o,i){let s;try{const a=await c(e,t,o,i);s=a.find((e=>n===e.ppnDealer.id))}catch(e){throw new a("Unable to fetch a dealer",r.GENERAL)}if(s===undefined){throw new a(`Requested dealer ${n} could not be found`,r.NO_RESULTS)}return s}const l=new Map;async function u(e,t){const n=await w(t);const o=n.regions.flatMap((({cities:e})=>e.flatMap((({dealers:e})=>Object.values(e).reduce(((e,t)=>[...e,t]),[]))))).find((({ppnDealer:t})=>t.id===e));if(o===undefined){throw new a(`Requested dealer could not be found`,r.NO_RESULTS)}return o}async function w(e){const{env:n}=t.state;const i=new Headers;let s;if(l.has(e)){s=l.get(e)}else{const{BFF_ENDPOINT:t}=o(n);i.set("Accept","*/*");const a=await fetch(`${t}/dealers/region/${e}?env=${n}`,{method:"GET",headers:i});s=await a.json();l.set(e,s)}if(s===undefined){throw new a(`Requested dealer could not be found`,r.NO_RESULTS)}return s}export{f as a,d as b,w as c,c as d,u as g};
//# sourceMappingURL=p-338d556a.js.map