{"version":3,"names":["state","setDrawerType","drawerType","calculateDisplayElementId","routingKeyForNavigatingForward","mainDrawerRoutingKey","isString","getPreviousRoutingKey","routerStore","routingKeyHistory","routingKeyPointer","lastMainDrawerRoutingKey","getLastRoutingSegment","mainDrawerLevel","determineMainDrawerLevel","sideDrawerLevel","mainDrawerDisplayElementId","sideDrawerRoutingKey","getSideDrawerRoutingKey","calculateDisplayElementType","activeRoutingKey","elementType","isSideDrawer","getModelName","bodyType","urlSplitIntoPieces","link","split","lastElementInUrlSplit","length","modelName","undefined","join","getModelTargetElement","elementId","text","includes","toLowerCase","getDrawerType","getDealerResultsLoadDisplayElementId","getDealerResultsLoadDisplayElementType","DEALER_SEARCH_ELEMENT_TYPE","ElementTypes","dealerSearchForm","analyticsManager"],"sources":["src/services/analytics/analytics-manager.ts"],"sourcesContent":["import { BodyType } from '../../entities/content';\nimport { determineMainDrawerLevel, getLastRoutingSegment, getPreviousRoutingKey } from '../../entities/routing-key';\nimport { routerStore } from '../../state/router-store';\nimport { DEALER_SEARCH_ELEMENT_TYPE, DisplayElementType, ElementType, ElementTypes } from '../../utility/constants';\nimport { isString } from '../../utility/helper';\nimport { getSideDrawerRoutingKey } from '../menu-items-service';\n\nconst state: {\n  drawerType?: DisplayElementType;\n  elementType?: ElementType;\n} = {};\n\nfunction setDrawerType(drawerType: DisplayElementType): void {\n  state.drawerType = drawerType;\n}\n\nfunction calculateDisplayElementId(routingKeyForNavigatingForward?: string): string {\n  const { drawerType } = state;\n  const mainDrawerRoutingKey =\n    (isString(routingKeyForNavigatingForward)\n      ? getPreviousRoutingKey(routingKeyForNavigatingForward)\n      : routerStore.state.routingKeyHistory[routerStore.state.routingKeyPointer]) || '';\n  const lastMainDrawerRoutingKey = getLastRoutingSegment(mainDrawerRoutingKey);\n  const mainDrawerLevel = determineMainDrawerLevel(mainDrawerRoutingKey);\n  const sideDrawerLevel = mainDrawerLevel - 1;\n\n  if (!isString(mainDrawerRoutingKey)) {\n    return 'level0';\n  }\n\n  const mainDrawerDisplayElementId = isString(mainDrawerRoutingKey)\n    ? `level${mainDrawerLevel}-${lastMainDrawerRoutingKey}`\n    : `level${mainDrawerLevel - 1}-unknown`;\n\n  if (drawerType === 'doubleDrawer') {\n    if (mainDrawerRoutingKey === '') {\n      return `level${sideDrawerLevel}-unknown_level${mainDrawerLevel}-unknown`;\n    }\n    const sideDrawerRoutingKey = getSideDrawerRoutingKey(mainDrawerRoutingKey);\n    return `level${sideDrawerLevel}-${sideDrawerRoutingKey}_${mainDrawerDisplayElementId}`;\n  }\n\n  return mainDrawerDisplayElementId;\n}\n\nfunction calculateDisplayElementType(\n  activeRoutingKey: string,\n  elementType: ElementType,\n  isSideDrawer?: boolean\n): string {\n  const { drawerType } = state;\n  const mainDrawerLevel = determineMainDrawerLevel(activeRoutingKey);\n\n  if (drawerType === 'doubleDrawer') {\n    let sideDrawerLevel = mainDrawerLevel;\n    if (isSideDrawer) {\n      sideDrawerLevel = sideDrawerLevel - 1;\n    }\n    return `level${sideDrawerLevel}_${elementType}`;\n  } else {\n    return isString(activeRoutingKey)\n      ? `level${mainDrawerLevel}_${elementType}`\n      : `level${mainDrawerLevel - 1}_${elementType}`;\n  }\n}\n\nfunction getModelName(bodyType: BodyType): string {\n  const urlSplitIntoPieces: string[] = bodyType.link.split('/');\n  const lastElementInUrlSplit: string = urlSplitIntoPieces[urlSplitIntoPieces.length - 1];\n  let modelName: string;\n\n  if (lastElementInUrlSplit === '') {\n    if (urlSplitIntoPieces[urlSplitIntoPieces.length - 2] === undefined) {\n      modelName = '';\n    } else {\n      modelName = urlSplitIntoPieces[urlSplitIntoPieces.length - 2].split('-').join(' ');\n    }\n  } else {\n    modelName = lastElementInUrlSplit.split('-').join(' ');\n  }\n\n  return modelName;\n}\n\nfunction getModelTargetElement(elementId: string, text: string): string | undefined {\n  if (elementId.includes('models')) {\n    const mainDrawerLevel = determineMainDrawerLevel(elementId);\n\n    return `level${mainDrawerLevel}_${text.toLowerCase()}`;\n  }\n\n  return;\n}\n\nfunction getDrawerType() {\n  return state.drawerType;\n}\n\nfunction getDealerResultsLoadDisplayElementId(elementId: string): string {\n  if (getDrawerType() === 'doubleDrawer') {\n    return elementId;\n  } else {\n    return calculateDisplayElementId();\n  }\n}\n\nfunction getDealerResultsLoadDisplayElementType(): string {\n  if (getDrawerType() === 'doubleDrawer') {\n    return DEALER_SEARCH_ELEMENT_TYPE;\n  } else {\n    return calculateDisplayElementType('', ElementTypes.dealerSearchForm);\n  }\n}\n\nexport default {\n  setDrawerType,\n  getDealerResultsLoadDisplayElementId,\n  calculateDisplayElementId,\n  getDealerResultsLoadDisplayElementType,\n  calculateDisplayElementType,\n  getModelName,\n  getModelTargetElement\n};\n"],"mappings":"oMAOA,MAAMA,EAGF,GAEJ,SAASC,EAAcC,GACrBF,EAAME,WAAaA,CACrB,CAEA,SAASC,EAA0BC,GACjC,MAAMF,WAAEA,GAAeF,EACvB,MAAMK,GACHC,EAASF,GACNG,EAAsBH,GACtBI,EAAYR,MAAMS,kBAAkBD,EAAYR,MAAMU,qBAAuB,GACnF,MAAMC,EAA2BC,EAAsBP,GACvD,MAAMQ,EAAkBC,EAAyBT,GACjD,MAAMU,EAAkBF,EAAkB,EAE1C,IAAKP,EAASD,GAAuB,CACnC,MAAO,Q,CAGT,MAAMW,EAA6BV,EAASD,GACxC,QAAQQ,KAAmBF,IAC3B,QAAQE,EAAkB,YAE9B,GAAIX,IAAe,eAAgB,CACjC,GAAIG,IAAyB,GAAI,CAC/B,MAAO,QAAQU,kBAAgCF,W,CAEjD,MAAMI,EAAuBC,EAAwBb,GACrD,MAAO,QAAQU,KAAmBE,KAAwBD,G,CAG5D,OAAOA,CACT,CAEA,SAASG,EACPC,EACAC,EACAC,GAEA,MAAMpB,WAAEA,GAAeF,EACvB,MAAMa,EAAkBC,EAAyBM,GAEjD,GAAIlB,IAAe,eAAgB,CACjC,IAAIa,EAAkBF,EACtB,GAAIS,EAAc,CAChBP,EAAkBA,EAAkB,C,CAEtC,MAAO,QAAQA,KAAmBM,G,KAC7B,CACL,OAAOf,EAASc,GACZ,QAAQP,KAAmBQ,IAC3B,QAAQR,EAAkB,KAAKQ,G,CAEvC,CAEA,SAASE,EAAaC,GACpB,MAAMC,EAA+BD,EAASE,KAAKC,MAAM,KACzD,MAAMC,EAAgCH,EAAmBA,EAAmBI,OAAS,GACrF,IAAIC,EAEJ,GAAIF,IAA0B,GAAI,CAChC,GAAIH,EAAmBA,EAAmBI,OAAS,KAAOE,UAAW,CACnED,EAAY,E,KACP,CACLA,EAAYL,EAAmBA,EAAmBI,OAAS,GAAGF,MAAM,KAAKK,KAAK,I,MAE3E,CACLF,EAAYF,EAAsBD,MAAM,KAAKK,KAAK,I,CAGpD,OAAOF,CACT,CAEA,SAASG,EAAsBC,EAAmBC,GAChD,GAAID,EAAUE,SAAS,UAAW,CAChC,MAAMvB,EAAkBC,EAAyBoB,GAEjD,MAAO,QAAQrB,KAAmBsB,EAAKE,e,CAGzC,MACF,CAEA,SAASC,IACP,OAAOtC,EAAME,UACf,CAEA,SAASqC,EAAqCL,GAC5C,GAAII,MAAoB,eAAgB,CACtC,OAAOJ,C,KACF,CACL,OAAO/B,G,CAEX,CAEA,SAASqC,IACP,GAAIF,MAAoB,eAAgB,CACtC,OAAOG,C,KACF,CACL,OAAOtB,EAA4B,GAAIuB,EAAaC,iB,CAExD,CAEA,MAAAC,EAAe,CACb3C,gBACAsC,uCACApC,4BACAqC,yCACArB,8BACAI,eACAU,gC"}