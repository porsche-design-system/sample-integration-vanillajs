{"version":3,"names":["carBodyTypesDrawerCss","CarBodyTypeDrawer","this","bodyTypesImagesLoaded","Set","bodyTypesImagesNotLoaded","seriesWatcher","seriesLoaded","showSkeleton","waitForComponentsToLoad","componentsOnReady","el","Timeout","componentWillLoad","componentDidRender","handleImageLoad","seriesId","add","series","bodyTypes","every","id","has","handleImageLoadError","sendMetaFunctionDataLayerEvent","link","globalDataLayerService","pushDataLayerEvent","EventActions","MODEL_CTA_CLICK","componentClick","clickElementId","clickElementName","text","clickElementType","ClickElementTypes","Link","targetUrl","componentDisplay","displayElementId","analyticsManager","calculateDisplayElementId","displayElementType","calculateDisplayElementType","activeRoutingKey","ElementTypes","bodyTypeButton","displayElementName","car","modelRangeName","split","sendBodyTypeClickDataLayerEvent","bodyType","tagName","MODEL_CLICK","name","Image","modelName","getModelName","sendNavigationDataLayerEvent","all","getImageSize","currentBreakpoint","breakpoint","xxl","xl","l","m","s","xs","base","getImageSource","image","assetPath","getAssetPath","getConfig","navStateStore","state","env","ASSETS_URL","imageSize","imagePath","render","h","Host","class","Fragment","links","map","key","variant","href","icon","size","style","display","onClick","role","e","clickedElement","getHTMLElement","target","srcSet","alt","onLoad","onError","color","align","isString","description","className","dealerSearchFormCss","DealerSearchForm","toggleOverlay","showOverlay","detail","loadedAutoCompleteListener","_event","getDealerFormStrategy","dealer","navContentStore","numberOfDealers","showDealerSearchDropdown","splitLocale","locale","country","formComponent","dealerSearchFormStrategies","geolocation","dropdown","byNumberOfDealers","formStrategy","level1Css","Level1","showRightIconRight","iconRight","app","isOneUiMobileShop","isShopAvailable","isDesktop","undefined","loggedInState","unreadMessagesCount","userConsent","level1Items","getLevel1Items","dealerSearchResultsStore","_a","routingKeys","elementId","showIconModifier","level1Item","__rest","Object","assign","mobileMenuItemClick","emit","MenuItemVariant","slot","MenuItemCountIndicator","count","MenuItemLink","content","getVehiclePurchaseRoutingKey","analyticsId","datalayerEventAction","NAVIGATION_LINK_CLICK","menuCss","Menu","savedVehiclesPosition","receivedContent","showMenu","childItem","constructRoutingKey","routingKey","getSavedVehiclesContent","savedVehicles","displayedItem","item","children","length","savedVehiclesCount","finderStateStore","menuItems","NAVIGATION_CLICK","splice","modelsCss","Models","seriesImagesLoaded","seriesImagesNotLoaded","showMenuWithModels","modelsSeriesRoutingKey","getModelsRoutingKey","models","modelsSeries","subtext","tags","tag","join","Model","isModels","MODEL_RANGE_CLICK","Links","onLogoutClick","messagesPosition","savedSearchesPosition","isLoggedIn","IsLoggedIn","messages","savedSearches","savedSearchesCount","convertedLinks","getMyPorscheRoutingKey","MenuItemCountLink","featureToggles","isSavedItemsToggleActive","push","LogoutLink","width","logout","Login","login","more","signup","signupText","myporscheDrawerCss","MyPorscheDrawer","myPorsche","logoutEvent","replaceVariables","template","data","regex","replace","_match","variable","value","trim","String","ShopSection","loginEvent","showHeadline","displayedContent","getMenuContent","RoutingKeys","SHOP","wishListAuthStatusList","wishListItems","filterWishlistItemsByAuthStatus","additionalContent","emitLogin","iconUrl","iconLeft","getIconNameByMenuItemId","getAvailableShopVariables","VehiclePurchaseSection","topLevelRoutingKey","routerCss","Router","findTopLevelRoutingKey","DEALER_SEARCH","routingId","getLastRoutingSegment","dealerId","MY_PORSCHE","SERIES","MODELS","activeModelsSeries","find","MORE","EXPERIENCE","SERVICES","VEHICLE_PURCHASE"],"sources":["src/components/car-body-types-drawer/car-body-types-drawer.scss?tag=phn-car-body-types-drawer&encapsulation=scoped","src/components/car-body-types-drawer/car-body-types-drawer.tsx","src/components/dealer-search-form/dealer-search-form.scss?tag=phn-dealer-search-form&encapsulation=scoped","src/components/dealer-search-form/dealer-search-form.tsx","src/components/level-1/level-1.scss?tag=phn-level-1&encapsulation=scoped","src/components/level-1/level-1.tsx","src/components/menu/saved-vehicles/menu-item-count-indicator.tsx","src/components/menu/saved-vehicles/menu-item-link.tsx","src/components/menu/menu.scss?tag=phn-menu&encapsulation=scoped","src/components/menu/menu.tsx","src/components/models/models.scss?tag=phn-models&encapsulation=scoped","src/components/models/models.tsx","src/components/myporsche-drawer/myporsche-drawer-links.tsx","src/components/myporsche-drawer/myporsche-drawer-login.tsx","src/components/myporsche-drawer/myporsche-drawer.scss?tag=phn-myporsche-drawer&encapsulation=scoped","src/components/myporsche-drawer/myporsche-drawer.tsx","src/utility/helpers/string-helper.ts","src/components/router/sections/shop.tsx","src/components/router/sections/vehiclePurchase.tsx","src/components/router/router.scss?tag=phn-router&encapsulation=scoped","src/components/router/router.tsx"],"sourcesContent":["@import '../../scss';\n\n:host {\n  display: block;\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  phn-p-headline {\n    font-size: p-px-to-rem(28px);\n  }\n\n  .model-link-content {\n    @include hoverZoom();\n    padding-bottom: 5px;\n  }\n\n  .skeleton-bodytype {\n    height: p-px-to-rem(135px);\n    width: p-px-to-rem(260px);\n    margin: p-px-to-rem(24px) 0 0 0 ;\n    background: $pds-theme-light-contrast-low;\n    border-radius: 4px;\n\n    @include pds-media-query-min('xs') {\n      height: p-px-to-rem(110px);\n    }\n\n    @include pds-media-query-min('s') {\n      height: p-px-to-rem(120px);\n      width: p-px-to-rem(260px);\n    }\n  }\n\n  &.skeleton {\n    pointer-events: none;\n    user-select: none;\n    opacity: 60%;\n\n    & .skeleton-headline {\n      width: auto;\n      height: p-px-to-rem(38px);\n      background: $pds-theme-light-contrast-low;\n      border-radius: 4px;\n    }\n\n    & .skeleton-link {\n      width: auto;\n      height: p-px-to-rem(48px);\n      margin: p-px-to-rem(16px) 0;\n      background: $pds-theme-light-contrast-low;\n      border-radius: 4px;\n    }\n\n    & .skeleton-image {\n      width: auto;\n      height: p-px-to-rem(135px);\n      margin: p-px-to-rem(24px) 0;\n      background: $pds-theme-light-contrast-low;\n      border-radius: 4px;\n\n      @include pds-media-query-min('xs') {\n        height: p-px-to-rem(145px);\n      }\n\n      @include pds-media-query-min('s') {\n        height: p-px-to-rem(120px);\n      }\n\n      @include pds-media-query-min('m') {\n        height: p-px-to-rem(137px);\n      }\n\n      @include pds-media-query-min('l') {\n        height: p-px-to-rem(133px);\n      }\n\n      @include pds-media-query-min('xxl') {\n        height: p-px-to-rem(145px);\n      }\n    }\n  }\n\n  .links {\n    .link {\n      width: 100%;\n      padding-top: p-px-to-rem(16px);\n    }\n  }\n\n  .series-body-type {\n    text-align: center;\n    padding: p-px-to-rem(2px);\n    margin-top: p-px-to-rem(2px);\n  }\n\n  .further {\n    width: 100%;\n    padding-top: p-px-to-rem(64px);\n  }\n\n  .car-models {\n    phn-p-text {\n      font-size: p-px-to-rem(16px);\n\n      @include pds-media-query-min('xs') {\n        font-size: p-px-to-rem(18px);\n      }\n\n      @include pds-media-query-min('s') {\n        font-size: p-px-to-rem(16px);\n      }\n\n      @include pds-media-query-min('xxl') {\n        font-size: p-px-to-rem(18px);\n      }\n    }\n  }\n}\n","import { breakpoint } from '@porsche-design-system/components-js/styles';\nimport { Component, Element, Fragment, getAssetPath, h, Host, Prop, State, Watch } from '@stencil/core';\nimport { BodyType, Series, TLink } from '../../entities/content';\nimport globalDataLayerService from '../../services/analytics/global-data-layer-service';\nimport { navStateStore } from '../../state/nav-state-store';\nimport { ClickElementTypes, ElementTypes, EventActions } from '../../utility/constants';\nimport { getConfig, getHTMLElement, isString } from '../../utility/helper';\nimport { componentsOnReady } from '../../utility/ready';\nimport { Timeout } from '../../utility/timeout';\nimport analyticsManager from '../../services/analytics/analytics-manager';\n\n@Component({\n  tag: 'phn-car-body-types-drawer',\n  styleUrl: 'car-body-types-drawer.scss',\n  assetsDirs: ['model-assets'],\n  scoped: true\n})\nexport class CarBodyTypeDrawer {\n  @Prop() series!: Series;\n  @Prop() breakpoint!: number;\n  @Prop() activeRoutingKey!: string;\n\n  @State() seriesLoaded = false;\n  @State() showSkeleton = true;\n\n  @Element() el!: HTMLPhnCarBodyTypesDrawerElement;\n\n  @Watch('series')\n  seriesWatcher(): void {\n    this.seriesLoaded = false;\n    this.showSkeleton = true;\n  }\n\n  private bodyTypesImagesLoaded = new Set<string>();\n  private bodyTypesImagesNotLoaded = new Set<string>();\n\n  private async waitForComponentsToLoad() {\n    await componentsOnReady(this.el, new Timeout(5000));\n    this.showSkeleton = !this.seriesLoaded;\n  }\n\n  componentWillLoad(): void {\n    this.waitForComponentsToLoad();\n  }\n\n  componentDidRender(): void {\n    this.showSkeleton = !this.seriesLoaded;\n  }\n\n  private handleImageLoad(seriesId: string) {\n    this.bodyTypesImagesLoaded.add(seriesId);\n\n    if (this.series.bodyTypes.every(({ id }) => this.bodyTypesImagesLoaded.has(id))) {\n      this.seriesLoaded = true;\n    }\n  }\n\n  private handleImageLoadError(seriesId: string) {\n    this.handleImageLoad(seriesId);\n    this.bodyTypesImagesNotLoaded.add(seriesId);\n  }\n\n  private sendMetaFunctionDataLayerEvent(link: TLink): void {\n    globalDataLayerService.pushDataLayerEvent(EventActions.MODEL_CTA_CLICK, {\n      componentClick: {\n        clickElementId: link.id,\n        clickElementName: link.text,\n        clickElementType: ClickElementTypes.Link,\n        targetUrl: link.link\n      },\n      componentDisplay: {\n        displayElementId: analyticsManager.calculateDisplayElementId(),\n        displayElementType: analyticsManager.calculateDisplayElementType(\n          this.activeRoutingKey,\n          ElementTypes.bodyTypeButton\n        ),\n        displayElementName: link.text\n      },\n      car: {\n        modelRangeName: link.id.split('.')[1]\n      }\n    });\n  }\n\n  private sendBodyTypeClickDataLayerEvent(bodyType: BodyType, tagName: string): void {\n    globalDataLayerService.pushDataLayerEvent(EventActions.MODEL_CLICK, {\n      componentClick: {\n        clickElementId: bodyType.id,\n        clickElementName: bodyType.name,\n        clickElementType: tagName === 'IMG' ? ClickElementTypes.Image : ClickElementTypes.Link,\n        targetUrl: bodyType.link\n      },\n      componentDisplay: {\n        displayElementId: analyticsManager.calculateDisplayElementId(),\n        displayElementType: analyticsManager.calculateDisplayElementType(\n          this.activeRoutingKey,\n          ElementTypes.bodyTypeButton\n        ),\n        displayElementName: bodyType.name\n      },\n      car: {\n        modelRangeName: bodyType.id.split('.')[1],\n        modelName: analyticsManager.getModelName(bodyType)\n      }\n    });\n  }\n\n  private sendNavigationDataLayerEvent(): void {\n    globalDataLayerService.pushDataLayerEvent(EventActions.MODEL_CLICK, {\n      componentClick: {\n        clickElementId: this.series.all.id,\n        clickElementName: this.series.all.text,\n        clickElementType: ClickElementTypes.Link,\n        targetUrl: this.series.all.link\n      },\n      componentDisplay: {\n        displayElementId: analyticsManager.calculateDisplayElementId(),\n        displayElementType: analyticsManager.calculateDisplayElementType(\n          this.activeRoutingKey,\n          ElementTypes.bodyTypeButton\n        ),\n        displayElementName: this.series.all.text\n      }\n    });\n  }\n\n  private getImageSize(currentBreakpoint: number): number {\n    switch (currentBreakpoint) {\n      case breakpoint.xxl:\n        return 1920;\n      case breakpoint.xl:\n      case breakpoint.l:\n        return 1360;\n      case breakpoint.m:\n        return 1024;\n      case breakpoint.s:\n        return 760;\n      case breakpoint.xs:\n      case breakpoint.base:\n      default:\n        return 320;\n    }\n  }\n\n  private getImageSource(image: string): string {\n    const assetPath = getAssetPath(`${getConfig(navStateStore.state.env).ASSETS_URL}/model-assets`);\n    const imageSize = this.getImageSize(this.breakpoint);\n    const imagePath = `${assetPath}/${imageSize}`;\n\n    return `${imagePath}/${image}.webp, ${imagePath}/${image}@2x.webp 2x`;\n  }\n\n  render(): HTMLPhnCarBodyTypesDrawerElement {\n    return (\n      <Host class={`${this.showSkeleton ? 'skeleton' : ''}`}>\n        <Fragment>\n          <ul class=\"links\">\n            {this.series.links.map((link) => (\n              <Fragment>\n                {this.showSkeleton ? <div class=\"skeleton-link\" /> : null}\n                <phn-p-link\n                  key={link.id}\n                  variant=\"tertiary\"\n                  href={link.link}\n                  icon={link.icon}\n                  size=\"inherit\"\n                  class=\"link\"\n                  style={{ display: this.showSkeleton ? 'none' : '' }}\n                  onClick={() => {\n                    this.sendMetaFunctionDataLayerEvent(link);\n                  }}\n                  role=\"listitem\"\n                >\n                  {link.text}\n                </phn-p-link>\n              </Fragment>\n            ))}\n          </ul>\n          <ul>\n            {this.series.bodyTypes.map((bodyType) => {\n              return (\n                <Fragment>\n                  {this.showSkeleton ? (\n                    <Fragment>\n                      <div class=\"skeleton-image\" />\n                    </Fragment>\n                  ) : null}\n                  <div\n                    class=\"series-body-type\"\n                    key={bodyType.id}\n                    style={{ display: this.showSkeleton ? 'none' : '' }}\n                    role=\"listitem\"\n                  >\n                    <phn-p-link-pure\n                      icon=\"none\"\n                      onClick={(e: MouseEvent) => {\n                        const clickedElement = getHTMLElement(e.target);\n                        if (clickedElement !== null) {\n                          this.sendBodyTypeClickDataLayerEvent(bodyType, clickedElement.tagName);\n                        }\n                      }}\n                    >\n                      <a href={bodyType.link}>\n                        {this.bodyTypesImagesNotLoaded.has(bodyType.id) ? (\n                          <Fragment>\n                            <div class=\"skeleton-bodytype\" />\n                          </Fragment>\n                        ) : (\n                          <div class=\"model-link-content\">\n                            <img\n                              srcSet={this.getImageSource(bodyType.image)}\n                              alt={`${bodyType.name} Sideshot`}\n                              onLoad={() => this.handleImageLoad(bodyType.id)}\n                              onError={() => this.handleImageLoadError(bodyType.id)}\n                            />\n\n                            <phn-p-text size=\"inherit\" color=\"inherit\" align=\"center\">\n                              {bodyType.name}\n                            </phn-p-text>\n\n                            {isString(bodyType.description) ? (\n                              <phn-p-text className=\"model-description\" size=\"x-small\" align=\"center\">\n                                {bodyType.description}\n                              </phn-p-text>\n                            ) : null}\n                          </div>\n                        )}\n                      </a>\n                    </phn-p-link-pure>\n                  </div>\n                </Fragment>\n              );\n            })}\n          </ul>\n          {this.showSkeleton ? null : (\n            <phn-p-link\n              variant=\"tertiary\"\n              href={this.series.all.link}\n              size=\"inherit\"\n              class=\"further\"\n              data-test-id=\"car-body-types-drawer-further-links-button\"\n              onClick={() => {\n                this.sendNavigationDataLayerEvent();\n              }}\n            >\n              {this.series.all.text}\n            </phn-p-link>\n          )}\n        </Fragment>\n      </Host>\n    );\n  }\n}\n","@import '../../scss';\n\n:host {\n  display: block;\n\n  &.skeleton {\n    pointer-events: none;\n    user-select: none;\n\n    & .skeleton-headline {\n      width: auto;\n      height: p-px-to-rem(50px);\n      background: $pds-theme-light-contrast-low;\n      margin-bottom: p-px-to-rem(28px);\n      border-radius: 4px;\n    }\n  }\n\n  phn-headline {\n    margin-bottom: p-px-to-rem(36px);\n  }\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport { Component, Element, h, Host, Listen, Prop, State } from '@stencil/core';\nimport { Dealer } from '../../entities/content';\nimport { showDealerSearchDropdown } from '../../utility/helpers/dealer-search-helper';\nimport { splitLocale } from '../../entities/locale';\nimport { navContentStore } from '../../state/nav-content-store';\n\ntype DealerSearchFormStrategy = 'geolocation' | 'dropdown' | 'byNumberOfDealers';\n\n@Component({\n  tag: 'phn-dealer-search-form',\n  styleUrl: 'dealer-search-form.scss',\n  scoped: true,\n  assetsDirs: ['./assets']\n})\nexport class DealerSearchForm {\n  @Prop() dealer!: Dealer;\n  @Prop() locale!: string;\n  @Prop() showHeadline = true;\n  @Prop() breakpoint!: number;\n\n  @State() showOverlay = false;\n  @State() formErrorMessage: string | null = null;\n  @State() showSkeleton = true;\n\n  @Listen('predictionsToggle')\n  toggleOverlay(e: CustomEvent<boolean>): void {\n    this.showOverlay = e.detail;\n  }\n\n  @State() animateResults = false;\n\n  @Element() el!: HTMLPhnDealerSearchFormElement;\n\n  @Listen('removeSkeletonOnDealerSearchForm')\n  loadedAutoCompleteListener(_event: Event): void {\n    this.showSkeleton = false;\n  }\n\n  private getDealerFormStrategy(): DealerSearchFormStrategy {\n    const { dealer } = navContentStore.state;\n    if (dealer.numberOfDealers <= 5) {\n      return 'byNumberOfDealers';\n    }\n\n    if (showDealerSearchDropdown(splitLocale(this.locale).country)) return 'dropdown';\n\n    return 'geolocation';\n  }\n\n  private formComponent(): HTMLElement {\n    const dealerSearchFormStrategies: Record<DealerSearchFormStrategy, () => HTMLElement> = {\n      geolocation: () => <phn-dealer-search-form-geolocation locale={this.locale} />,\n      dropdown: () => <phn-dealer-search-form-dropdown locale={this.locale} breakpoint={this.breakpoint} />,\n      byNumberOfDealers: () => <phn-dealer-search-by-number-of-dealers locale={this.locale} />\n    };\n\n    const formStrategy = this.getDealerFormStrategy();\n    return dealerSearchFormStrategies[formStrategy]();\n  }\n\n  render(): HTMLPhnDealerSearchFormElement {\n    return (\n      <Host class={this.showSkeleton ? 'skeleton' : ''}>\n        {this.formComponent()}\n\n        <phn-dealer-search-results locale={this.locale} breakpoint={this.breakpoint} showOverlay={this.showOverlay} />\n      </Host>\n    );\n  }\n}\n","@import '../../scss';\n\n:host {\n  display: block;\n\n  phn-menu-item {\n    margin-top: p-px-to-rem(36px);\n\n    &:first-of-type {\n      margin-top: 0;\n    }\n  }\n}\n","import { Component, Event, EventEmitter, h, Prop } from '@stencil/core';\nimport { getLevel1Items } from '../../services/menu-items-service';\nimport { dealerSearchResultsStore } from '../../state/dealer-search-results-store';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { navStateStore } from '../../state/nav-state-store';\nimport { MenuItemVariant } from '../../utility/constants';\nimport { isDesktop } from '../../utility/helper';\nimport { isShopAvailable } from '../../utility/helpers/shop-helper';\n\n@Component({\n  tag: 'phn-level-1',\n  styleUrl: 'level-1.scss',\n  scoped: true\n})\nexport class Level1 {\n  @Prop() locale!: string;\n\n  @Prop() breakpoint!: number;\n\n  @Event({ bubbles: true }) mobileMenuItemClick!: EventEmitter<string[]>;\n\n  private showRightIconRight(iconRight: string | undefined): string | undefined {\n    const { app } = navStateStore.state;\n    const isOneUiMobileShop = isShopAvailable(this.locale, app) && !isDesktop(this.breakpoint);\n\n    if (iconRight !== undefined && isOneUiMobileShop) {\n      iconRight = 'arrow-head-right';\n    }\n    return iconRight;\n  }\n\n  render(): HTMLPhnLevel1Element {\n    const { loggedInState, unreadMessagesCount, userConsent } = navStateStore.state;\n    const level1Items = getLevel1Items(\n      navContentStore.state,\n      dealerSearchResultsStore.state,\n      this.locale,\n      loggedInState,\n      unreadMessagesCount,\n      userConsent\n    );\n\n    return (\n      <nav>\n        {level1Items.map(({ routingKeys, elementId, iconRight, showIconModifier, ...level1Item }) => (\n          <phn-menu-item\n            key={elementId}\n            elementId={elementId}\n            onClick={() => {\n              if (level1Item.link === undefined) {\n                this.mobileMenuItemClick.emit(routingKeys);\n              }\n            }}\n            iconRight={iconRight !== undefined ? this.showRightIconRight(iconRight) : 'arrow-head-right'}\n            variant={MenuItemVariant.Level1}\n            {...level1Item}\n          >\n            {showIconModifier ? (\n              <span\n                slot=\"icon-modifier\"\n                aria-hidden=\"true\"\n                class=\"myporsche-unread-messages-indicator\"\n                data-test-id=\"unread-messages-indicator\"\n              />\n            ) : null}\n          </phn-menu-item>\n        ))}\n      </nav>\n    );\n  }\n}\n","import { h, JSX } from '@stencil/core';\n\nexport default function MenuItemCountIndicator({ count }: { count: number }): JSX.Element | null {\n  if (count <= 0) return null;\n\n  return (\n    <phn-p-tag slot=\"suffix\" class=\"menu-item-count\" color=\"notification-info-soft\">\n      {count}\n    </phn-p-tag>\n  );\n}\n","import { Fragment, JSX, h } from '@stencil/core';\nimport { getVehiclePurchaseRoutingKey } from '../../../entities/routing-key';\nimport { TLink } from '../../../components';\nimport { EventActions } from '../../../utility/constants';\nimport MenuItemCountIndicator from './menu-item-count-indicator';\n\nexport default function MenuItemLink({\n  content,\n  count,\n  showSkeleton\n}: {\n  content: TLink | null;\n  count: number;\n  showSkeleton: boolean;\n}): JSX.Element | null {\n  return content ? (\n    <Fragment>\n      <phn-menu-item\n        elementId={getVehiclePurchaseRoutingKey(content.id)}\n        key={content.id}\n        class={`${showSkeleton ? 'skeleton' : 'vehiclepurchase-link'}`}\n        analyticsId={content.id}\n        text={content.text}\n        link={content.link}\n        datalayerEventAction={EventActions.NAVIGATION_LINK_CLICK}\n        role=\"listitem\"\n      >\n        <MenuItemCountIndicator count={count} />\n      </phn-menu-item>\n    </Fragment>\n  ) : null;\n}\n","@import '../../scss';\n\n:host {\n  display: block;\n\n  .skeleton {\n    width: auto;\n    height: p-px-to-rem(24px);\n    background: $pds-theme-light-contrast-low;\n    border-radius: 4px;\n  }\n\n  .skeleton-headline {\n    width: auto;\n    height: p-px-to-rem(50px);\n    background: $pds-theme-light-contrast-low;\n    border-radius: 4px;\n  }\n\n  ul {\n    padding: 0;\n    margin: 0;\n  }\n\n  phn-headline {\n    margin-bottom: p-px-to-rem(36px);\n  }\n\n  phn-menu-item {\n    margin-top: p-px-to-rem(24px);\n\n    @include pds-media-query-min('xs') {\n      margin-top: p-px-to-rem(20px);\n\n      &:first-of-type {\n        margin: 0;\n      }\n    }\n\n    @include pds-media-query-min('l') {\n      margin-top: p-px-to-rem(32px);\n    }\n\n    .vehiclepurchase-link {\n      margin-top: p-px-to-rem(24px);\n\n      @include pds-media-query-min('xs') {\n        margin-top: p-px-to-rem(20px);\n      }\n\n      @include pds-media-query-min('l') {\n        margin-top: p-px-to-rem(30px);\n      }\n\n      .menu-item-count {\n        margin-left: p-px-to-rem(16px);\n      }\n    }\n  }\n}\n","import { Component, Element, Event, EventEmitter, h, Host, JSX, Prop, State } from '@stencil/core';\nimport { TLink, TMenu, TVehiclePurchaseMenu } from '../../entities/content';\nimport { constructRoutingKey } from '../../entities/routing-key';\nimport { EventActions } from '../../utility/constants';\nimport { isString } from '../../utility/helper';\nimport { componentsOnReady } from '../../utility/ready';\nimport { Timeout } from '../../utility/timeout';\nimport { finderStateStore } from '../../state/finder-state-store';\nimport MenuItemLink from './saved-vehicles/menu-item-link';\n\n@Component({\n  tag: 'phn-menu',\n  styleUrl: 'menu.scss',\n  scoped: true\n})\nexport class Menu {\n  @Prop() routingKey!: string;\n  @Prop() item!: TMenu | TVehiclePurchaseMenu;\n  @Prop() showHeadline = true;\n  @Prop() receivedContent = false;\n\n  @State() showSkeleton = true;\n\n  @Element() el!: HTMLPhnMenuElement;\n\n  @Event({ bubbles: true, cancelable: false }) mobileMenuItemClick!: EventEmitter<string[]>;\n\n  componentWillLoad(): void {\n    this.waitForComponentsToLoad();\n  }\n\n  private savedVehiclesPosition = 3;\n\n  private async waitForComponentsToLoad() {\n    await componentsOnReady(this.el, new Timeout(5000));\n    this.showSkeleton = !this.receivedContent;\n  }\n\n  private showMenu(childItem: TMenu): void {\n    if (!isString(childItem.link)) {\n      this.mobileMenuItemClick.emit([constructRoutingKey(this.routingKey, childItem.id)]);\n    }\n  }\n\n  private getSavedVehiclesContent(content: TMenu | TVehiclePurchaseMenu): TLink | null {\n    const savedVehicles = (content as TVehiclePurchaseMenu).savedVehicles;\n    if (savedVehicles !== undefined) {\n      return savedVehicles;\n    }\n    return null;\n  }\n\n  render(): JSX.Element {\n    const displayedItem = this.item.children.length === 1 ? this.item.children[0] : this.item;\n    const savedVehicles = this.getSavedVehiclesContent(this.item);\n    const { savedVehiclesCount } = finderStateStore.state;\n\n    const menuItems = displayedItem.children.map((childItem) => (\n      <phn-menu-item\n        key={childItem.id}\n        class={`${this.showSkeleton ? 'skeleton' : ''}`}\n        elementId={constructRoutingKey(this.routingKey, childItem.id)}\n        iconRight={childItem.children.length > 0 && !this.showSkeleton ? 'arrow-head-right' : ''}\n        analyticsId={childItem.id}\n        text={childItem.text}\n        link={childItem.link}\n        datalayerEventAction={\n          isString(childItem.link) ? EventActions.NAVIGATION_LINK_CLICK : EventActions.NAVIGATION_CLICK\n        }\n        onClick={() => this.showMenu(childItem)}\n        role=\"listitem\"\n      />\n    ));\n\n    return (\n      <Host role=\"list\">\n        <ul>\n          {menuItems}\n\n          {savedVehicles\n            ? menuItems.splice(\n                this.savedVehiclesPosition,\n                0,\n                <MenuItemLink content={savedVehicles} count={savedVehiclesCount} showSkeleton={this.showSkeleton} />\n              )\n            : null}\n        </ul>\n      </Host>\n    );\n  }\n}\n","@import '../../scss';\n\n:host {\n  display: block;\n\n  @include pds-media-query-min('s') {\n    margin-top: p-px-to-rem(-28px);\n  }\n\n  @include pds-media-query-min('xl') {\n    margin-top: p-px-to-rem(-36px);\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  .skeleton-headline {\n    width: auto;\n    height: p-px-to-rem(50px);\n    background: $pds-theme-light-contrast-low;\n    border-radius: 4px;\n  }\n\n  .series {\n    justify-content: center;\n\n    margin: 0 0 p-px-to-rem(8px) 0;\n\n    @include pds-media-query-min('s') {\n      margin: 0 0 p-px-to-rem(8px) 0;\n    }\n\n    @include pds-media-query-min('m') {\n      margin: 0 0 p-px-to-rem(4px) 0;\n    }\n\n    @include pds-media-query-min('xl') {\n      margin: 0 0 p-px-to-rem(8px)  0;\n    }\n\n    .image {\n      @include hoverZoom();\n\n      @include pds-media-query-min('base') {\n        width: p-px-to-rem(174px);\n      }\n\n      @include pds-media-query-min('xs') {\n        width: p-px-to-rem(239px);\n      }\n\n      @include pds-media-query-min('s') {\n        width: p-px-to-rem(174px);\n      }\n\n      @include pds-media-query-min('l') {\n        width: p-px-to-rem(196px);\n      }\n\n      @include pds-media-query-min('xxl') {\n        width: p-px-to-rem(239px);\n      }\n    }\n\n    &.skeleton {\n      margin: 0 0 p-px-to-rem(8px) 0;\n\n      @include pds-media-query-min('xs') {\n        margin: 0 0 p-px-to-rem(16px);\n      }\n\n      @include pds-media-query-min('xxl') {\n        margin: 0 0 p-px-to-rem(24px) 0;\n      }\n    }\n  }\n}\n","import { Component, Element, Event, EventEmitter, getAssetPath, h, Host, JSX, Prop, State } from '@stencil/core';\nimport { Series } from '../../entities/content';\nimport { getModelsRoutingKey } from '../../entities/routing-key';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { navStateStore } from '../../state/nav-state-store';\nimport { EventActions, MenuItemVariant } from '../../utility/constants';\nimport { getConfig, getImageSize } from '../../utility/helper';\n\n@Component({\n  tag: 'phn-models',\n  styleUrl: 'models.scss',\n  assetsDirs: ['series-assets'],\n  scoped: true\n})\nexport class Models {\n  @Prop() breakpoint!: number;\n  @Prop() showHeadline = false;\n  @State() showSkeleton = true;\n\n  @Element() el!: HTMLPhnModelsElement;\n\n  private seriesImagesLoaded = new Set<string>();\n  private seriesImagesNotLoaded = new Set<string>();\n\n  @Event({ bubbles: true }) mobileMenuItemClick!: EventEmitter<string[]>;\n\n  private showMenuWithModels(series: Series): void {\n    const modelsSeriesRoutingKey = getModelsRoutingKey(series.id);\n    this.mobileMenuItemClick.emit([modelsSeriesRoutingKey]);\n  }\n\n  private handleImageLoad(seriesId: string) {\n    const { models } = navContentStore.state;\n\n    this.seriesImagesLoaded.add(seriesId);\n\n    if (models.series.every(({ id }) => this.seriesImagesLoaded.has(id))) {\n      this.showSkeleton = false;\n    }\n  }\n\n  private handleImageLoadError(seriesId: string) {\n    this.handleImageLoad(seriesId);\n    this.seriesImagesNotLoaded.add(seriesId);\n  }\n\n  private getImageSource(image: string): string {\n    const assetPath = getAssetPath(`${getConfig(navStateStore.state.env).ASSETS_URL}/series-assets`);\n    const imageSize = getImageSize(this.breakpoint);\n    const imagePath = `${assetPath}/${imageSize}`;\n\n    return `${imagePath}/${image}.webp, ${imagePath}/${image}@2x.webp 2x`;\n  }\n\n  render(): JSX.Element {\n    const { models } = navContentStore.state;\n\n    return (\n      <Host>\n        <ul>\n          {models.series.map((modelsSeries) => (\n            <phn-menu-item\n              key={modelsSeries.id}\n              class={`series ${this.seriesImagesNotLoaded.has(modelsSeries.id) || this.showSkeleton ? 'skeleton' : ''}`}\n              elementId={getModelsRoutingKey(modelsSeries.id)}\n              analyticsId={modelsSeries.id}\n              text={modelsSeries.name}\n              subtext={modelsSeries.tags.map((tag) => tag.text).join(' | ')}\n              onClick={() => this.showMenuWithModels(modelsSeries)}\n              variant={MenuItemVariant.Model}\n              isModels={true}\n              datalayerEventAction={EventActions.MODEL_RANGE_CLICK}\n              role=\"listitem\"\n            >\n              <img\n                slot=\"media\"\n                class=\"image\"\n                srcSet={this.getImageSource(modelsSeries.image)}\n                alt={`${modelsSeries.name} Frontshot`}\n                onLoad={() => this.handleImageLoad(modelsSeries.id)}\n                onError={() => this.handleImageLoadError(modelsSeries.id)}\n              />\n            </phn-menu-item>\n          ))}\n        </ul>\n      </Host>\n    );\n  }\n}\n","import { h, JSX } from '@stencil/core';\nimport { MyPorsche, TLink } from '../../entities/content';\nimport { getMyPorscheRoutingKey } from '../../entities/routing-key';\nimport featureToggles from '../../services/feature-toggles';\nimport { EventActions } from '../../utility/constants';\nimport { IsLoggedIn } from '../../utility/helper';\nimport { finderStateStore } from '../../state/finder-state-store';\nimport { navStateStore } from '../../state/nav-state-store';\n\nexport default function Links({\n  content,\n  onLogoutClick,\n  showSkeleton\n}: {\n  content: MyPorsche;\n  showSkeleton: boolean;\n  onLogoutClick: () => void;\n}): JSX.Element {\n  const messagesPosition = 1,\n    savedSearchesPosition = 2,\n    savedVehiclesPosition = 3;\n  const { loggedInState, unreadMessagesCount } = navStateStore.state;\n  const isLoggedIn = IsLoggedIn(loggedInState);\n  const { links, messages, savedSearches, savedVehicles } = content;\n  const { savedSearchesCount, savedVehiclesCount } = finderStateStore.state;\n\n  const convertedLinks = links.map<JSX.Element>((link) => (\n    <div class=\"myporsche-link-item\" key={link.id}>\n      <phn-menu-item\n        elementId={getMyPorscheRoutingKey(link.id)}\n        class={`${showSkeleton ? 'skeleton' : ''}`}\n        analyticsId={link.id}\n        text={link.text}\n        link={link.link}\n        datalayerEventAction={EventActions.NAVIGATION_LINK_CLICK}\n      />\n    </div>\n  ));\n\n  convertedLinks.splice(\n    messagesPosition,\n    0,\n    <MenuItemCountLink content={messages} count={unreadMessagesCount} showSkeleton={showSkeleton} />\n  );\n\n  if (savedSearches && savedSearches.text !== '' && featureToggles.isSavedItemsToggleActive()) {\n    convertedLinks.splice(\n      savedSearchesPosition,\n      0,\n      <MenuItemCountLink content={savedSearches} count={savedSearchesCount} showSkeleton={showSkeleton} />\n    );\n  }\n  if (savedVehicles && savedVehicles.text !== '' && featureToggles.isSavedItemsToggleActive()) {\n    convertedLinks.splice(\n      savedVehiclesPosition,\n      0,\n      <MenuItemCountLink content={savedVehicles} count={savedVehiclesCount} showSkeleton={showSkeleton} />\n    );\n  }\n\n  if (isLoggedIn) {\n    convertedLinks.push(<LogoutLink content={content} onLogoutClick={onLogoutClick} showSkeleton={showSkeleton} />);\n  }\n  return (\n    <div class=\"myporsche-links\">\n      {showSkeleton ? (\n        <div class=\"skeleton-menu\">\n          {convertedLinks.map(() => (\n            <div class=\"skeleton-menu-item\" />\n          ))}\n        </div>\n      ) : null}\n      <div style={{ display: showSkeleton ? 'none' : '', width: '100%' }}>\n        <div class={`${isLoggedIn ? 'logged-in' : ''} myporsche-links-container`}>{convertedLinks}</div>\n      </div>\n    </div>\n  );\n}\n\nfunction MenuItemCountLink({\n  content,\n  count,\n  showSkeleton\n}: {\n  content: TLink | null;\n  count: number;\n  showSkeleton: boolean;\n}): JSX.Element | null {\n  return content ? (\n    <div class=\"myporsche-link-item\" key={content.id}>\n      <phn-menu-item\n        elementId={getMyPorscheRoutingKey(content.id)}\n        class={`${showSkeleton ? 'skeleton' : ''}`}\n        analyticsId={content.id}\n        text={content.text}\n        link={content.link}\n        datalayerEventAction={EventActions.NAVIGATION_LINK_CLICK}\n      >\n        <MenuItemCountIndicator count={count} />\n      </phn-menu-item>\n    </div>\n  ) : null;\n}\n\nfunction LogoutLink({\n  content,\n  onLogoutClick,\n  showSkeleton\n}: {\n  content: MyPorsche;\n  showSkeleton: boolean;\n  onLogoutClick: () => void;\n}): JSX.Element {\n  const { logout } = content;\n\n  return (\n    <div class=\"myporsche-link-item\" key={logout.id}>\n      <phn-menu-item\n        elementId={getMyPorscheRoutingKey(logout.id)}\n        class={`myporsche-menu-item logout${showSkeleton ? 'skeleton' : ''}`}\n        analyticsId={logout.id}\n        text={logout.text}\n        onClick={onLogoutClick}\n        datalayerEventAction={EventActions.NAVIGATION_LINK_CLICK}\n      />\n    </div>\n  );\n}\n\nfunction MenuItemCountIndicator({ count }: { count: number }): JSX.Element | null {\n  if (count <= 0) return null;\n\n  return (\n    <phn-p-tag slot=\"suffix\" class=\"menu-item-count\" color=\"notification-info-soft\">\n      {count}\n    </phn-p-tag>\n  );\n}\n","import { Fragment, h, JSX } from '@stencil/core';\nimport { MyPorsche } from '../../entities/content';\nimport { IsLoggedIn } from '../../utility/helper';\nimport { navStateStore } from '../../state/nav-state-store';\n\nexport default function Login({\n  content,\n  showSkeleton\n}: {\n  content: MyPorsche;\n  showSkeleton: boolean;\n}): JSX.Element | null {\n  const { login, more, signup, signupText } = content;\n  const { loggedInState } = navStateStore.state;\n  const isLoggedIn = IsLoggedIn(loggedInState);\n\n  if (isLoggedIn) {\n    return null;\n  }\n  return (\n    <div class=\"myporsche-login\">\n      {showSkeleton ? (\n        <Fragment>\n          <div class=\"skeleton-login-container\">\n            <div class=\"skeleton-login\" />\n            <div class=\"skeleton-more\" />\n          </div>\n\n          <div class=\"skeleton-signup-container\">\n            <div class=\"skeleton-signup\">{content.signupText}</div>\n          </div>\n        </Fragment>\n      ) : null}\n      <phn-myporsche-login\n        login={login}\n        more={more}\n        signup={signup}\n        signupText={signupText}\n        style={{ display: showSkeleton ? 'none' : '' }}\n      />\n    </div>\n  );\n}\n","@import '../../scss';\n\n@mixin set-skeleton {\n  &.skeleton {\n    pointer-events: none;\n    user-select: none;\n\n    & .skeleton-headline {\n      width: 100%;\n      height: p-px-to-rem(40px);\n      background: $pds-theme-light-contrast-low;\n      border-radius: 4px;\n      font-size: p-px-to-rem(28px);\n      line-height: p-px-to-rem(40px);\n      margin-bottom: p-px-to-rem(8px);\n\n      @include pds-media-query-min('s') {\n        margin-bottom: 0;\n        font-size: p-px-to-rem(30px);\n        line-height: p-px-to-rem(40px);\n      }\n\n      @include pds-media-query-min('m') {\n        font-size: p-px-to-rem(28px);\n        line-height: p-px-to-rem(40px);\n      }\n\n      @include pds-media-query-min('l') {\n        @include pds-heading-medium;\n      }\n    }\n\n    & .skeleton-login-container {\n      width: 100%;\n      display: flex;\n      justify-content: space-between;\n      flex-direction: column;\n      border-radius: 4px;\n\n      @include pds-media-query-min('xs') {\n        flex-direction: row;\n      }\n\n      @include pds-media-query-min('s') {\n        flex-direction: column;\n      }\n\n      @include pds-media-query-min('xxl') {\n        flex-direction: row;\n      }\n\n      .skeleton-login {\n        height: p-px-to-rem(48px);\n        width: 100%;\n        margin: p-px-to-rem(36px) 0 p-px-to-rem(16px) 0;\n        border-radius: 4px;\n        background: $pds-theme-light-contrast-low;\n\n        @include pds-media-query-min('xs') {\n          margin: p-px-to-rem(36px) p-px-to-rem(8px) p-px-to-rem(16px) 0;\n        }\n\n        @include pds-media-query-min('s') {\n          margin: 0 p-px-to-rem(16px) p-px-to-rem(16px) 0;\n        }\n\n        @include pds-media-query-min('xl') {\n          margin: 0 p-px-to-rem(16px) p-px-to-rem(23px) 0;\n        }\n      }\n\n      .skeleton-more {\n        height: p-px-to-rem(48px);\n        margin: 0 0 p-px-to-rem(16px) 0;\n        width: 100%;\n        background: $pds-theme-light-contrast-low;\n        border-radius: 4px;\n\n        @include pds-media-query-min('xs') {\n          margin: p-px-to-rem(36px) 0 p-px-to-rem(16px) p-px-to-rem(8px);\n        }\n\n        @include pds-media-query-min('s') {\n          margin: 0 0 p-px-to-rem(23px) 0;\n        }\n\n        @include pds-media-query-min('xl') {\n          margin: 0 p-px-to-rem(16px) p-px-to-rem(23px) 0;\n        }\n      }\n    }\n\n    & .skeleton-signup-container {\n      padding-bottom: p-px-to-rem(24px);\n      border-radius: 4px;\n    }\n\n    & .skeleton-signup {\n      color: transparent;\n      background: $pds-theme-light-contrast-low;\n      border-radius: 4px;\n    }\n\n    & .skeleton-menu {\n      width: 100%;\n      height: p-px-to-rem(48px);\n      border-radius: 4px;\n    }\n\n    & .skeleton-menu-item {\n      width: 100%;\n      height: p-px-to-rem(24px);\n      background: $pds-theme-light-contrast-low;\n      margin-top: p-px-to-rem(24px);\n      border-radius: 4px;\n    }\n\n    & .skeleton-menu-item:first-of-type {\n      margin-top: p-px-to-rem(12px);\n    }\n  }\n}\n\n:host {\n  display: block;\n  margin-top: 0;\n\n  @include set-skeleton;\n\n  .myporsche-links {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n\n    .myporsche-links-container {\n      &.logged-in > .myporsche-link-item:first-child > phn-menu-item {\n        padding-top: 0;\n      }\n\n      .myporsche-link-item > phn-menu-item {\n        padding: p-px-to-rem(10px) 0 p-px-to-rem(10px) 0;\n\n        @include pds-media-query-min('xxl') {\n          padding: p-px-to-rem(16px) 0 p-px-to-rem(16px) 0;\n        }\n      }\n    }\n\n    .menu-item-count {\n      margin-left: p-px-to-rem(16px);\n    }\n  }\n\n  .headline-container {\n    border-bottom: 2px solid $pds-theme-dark-background-base;\n\n    @include pds-media-query-min('xs') {\n      padding-bottom: p-px-to-rem(2px);\n      display: flex;\n      align-items: center;\n    }\n\n    @include pds-media-query-min('s') {\n      padding-bottom: p-px-to-rem(16px);\n    }\n\n    @include pds-media-query-min('xxl') {\n      padding-bottom: p-px-to-rem(24px);\n    }\n\n    .myporsche-headline {\n      font-size: p-px-to-rem(28px);\n      line-height: p-px-to-rem(40px);\n      padding-bottom: p-px-to-rem(8px);\n\n      @include pds-media-query-min('s') {\n        padding-bottom: 0;\n        font-size: p-px-to-rem(30px);\n        line-height: p-px-to-rem(40px);\n      }\n\n      @include pds-media-query-min('m') {\n        font-size: p-px-to-rem(28px);\n        line-height: p-px-to-rem(40px);\n      }\n\n      @include pds-media-query-min('l') {\n        @include pds-heading-medium;\n      }\n    }\n\n    .headline-divider {\n      padding: 0 p-px-to-rem(18px) 0 p-px-to-rem(16px);\n      height: p-px-to-rem(32px);\n    }\n\n    .user-container {\n      padding-bottom: p-px-to-rem(17px);\n      display: inline-flex;\n      align-items: center;\n\n      @include pds-media-query-min('xs') {\n        padding-bottom: 0;\n      }\n\n      phn-p-icon {\n        padding-right: p-px-to-rem(7px);\n        width: p-px-to-rem(20px);\n        height: p-px-to-rem(20px);\n      }\n\n      phn-p-text {\n        font-size: p-px-to-rem(12px);\n\n        @include pds-media-query-min('xs') {\n          padding: 0;\n        }\n      }\n    }\n  }\n\n  phn-p-divider {\n    display: block;\n    height: 100%;\n    align-self: center;\n    padding: 0 p-px-to-rem(119px);\n\n    @include pds-media-query-min('xl') {\n      padding: 0 p-px-to-rem(150px);\n    }\n  }\n\n}\n","import { Component, Element, Event, EventEmitter, h, Host, JSX, State } from '@stencil/core';\nimport { componentsOnReady } from '../../utility/ready';\nimport { Timeout } from '../../utility/timeout';\nimport Links from './myporsche-drawer-links';\nimport Login from './myporsche-drawer-login';\nimport { navContentStore } from '../../state/nav-content-store';\n\n@Component({\n  tag: 'phn-myporsche-drawer',\n  styleUrl: 'myporsche-drawer.scss',\n  scoped: true\n})\nexport class MyPorscheDrawer {\n  @State() showSkeleton = true;\n\n  @Element() el!: HTMLPhnMyporscheDrawerElement;\n\n  @Event() logoutEvent!: EventEmitter<void>;\n\n  private async waitForComponentsToLoad() {\n    await componentsOnReady(this.el, new Timeout(5000));\n    this.showSkeleton = false;\n  }\n\n  componentWillLoad(): void {\n    this.waitForComponentsToLoad();\n  }\n\n  render(): JSX.Element | null {\n    const { myPorsche } = navContentStore.state;\n\n    if (!myPorsche) return null;\n\n    return (\n      <Host class={this.showSkeleton ? 'skeleton' : ''}>\n        <div class=\"phn-flex-col phn-justify-around\">\n          <Login content={myPorsche} showSkeleton={this.showSkeleton} />\n          <Links content={myPorsche} onLogoutClick={() => this.logoutEvent.emit()} showSkeleton={this.showSkeleton} />\n        </div>\n      </Host>\n    );\n  }\n}\n","export function replaceVariables(template: string, data: Record<string, string | number>): string {\n  const regex = /{(.*?)}/g;\n  return (\n    template?.replace(regex, (_match: string, variable: string): string => {\n      const value = data[variable.trim()];\n      return value !== undefined ? String(value) : '';\n    }) || ''\n  );\n}\n","import { getMenuContent } from '../../../services/menu-items-service';\nimport { navContentStore } from '../../../state/nav-content-store';\nimport { EventEmitter, Fragment, h } from '@stencil/core';\nimport { constructRoutingKey, RoutingKeys } from '../../../entities/routing-key';\nimport { isDesktop, IsLoggedIn, isString } from '../../../utility/helper';\nimport { EventActions } from '../../../utility/constants';\nimport { TShopAuthStatus, TShopMenu } from '../../../entities/content';\nimport { navStateStore } from '../../../state/nav-state-store';\nimport {\n  filterWishlistItemsByAuthStatus,\n  getAvailableShopVariables,\n  getIconNameByMenuItemId\n} from '../../../utility/helpers/shop-helper';\nimport { replaceVariables } from '../../../utility/helpers/string-helper';\n\ntype ShopSectionTypes = {\n  activeRoutingKey: string;\n  breakpoint: number;\n  receivedContent: boolean;\n  loginEvent: EventEmitter<void>;\n};\n\nexport default function ShopSection({\n  activeRoutingKey,\n  breakpoint,\n  receivedContent,\n  loginEvent\n}: ShopSectionTypes): HTMLElement {\n  const showHeadline = !isDesktop(breakpoint);\n  const displayedContent = getMenuContent(navContentStore.state, activeRoutingKey, RoutingKeys.SHOP) as TShopMenu;\n\n  if (displayedContent === null) {\n    return <div></div>;\n  }\n\n  const wishListAuthStatusList: TShopAuthStatus[] = IsLoggedIn(navStateStore.state.loggedInState)\n    ? ['loggedIn', null]\n    : ['loggedOut', null];\n\n  const wishListItems = filterWishlistItemsByAuthStatus(displayedContent.additionalContent, wishListAuthStatusList);\n\n  function emitLogin(id: string) {\n    if (id === 'login') loginEvent.emit();\n  }\n\n  return (\n    <Fragment>\n      <phn-menu\n        item={displayedContent}\n        routingKey={activeRoutingKey}\n        showHeadline={showHeadline}\n        receivedContent={receivedContent}\n      />\n      {activeRoutingKey === RoutingKeys.SHOP ? (\n        <div class=\"wishlist-container\" role=\"list\">\n          {wishListItems.map((childItem) => {\n            return (\n              <phn-menu-item\n                key={childItem.id}\n                data-id={childItem.id}\n                size={'x-small'}\n                class={!(isString(childItem.iconUrl) || isString(childItem.icon)) ? 'no-icon' : ''}\n                iconLeft={\n                  (isString(childItem.id) && getIconNameByMenuItemId(childItem.id)) ||\n                  childItem.icon ||\n                  childItem.iconUrl\n                }\n                elementId={constructRoutingKey(activeRoutingKey, childItem.id)}\n                analyticsId={childItem.id}\n                text={replaceVariables(childItem.text, getAvailableShopVariables())}\n                link={childItem.link}\n                datalayerEventAction={\n                  isString(childItem.link) ? EventActions.NAVIGATION_LINK_CLICK : EventActions.NAVIGATION_CLICK\n                }\n                onClick={() => {\n                  emitLogin(childItem.id);\n                }}\n                role=\"listitem\"\n              />\n            );\n          })}\n        </div>\n      ) : null}\n    </Fragment>\n  );\n}\n","import { getMenuContent } from '../../../services/menu-items-service';\nimport { navContentStore } from '../../../state/nav-content-store';\nimport { h } from '@stencil/core';\nimport { isDesktop } from '../../../utility/helper';\nimport { TVehiclePurchaseMenu } from '../../../entities/content';\n\ntype VehiclePurchaseSectionTypes = {\n  activeRoutingKey: string;\n  topLevelRoutingKey: string;\n  breakpoint: number;\n  receivedContent: boolean;\n};\n\nexport default function VehiclePurchaseSection({\n  activeRoutingKey,\n  topLevelRoutingKey,\n  breakpoint,\n  receivedContent\n}: VehiclePurchaseSectionTypes): HTMLElement {\n  const showHeadline = !isDesktop(breakpoint);\n  const displayedContent = getMenuContent(\n    navContentStore.state,\n    activeRoutingKey,\n    topLevelRoutingKey\n  ) as TVehiclePurchaseMenu;\n\n  /* istanbul ignore if */\n  if (displayedContent === null) {\n    return <div></div>;\n  }\n\n  return (\n    <phn-menu\n      item={displayedContent}\n      routingKey={activeRoutingKey}\n      showHeadline={showHeadline}\n      receivedContent={receivedContent}\n    />\n  );\n}\n","@import '../../scss';\n\n@mixin shopSection(){\n  .wishlist-container{\n    padding: p-px-to-rem(16px) ;\n    background-color: #ffffff;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n    border-radius: p-px-to-rem(12px);\n    margin-top: p-px-to-rem(48px);\n\n    @include pds-media-query-max('s') {\n      background-color: #EEEFF2;\n    }\n\n    .no-icon {\n      padding-left: p-px-to-rem(28px);\n    }\n  }\n\n}\n\n:host {\n  display: block;\n  box-sizing: border-box;\n\n  @include shopSection()\n\n}\n","import { Component, Event, EventEmitter, h, Prop } from '@stencil/core';\nimport { findTopLevelRoutingKey, getLastRoutingSegment, RoutingKeys } from '../../entities/routing-key';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { isDesktop, isString } from '../../utility/helper';\nimport ShopSection from './sections/shop';\nimport VehiclePurchaseSection from './sections/vehiclePurchase';\n\n@Component({\n  tag: 'phn-router',\n  scoped: true,\n  styleUrl: 'router.scss'\n})\nexport class Router {\n  @Prop() activeRoutingKey!: string;\n  @Prop() breakpoint!: number;\n  @Prop() locale!: string;\n  @Prop() receivedContent = false;\n\n  @Event() loginEvent!: EventEmitter<void>;\n\n  render(): HTMLPhnRouterElement {\n    const { models, myPorsche, dealer } = navContentStore.state;\n    const topLevelRoutingKey = findTopLevelRoutingKey(this.activeRoutingKey);\n    const showHeadline = !isDesktop(this.breakpoint);\n\n    switch (topLevelRoutingKey) {\n      case RoutingKeys.DEALER_SEARCH: {\n        const routingId = getLastRoutingSegment(this.activeRoutingKey);\n        const dealerId = routingId !== topLevelRoutingKey ? routingId : '';\n\n        if (isString(dealerId)) {\n          return <phn-dealer-details-drawer breakpoint={this.breakpoint} dealerId={dealerId} locale={this.locale} />;\n        }\n\n        return (\n          <phn-dealer-search-form\n            breakpoint={this.breakpoint}\n            dealer={dealer}\n            locale={this.locale}\n            showHeadline={showHeadline}\n          />\n        );\n      }\n\n      case RoutingKeys.MY_PORSCHE: {\n        if (myPorsche !== null) {\n          return <phn-myporsche-drawer class=\"overlay-content\" />;\n        }\n\n        return <div></div>;\n      }\n\n      case RoutingKeys.SERIES:\n      case RoutingKeys.MODELS: {\n        const routingId = getLastRoutingSegment(this.activeRoutingKey);\n        const activeModelsSeries = models.series.find((modelsSeries) => routingId === modelsSeries.id);\n\n        if (activeModelsSeries !== undefined) {\n          return (\n            <phn-car-body-types-drawer\n              series={activeModelsSeries}\n              breakpoint={this.breakpoint}\n              activeRoutingKey={this.activeRoutingKey}\n            />\n          );\n        }\n\n        return <phn-models showHeadline={showHeadline} breakpoint={this.breakpoint} />;\n      }\n\n      case RoutingKeys.MORE:\n      case RoutingKeys.EXPERIENCE:\n      case RoutingKeys.SERVICES:\n      case RoutingKeys.VEHICLE_PURCHASE: {\n        return (\n          <VehiclePurchaseSection\n            activeRoutingKey={this.activeRoutingKey}\n            topLevelRoutingKey={topLevelRoutingKey}\n            receivedContent={this.receivedContent}\n            breakpoint={this.breakpoint}\n          />\n        );\n      }\n\n      case RoutingKeys.SHOP:\n        return (\n          <ShopSection\n            activeRoutingKey={this.activeRoutingKey}\n            receivedContent={this.receivedContent}\n            breakpoint={this.breakpoint}\n            loginEvent={this.loginEvent}\n          />\n        );\n\n      default: {\n        return <phn-level-1 locale={this.locale} breakpoint={this.breakpoint} />;\n      }\n    }\n  }\n}\n"],"mappings":"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"}