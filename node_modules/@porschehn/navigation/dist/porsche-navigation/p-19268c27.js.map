{"version":3,"names":["FEATURE_OVERRIDE_ENABLED","FEATURE_PORSCHE_75_YEARS_LOGO","FEATURE_SHOP","FEATURE_PCOM_SEARCH","FEATURE_SAVED_ITEMS","FEATURE_AB_TESTING","FEATURE_DEALER_SEARCH_CHINA","FEATURE_DEALER_SEARCH_OPENING_HOURS","LOGGING_ENDPOINT","Logger","constructor","this","env","version","VERSION","breakpoint","locale","init","log","logName","level","id","message","errorType","Environments","TEST","JSON","stringify","name","hostname","windowService","location","pathname","PRODUCTION","fetch","method","body","mode","console","err","info","error","NaviError","type","NaviErrorTypes","GENERAL","logger","FeatureToggles","getEnvironment","DEFAULT_ENVIRONMENT","featureEnvMap","featureJson","features","isShopToggleActive","isFeatureEnabled","search","isPcomSearchToggleActive","isSavedItemsToggleActive","isABTestingToggleActive","isDealerSearchChinaEnabled","isDealerSearchOpeningHoursEnabled","loadRemoteToggles","BFFEndpoint","getConfig","BFF_ENDPOINT","response","ok","text","Error","result","json","stringToBooleanStrict","value","getUrlFeatureToggleOverride","feature","searchString","queryValue","_b","_a","split","find","query","includes","isString","getLocalStorageFeatureToggleOverride","localStorageValue","localStorage","getItem","undefined","isOnSecurityLayer","enabled","featureToggleOverrides","featureToggleOverride","setFeatures","prodDisabledToggles","featureToggles"],"sources":["src/utility/constants/feature-toggles.ts","src/services/logger.ts","src/services/feature-toggles.ts"],"sourcesContent":["export const FEATURE_OVERRIDE_ENABLED = 'featureOverrideEnabled';\nexport const FEATURE_PORSCHE_75_YEARS_LOGO = 'porsche_75_years_logo';\nexport const FEATURE_SHOP = 'shop';\nexport const FEATURE_PCOM_SEARCH = 'pcom_search';\nexport const FEATURE_SAVED_ITEMS = 'saved_items';\nexport const FEATURE_AB_TESTING = 'ab';\n\nexport const FEATURE_DEALER_SEARCH_CHINA = 'dealer_search_china';\nexport const FEATURE_DEALER_SEARCH_OPENING_HOURS = 'opening_hours';\n","import { Environments, Environment } from '../entities/environment';\nimport { VERSION } from '../utility/constants';\nimport { NaviError, NaviErrorType, NaviErrorTypes } from '../utility/navi-error';\nimport windowService from './window-service';\n\nexport const LOGGING_ENDPOINT = 'https://logs.nav.porsche.com';\n\nconst enum LogLevel {\n  DEBUG = 'debug',\n  INFO = 'info',\n  ERROR = 'error'\n}\n\nclass Logger {\n  private env: Environment | null = null;\n  private version = VERSION;\n  private breakpoint = 0;\n  private locale: string | null = null;\n\n  init(env: Environment, breakpoint: number, locale: string) {\n    this.env = env;\n    this.breakpoint = breakpoint;\n    this.locale = locale;\n  }\n\n  private log(logName: string, level: LogLevel, id: string, message: string, errorType?: NaviErrorType) {\n    if (this.env === Environments.TEST) {\n      return;\n    }\n\n    try {\n      const log = JSON.stringify({\n        name: logName,\n        level: level,\n        env: this.env,\n        breakpoint: this.breakpoint,\n        locale: this.locale,\n        version: this.version,\n        hostname: windowService.location.hostname,\n        pathname: windowService.location.pathname,\n        id,\n        errorType: errorType || '',\n        message\n      });\n\n      if (this.env === Environments.PRODUCTION) {\n        if (level !== LogLevel.DEBUG) {\n          fetch(LOGGING_ENDPOINT, {\n            method: 'POST',\n            body: log,\n            mode: 'no-cors'\n          });\n        }\n      } else {\n        // eslint-disable-next-line no-console\n        console[level](log);\n      }\n    } catch (err) {\n      // throw the error away\n    }\n  }\n\n  info(id: string, message = '') {\n    this.log('PHN_HEADER_LOG_ENTRY', LogLevel.INFO, id, message);\n  }\n\n  error(id: string, err: Error) {\n    const errorType = err instanceof NaviError ? err.type : NaviErrorTypes.GENERAL;\n    this.log('PHN_HEADER_LOG_ENTRY', LogLevel.ERROR, id, err.message, errorType);\n  }\n}\n\nexport default new Logger();\n","import { Environment, Environments, getEnvironment } from '../entities/environment';\nimport featureJson from '../feature-toggles.json';\nimport {\n  DEFAULT_ENVIRONMENT,\n  FEATURE_AB_TESTING,\n  FEATURE_DEALER_SEARCH_CHINA,\n  FEATURE_DEALER_SEARCH_OPENING_HOURS,\n  FEATURE_OVERRIDE_ENABLED,\n  FEATURE_PCOM_SEARCH,\n  FEATURE_SAVED_ITEMS,\n  FEATURE_SHOP\n} from '../utility/constants';\nimport { getConfig, isString } from '../utility/helper';\nimport { NaviError, NaviErrorTypes } from '../utility/navi-error';\nimport logger from './logger';\nimport windowService from './window-service';\n\ntype FeatureMap = { [featureName: string]: { enabled: boolean } };\n\nexport class FeatureToggles {\n  features: FeatureMap = {};\n  env: Environment = 'local';\n\n  constructor(\n    env = getEnvironment(DEFAULT_ENVIRONMENT),\n    private readonly featureEnvMap: { [env: string]: FeatureMap } = featureJson\n  ) {\n    this.env = env;\n    this.features = this.featureEnvMap[env];\n  }\n\n  private async loadRemoteToggles(): Promise<void> {\n    try {\n      const BFFEndpoint = getConfig(this.env).BFF_ENDPOINT;\n\n      const response = await fetch(`${BFFEndpoint}/toggles?env=${this.env}`);\n\n      if (!response.ok) {\n        const text = await response.text();\n        throw new Error(text);\n      }\n\n      const result = await response.json();\n\n      this.features = result;\n    } catch (err) {\n      throw new NaviError(`Load Feature Toggles failed with error: ${err}`, NaviErrorTypes.GENERAL);\n    }\n  }\n\n  private stringToBooleanStrict(value: string): boolean | null {\n    if (value === 'true') {\n      return true;\n    }\n    if (value === 'false') {\n      return false;\n    }\n    return null;\n  }\n\n  private getUrlFeatureToggleOverride(feature: string, searchString: string): boolean | null {\n    const queryValue = searchString\n      .split('?')[1]\n      ?.split('&')\n      .find((query) => query.includes(feature))\n      ?.split('=')[1];\n\n    return isString(queryValue) ? this.stringToBooleanStrict(queryValue || '') : null;\n  }\n\n  private getLocalStorageFeatureToggleOverride(feature: string): boolean | null {\n    const localStorageValue = localStorage.getItem(`phn.${feature}`);\n\n    return isString(localStorageValue) ? this.stringToBooleanStrict(localStorageValue) : null;\n  }\n\n  isFeatureEnabled(feature: string, searchString: string): boolean {\n    if (this.features === undefined) {\n      return false;\n    }\n\n    if (this.env === Environments.PRODUCTION && this.isOnSecurityLayer(feature)) {\n      return false;\n    }\n\n    if (this.features[FEATURE_OVERRIDE_ENABLED]?.enabled) {\n      const featureToggleOverrides = [\n        this.getUrlFeatureToggleOverride(feature, searchString),\n        this.getLocalStorageFeatureToggleOverride(feature)\n      ];\n\n      for (const featureToggleOverride of featureToggleOverrides) {\n        if (featureToggleOverride !== null) {\n          return featureToggleOverride;\n        }\n      }\n    }\n\n    if (this.features[feature] !== undefined) {\n      return this.features[feature].enabled;\n    } else {\n      return false;\n    }\n  }\n\n  async setFeatures(env: Environment): Promise<void> {\n    this.env = env;\n    try {\n      if (env === 'test') {\n        this.features = this.featureEnvMap[env];\n        return;\n      }\n      await this.loadRemoteToggles();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (error: any) {\n      logger.error('INIT_APP_CONFIG', error);\n      this.features = this.featureEnvMap[env];\n    }\n  }\n\n  isOnSecurityLayer(feature: string): boolean {\n    const prodDisabledToggles = ['opening_hours'];\n    return prodDisabledToggles.includes(feature);\n  }\n\n  isShopToggleActive = (): boolean => this.isFeatureEnabled(FEATURE_SHOP, windowService.location.search);\n  isPcomSearchToggleActive = (): boolean => this.isFeatureEnabled(FEATURE_PCOM_SEARCH, windowService.location.search);\n  isSavedItemsToggleActive = (): boolean => this.isFeatureEnabled(FEATURE_SAVED_ITEMS, windowService.location.search);\n  isABTestingToggleActive = (): boolean => this.isFeatureEnabled(FEATURE_AB_TESTING, windowService.location.search);\n  isDealerSearchChinaEnabled = (): boolean =>\n    this.isFeatureEnabled(FEATURE_DEALER_SEARCH_CHINA, windowService.location.search);\n  isDealerSearchOpeningHoursEnabled = (): boolean =>\n    this.isFeatureEnabled(FEATURE_DEALER_SEARCH_OPENING_HOURS, windowService.location.search);\n}\n\nexport default new FeatureToggles();\n"],"mappings":"sJAAO,MAAMA,EAA2B,yB,MAC3BC,EAAgC,wBACtC,MAAMC,EAAe,OACrB,MAAMC,EAAsB,cAC5B,MAAMC,EAAsB,cAC5B,MAAMC,EAAqB,KAE3B,MAAMC,EAA8B,sBACpC,MAAMC,EAAsC,gB,q+BCH5C,MAAMC,EAAmB,+BAQhC,MAAMC,EAAN,WAAAC,GACUC,KAAAC,IAA0B,KAC1BD,KAAAE,QAAUC,EACVH,KAAAI,WAAa,EACbJ,KAAAK,OAAwB,I,CAEhC,IAAAC,CAAKL,EAAkBG,EAAoBC,GACzCL,KAAKC,IAAMA,EACXD,KAAKI,WAAaA,EAClBJ,KAAKK,OAASA,C,CAGR,GAAAE,CAAIC,EAAiBC,EAAiBC,EAAYC,EAAiBC,GACzE,GAAIZ,KAAKC,MAAQY,EAAaC,KAAM,CAClC,M,CAGF,IACE,MAAMP,EAAMQ,KAAKC,UAAU,CACzBC,KAAMT,EACNC,MAAOA,EACPR,IAAKD,KAAKC,IACVG,WAAYJ,KAAKI,WACjBC,OAAQL,KAAKK,OACbH,QAASF,KAAKE,QACdgB,SAAUC,EAAcC,SAASF,SACjCG,SAAUF,EAAcC,SAASC,SACjCX,KACAE,UAAWA,GAAa,GACxBD,YAGF,GAAIX,KAAKC,MAAQY,EAAaS,WAAY,CACxC,GAAIb,IAAK,QAAqB,CAC5Bc,MAAM1B,EAAkB,CACtB2B,OAAQ,OACRC,KAAMlB,EACNmB,KAAM,W,MAGL,CAELC,QAAQlB,GAAOF,E,EAEjB,MAAOqB,G,EAKX,IAAAC,CAAKnB,EAAYC,EAAU,IACzBX,KAAKO,IAAI,uBAAsB,OAAiBG,EAAIC,E,CAGtD,KAAAmB,CAAMpB,EAAYkB,GAChB,MAAMhB,EAAYgB,aAAeG,EAAYH,EAAII,KAAOC,EAAeC,QACvElC,KAAKO,IAAI,uBAAsB,QAAkBG,EAAIkB,EAAIjB,QAASC,E,EAItE,MAAAuB,EAAe,IAAIrC,E,MCrDNsC,EAIX,WAAArC,CACEE,EAAMoC,EAAeC,GACJC,EAA+CC,GAA/CxC,KAAAuC,gBALnBvC,KAAAyC,SAAuB,GACvBzC,KAAAC,IAAmB,QAwGnBD,KAAA0C,mBAAqB,IAAe1C,KAAK2C,iBAAiBpD,EAAc4B,EAAcC,SAASwB,QAC/F5C,KAAA6C,yBAA2B,IAAe7C,KAAK2C,iBAAiBnD,EAAqB2B,EAAcC,SAASwB,QAC5G5C,KAAA8C,yBAA2B,IAAe9C,KAAK2C,iBAAiBlD,EAAqB0B,EAAcC,SAASwB,QAC5G5C,KAAA+C,wBAA0B,IAAe/C,KAAK2C,iBAAiBjD,EAAoByB,EAAcC,SAASwB,QAC1G5C,KAAAgD,2BAA6B,IAC3BhD,KAAK2C,iBAAiBhD,EAA6BwB,EAAcC,SAASwB,QAC5E5C,KAAAiD,kCAAoC,IAClCjD,KAAK2C,iBAAiB/C,EAAqCuB,EAAcC,SAASwB,QAzGlF5C,KAAKC,IAAMA,EACXD,KAAKyC,SAAWzC,KAAKuC,cAActC,E,CAG7B,uBAAMiD,GACZ,IACE,MAAMC,EAAcC,EAAUpD,KAAKC,KAAKoD,aAExC,MAAMC,QAAiB/B,MAAM,GAAG4B,iBAA2BnD,KAAKC,OAEhE,IAAKqD,EAASC,GAAI,CAChB,MAAMC,QAAaF,EAASE,OAC5B,MAAM,IAAIC,MAAMD,E,CAGlB,MAAME,QAAeJ,EAASK,OAE9B3D,KAAKyC,SAAWiB,C,CAChB,MAAO9B,GACP,MAAM,IAAIG,EAAU,2CAA2CH,IAAOK,EAAeC,Q,EAIjF,qBAAA0B,CAAsBC,GAC5B,GAAIA,IAAU,OAAQ,CACpB,OAAO,I,CAET,GAAIA,IAAU,QAAS,CACrB,OAAO,K,CAET,OAAO,I,CAGD,2BAAAC,CAA4BC,EAAiBC,G,QACnD,MAAMC,GAAaC,GAAAC,EAAAH,EAChBI,MAAM,KAAK,MAAE,MAAAD,SAAA,SAAAA,EACZC,MAAM,KACPC,MAAMC,GAAUA,EAAMC,SAASR,QAAS,MAAAG,SAAA,SAAAA,EACvCE,MAAM,KAAK,GAEf,OAAOI,EAASP,GAAcjE,KAAK4D,sBAAsBK,GAAc,IAAM,I,CAGvE,oCAAAQ,CAAqCV,GAC3C,MAAMW,EAAoBC,aAAaC,QAAQ,OAAOb,KAEtD,OAAOS,EAASE,GAAqB1E,KAAK4D,sBAAsBc,GAAqB,I,CAGvF,gBAAA/B,CAAiBoB,EAAiBC,G,MAChC,GAAIhE,KAAKyC,WAAaoC,UAAW,CAC/B,OAAO,K,CAGT,GAAI7E,KAAKC,MAAQY,EAAaS,YAActB,KAAK8E,kBAAkBf,GAAU,CAC3E,OAAO,K,CAGT,IAAII,EAAAnE,KAAKyC,SAASpD,MAAyB,MAAA8E,SAAA,SAAAA,EAAEY,QAAS,CACpD,MAAMC,EAAyB,CAC7BhF,KAAK8D,4BAA4BC,EAASC,GAC1ChE,KAAKyE,qCAAqCV,IAG5C,IAAK,MAAMkB,KAAyBD,EAAwB,CAC1D,GAAIC,IAA0B,KAAM,CAClC,OAAOA,C,GAKb,GAAIjF,KAAKyC,SAASsB,KAAac,UAAW,CACxC,OAAO7E,KAAKyC,SAASsB,GAASgB,O,KACzB,CACL,OAAO,K,EAIX,iBAAMG,CAAYjF,GAChBD,KAAKC,IAAMA,EACX,IACE,GAAIA,IAAQ,OAAQ,CAClBD,KAAKyC,SAAWzC,KAAKuC,cAActC,GACnC,M,OAEID,KAAKkD,mB,CAEX,MAAOpB,GACPK,EAAOL,MAAM,kBAAmBA,GAChC9B,KAAKyC,SAAWzC,KAAKuC,cAActC,E,EAIvC,iBAAA6E,CAAkBf,GAChB,MAAMoB,EAAsB,CAAC,iBAC7B,OAAOA,EAAoBZ,SAASR,E,EAaxC,MAAAqB,EAAe,IAAIhD,S"}