import{c as e,N as t,a as n,n as a}from"./p-ce02e561.js";import{w as r}from"./p-f9052552.js";import{b as o,a as i}from"./p-e1568a59.js";var s=undefined&&undefined.__rest||function(e,t){var n={};for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0)n[a]=e[a];if(e!=null&&typeof Object.getOwnPropertySymbols==="function")for(var r=0,a=Object.getOwnPropertySymbols(e);r<a.length;r++){if(t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r]))n[a[r]]=e[a[r]]}return n};async function d(e,t,n){return c(e,t,{latitude:0,longitude:0},n,{radius:1e7})}async function c(a,i,d,c,f={}){const{radius:l}=f;let u;let w;try{const t=new Headers;t.set("Accept","*/*");if(a===e.LOCAL){t.set("Authorization","Basic "+r.btoa(`${"undefined"}:${"undefined"}`))}const n={coordinates:`${d.latitude},${d.longitude}`,radius:l};u=await fetch(`${i}/${c}/dealers?${o(n)}`,{method:"GET",headers:t})}catch(e){throw new t("Unable to fetch dealers",n.GENERAL)}if(u.status===400){throw new t("dealerService.getPPNDealers failed with invalid coordinates",n.GENERAL)}if(u.status===404){throw new t("dealerService.getPPNDealers failed with invalid country code and therefore responded with no results",n.NO_RESULTS)}if(u.status!==200){throw new t("dealerService.getPPNDealers failed with invalid response",n.GENERAL)}try{w=await u.json()}catch(e){throw new t("dealerService.getPPNDealers could not parse response into json format",n.GENERAL)}return w.map((e=>{var{dealer:t}=e,n=s(e,["dealer"]);return Object.assign({ppnDealer:t},n)}))}async function f(e,a,r,o,i){let s;try{const t=await c(e,a,o,i);s=t.find((e=>r===e.ppnDealer.id))}catch(e){throw new t("Unable to fetch a dealer",n.GENERAL)}if(s===undefined){throw new t(`Requested dealer ${r} could not be found`,n.NO_RESULTS)}return s}const l=new Map;async function u(e,a){const r=await w(a);const o=r.regions.flatMap((({cities:e})=>e.flatMap((({dealers:e})=>Object.values(e).reduce(((e,t)=>[...e,t]),[]))))).find((({ppnDealer:t})=>t.id===e));if(o===undefined){throw new t(`Requested dealer could not be found`,n.NO_RESULTS)}return o}async function w(e){const{env:r}=a.state;const o=new Headers;let s;if(l.has(e)){s=l.get(e)}else{const{BFF_ENDPOINT:t}=i(r);o.set("Accept","*/*");const n=await fetch(`${t}/dealers/region/${e}?env=${r}`,{method:"GET",headers:o});s=await n.json();l.set(e,s)}if(s===undefined){throw new t(`Requested dealer could not be found`,n.NO_RESULTS)}return s}export{f as a,d as b,w as c,c as d,u as g};
//# sourceMappingURL=p-e626d07a.js.map