{"version":3,"names":["DrawerContent","routingKey","breakpoint","locale","receivedContent","menu","navContentStore","state","h","Fragment","class","showBackButton","backButtonAnalyticsId","id","route","activeRoutingKey","registerTransitionNextLevelSingleDrawerAnimation","onAnimationEnds","animationManager","register","AnimationSequences","TRANSITION_NEXT_LEVEL_SINGLE_DRAWER","makeSequence","elementSelector","animation","className","onEnd","registerTransitionPreviousLevelSingleDrawerAnimation","TRANSITION_PREVIOUS_LEVEL_SINGLE_DRAWER","registerOpenSingleDrawerAnimation","onAnimationStarts","sequence","onStart","cleanUpAfterAnimation","element","style","left","backgroundColor","opacity","OPEN_SINGLE_DRAWER","registerCloseSingleDrawerAnimation","cleanUpBeforeAnimation","CLOSE_SINGLE_DRAWER","registerSingleDrawerAnimationSequences","dispatchDrawerStatusEvent","status","dispatchEvent","bubbles","composed","detail","onTransitionEnd","DrawerStatusValues","startOpening","finishOpening","startClosing","finishClosing","router.syncAnimation","navStateStore","usingKeyboard","setTimeout","focusOnElement","getHTMLElementFromRoot","focussedElementId","routerStore","animatingPointer","routingKeyPointer","routingKeyHistory","router.pop","singleDrawer","focusOn","sendDataLayerEvent","analyticsManager","setDrawerType","DisplayElementTypes","SingleDrawer","globalDataLayerService","pushDataLayerEvent","EventActions","DRAWER_LOAD","componentDisplay","displayElementType","calculateDisplayElementType","router.getCurrentRoute","ElementTypes","displayElementId","calculateDisplayElementId","displayElementName","autoFocusElement","getHTMLElement","querySelector","focussableElement","isString","FOCUSABLE_ELEMENTS_SELECTOR","firstFocus","singleDrawerCss","this","focusTimeout","Timeout","handleKeyDown","e","key","targetElement","target","focusableDrawerElements","getAllFocusableElements","el","length","getCurrentRoute","startsWith","RoutingKeys","DEALER_SEARCH","filter","nodeName","firstFocusableDrawerElement","lastFocusableDrawerElement","shiftKey","preventDefault","componentWillLoad","disconnectedCallback","cancel","reset","render","nextRoute","currentRoute","handleAnimationRouting","Host","tabIndex","isAnimatingForward"],"sources":["src/components/single-drawer/drawer-content.tsx","src/components/single-drawer/animations/sequences/register-next-level-single-drawer-animation.ts","src/components/single-drawer/animations/sequences/register-previous-level-single-drawer-animation.ts","src/components/single-drawer/animations/sequences/register-open-single-drawer-animation.ts","src/components/single-drawer/animations/sequences/register-close-single-drawer-animation.ts","src/components/single-drawer/animations/animations-register.ts","src/components/single-drawer/single-drawer.scss?tag=phn-single-drawer&encapsulation=scoped","src/components/single-drawer/single-drawer.tsx"],"sourcesContent":["import { Fragment, h, JSX } from '@stencil/core';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { showBackButton } from '../../services/routing-manager';\n\nexport default function DrawerContent({\n  routingKey,\n  breakpoint,\n  locale,\n  receivedContent\n}: {\n  routingKey: string;\n  breakpoint: number;\n  locale: string;\n  receivedContent: boolean;\n}): JSX.Element {\n  const { menu } = navContentStore.state;\n\n  return (\n    <Fragment>\n      <div class=\"bottom-gradient\"></div>\n      <div class=\"drawer-content\">\n        <phn-drawer-header\n          showBackButton={showBackButton(routingKey)}\n          backButtonAnalyticsId={menu.id}\n          breakpoint={breakpoint}\n          route={routingKey}\n          receivedContent={receivedContent}\n          locale={locale}\n        />\n        <phn-router\n          activeRoutingKey={routingKey}\n          breakpoint={breakpoint}\n          locale={locale}\n          receivedContent={receivedContent}\n        />\n      </div>\n    </Fragment>\n  );\n}\n","import animationManager, {\n  AnimationEndsCallbacks,\n  makeSequence\n} from '../../../../services/animations/animation-manager';\nimport { AnimationSequences } from '../../../../utility/constants';\n\nexport default function registerTransitionNextLevelSingleDrawerAnimation({\n  onAnimationEnds\n}: AnimationEndsCallbacks): void {\n  animationManager.register(\n    AnimationSequences.TRANSITION_NEXT_LEVEL_SINGLE_DRAWER,\n    makeSequence([\n      [\n        {\n          elementSelector: 'phn-single-drawer .drawer.animating',\n          animation: {\n            className: 'slide-in-from-right-fixed'\n          },\n          onEnd: onAnimationEnds\n        }\n      ]\n    ])\n  );\n}\n","import animationManager, {\n  AnimationEndsCallbacks,\n  makeSequence\n} from '../../../../services/animations/animation-manager';\nimport { AnimationSequences } from '../../../../utility/constants';\n\nexport default function registerTransitionPreviousLevelSingleDrawerAnimation({\n  onAnimationEnds\n}: AnimationEndsCallbacks): void {\n  animationManager.register(\n    AnimationSequences.TRANSITION_PREVIOUS_LEVEL_SINGLE_DRAWER,\n    makeSequence([\n      [\n        {\n          elementSelector: 'phn-single-drawer .drawer.animating',\n          animation: {\n            className: 'slide-out-to-right-fixed'\n          },\n          onEnd: onAnimationEnds\n        }\n      ]\n    ])\n  );\n}\n","import animationManager, {\n  AnimationStatusCallbacks,\n  makeSequence,\n  SequenceStep\n} from '../../../../services/animations/animation-manager';\nimport { AnimationSequences } from '../../../../utility/constants';\n\nexport default function registerOpenSingleDrawerAnimation({\n  onAnimationStarts,\n  onAnimationEnds\n}: Required<AnimationStatusCallbacks>): void {\n  const sequence: SequenceStep[] = [\n    [\n      {\n        onStart: onAnimationStarts,\n        elementSelector: 'phn-single-drawer',\n        animation: {\n          className: 'slide-in-from-left',\n          cleanUpAfterAnimation: (element) => {\n            element.style.left = '0px';\n          }\n        }\n      },\n      {\n        elementSelector: 'phn-backdrop',\n        animation: {\n          className: 'fade-in-animation',\n          cleanUpAfterAnimation: (element) => {\n            element.style.backgroundColor = 'rgba(0, 0, 0, 0.6)';\n            element.style.opacity = '1';\n          }\n        },\n        onEnd: onAnimationEnds\n      }\n    ]\n  ];\n\n  animationManager.register(AnimationSequences.OPEN_SINGLE_DRAWER, makeSequence(sequence));\n}\n","import animationManager, {\n  AnimationStatusCallbacks,\n  makeSequence,\n  SequenceStep\n} from '../../../../services/animations/animation-manager';\nimport { AnimationSequences } from '../../../../utility/constants';\n\nexport default function registerCloseSingleDrawerAnimation({\n  onAnimationStarts,\n  onAnimationEnds\n}: Required<AnimationStatusCallbacks>): void {\n  const sequence: SequenceStep[] = [\n    [\n      {\n        onStart: onAnimationStarts,\n        elementSelector: 'phn-single-drawer',\n        animation: {\n          className: 'slide-out-to-left',\n          cleanUpBeforeAnimation: (element) => {\n            element.style.left = '';\n          },\n          cleanUpAfterAnimation: (element) => {\n            element.style.left = '-1000px';\n          }\n        }\n      },\n      {\n        elementSelector: 'phn-backdrop',\n        animation: {\n          className: 'fade-out-animation',\n          cleanUpBeforeAnimation: (element) => {\n            element.style.backgroundColor = '';\n            element.style.opacity = '';\n          }\n        },\n        onEnd: onAnimationEnds\n      }\n    ]\n  ];\n\n  animationManager.register(AnimationSequences.CLOSE_SINGLE_DRAWER, makeSequence(sequence));\n}\n","import { DrawerStatusTypes, DrawerStatusValues } from '../../../utility/constants/app';\nimport {\n  dispatchEvent,\n  focusOnElement,\n  getHTMLElement,\n  getHTMLElementFromRoot,\n  isString\n} from '../../../utility/helper';\nimport registerTransitionNextLevelSingleDrawerAnimation from './sequences/register-next-level-single-drawer-animation';\nimport registerTransitionPreviousLevelSingleDrawerAnimation from './sequences/register-previous-level-single-drawer-animation';\nimport registerOpenSingleDrawerAnimation from './sequences/register-open-single-drawer-animation';\nimport registerCloseSingleDrawerAnimation from './sequences/register-close-single-drawer-animation';\nimport * as router from '../../../services/routing-manager';\nimport analyticsManager from '../../../services/analytics/analytics-manager';\nimport {\n  DisplayElementTypes,\n  ElementTypes,\n  EventActions,\n  FOCUSABLE_ELEMENTS_SELECTOR\n} from '../../../utility/constants';\nimport globalDataLayerService from '../../../services/analytics/global-data-layer-service';\nimport { routerStore } from '../../../state/router-store';\nimport { navStateStore } from '../../../state/nav-state-store';\n\nexport default function registerSingleDrawerAnimationSequences(): void {\n  function dispatchDrawerStatusEvent(status: DrawerStatusTypes) {\n    dispatchEvent('phn-single-drawer', 'phnDrawerStatus', {\n      bubbles: true,\n      composed: true,\n      detail: { status }\n    });\n  }\n\n  registerTransitionNextLevelSingleDrawerAnimation({\n    onAnimationEnds: () => onTransitionEnd()\n  });\n  registerTransitionPreviousLevelSingleDrawerAnimation({ onAnimationEnds: () => onTransitionEnd() });\n  registerOpenSingleDrawerAnimation({\n    onAnimationStarts: () => {\n      dispatchDrawerStatusEvent(DrawerStatusValues.startOpening);\n    },\n    onAnimationEnds: () => {\n      onTransitionEnd();\n      dispatchDrawerStatusEvent(DrawerStatusValues.finishOpening);\n    }\n  });\n  registerCloseSingleDrawerAnimation({\n    onAnimationStarts: () => {\n      dispatchDrawerStatusEvent(DrawerStatusValues.startClosing);\n    },\n    onAnimationEnds: () => {\n      dispatchDrawerStatusEvent(DrawerStatusValues.finishClosing);\n      router.syncAnimation();\n\n      if (navStateStore.state.usingKeyboard) {\n        setTimeout(() => {\n          focusOnElement(getHTMLElementFromRoot('phn-burger-button phn-p-button-pure'));\n        }, 100);\n      }\n    }\n  });\n}\n\nfunction onTransitionEnd() {\n  const focussedElementId =\n    routerStore.state.animatingPointer > routerStore.state.routingKeyPointer\n      ? routerStore.state.routingKeyHistory[routerStore.state.animatingPointer]\n      : '';\n\n  router.syncAnimation();\n  router.pop();\n\n  setTimeout(() => {\n    const singleDrawer = getHTMLElementFromRoot('.drawer');\n    focusOn(singleDrawer, focussedElementId);\n  });\n\n  sendDataLayerEvent();\n}\n\nfunction sendDataLayerEvent() {\n  analyticsManager.setDrawerType(DisplayElementTypes.SingleDrawer);\n\n  globalDataLayerService.pushDataLayerEvent(EventActions.DRAWER_LOAD, {\n    componentDisplay: {\n      displayElementType: analyticsManager.calculateDisplayElementType(\n        router.getCurrentRoute(),\n        ElementTypes.singleDrawer\n      ),\n      displayElementId: analyticsManager.calculateDisplayElementId(),\n      displayElementName: 'Single Drawer'\n    }\n  });\n}\n\nfunction focusOn(element: HTMLElement | null, focussedElementId: string): void {\n  if (!element) return;\n\n  const autoFocusElement = getHTMLElement(element.querySelector('.autofocus'));\n  if (autoFocusElement !== null) {\n    focusOnElement(autoFocusElement);\n    return;\n  }\n\n  if (navStateStore.state.usingKeyboard) {\n    let focussableElement: HTMLElement | null = null;\n\n    if (isString(focussedElementId)) {\n      focussableElement = getHTMLElement(element.querySelector(`.active [data-id=\"${focussedElementId}\"]`));\n    }\n\n    if (focussableElement === null) {\n      focussableElement = getHTMLElement(element.querySelector(`.active ${FOCUSABLE_ELEMENTS_SELECTOR}`));\n    }\n\n    if (focussableElement !== null) {\n      focusOnElement(focussableElement);\n    }\n  } else {\n    const firstFocus = getHTMLElement(element.querySelector('.first-focus'));\n\n    if (firstFocus !== null) {\n      focusOnElement(firstFocus);\n    }\n  }\n}\n","@import '../../scss';\n\n:host {\n  display: block;\n  position: fixed;\n  top: 0;\n  left: -1000px;\n  height: 100vh;\n  width: 100vw;\n  z-index: $phn-z-index-mega-flyout + 1;\n\n  &.slide-in-from-left {\n    position: absolute;\n    animation: slide-in-from-left-absolute 600ms;\n  }\n\n  &.slide-out-to-left {\n    position: absolute;\n    animation: slide-in-from-left-absolute 600ms reverse;\n  }\n\n  .drawer {\n    z-index: $phn-z-index-mega-flyout + 1;\n    background-color: $pds-theme-light-background-base;\n    position: absolute;\n    left: 0;\n\n    .drawer-content {\n      overflow-y: auto;\n      height: 100vh;\n      width: 100vw;\n      box-sizing: border-box;\n      padding: 0 p-px-to-rem(27px) p-px-to-rem(100px) p-px-to-rem(27px);\n\n      @include pds-media-query-min('xs') {\n        padding: 0 p-px-to-rem(35px) p-px-to-rem(100px) p-px-to-rem(35px);\n      }\n\n      @include pds-media-query-min('s') {\n        padding: 0 p-px-to-rem(54px) p-px-to-rem(100px) p-px-to-rem(54px);\n      }\n\n      @include pds-media-query-min('m') {\n        padding: 0 p-px-to-rem(36px) p-px-to-rem(100px) p-px-to-rem(36px);\n      }\n\n      phn-drawer-header {\n        box-sizing: border-box;\n        margin-top: p-px-to-rem(18px);\n        margin-bottom: p-px-to-rem(31px);\n\n        @include pds-media-query-min('xs') {\n          margin-top: p-px-to-rem(32px);\n          margin-bottom: p-px-to-rem(37px);\n        }\n\n        @include pds-media-query-min('s') {\n          margin-bottom: p-px-to-rem(20px);\n        }\n      }\n\n      phn-router {\n        padding-bottom: 4rem;\n      }\n    }\n\n    .bottom-gradient{\n      @include drawer-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255));\n      margin-left: 0;\n      z-index: 1;\n    }\n  }\n\n}\n","import { Component, Element, h, Host, Listen, Prop } from '@stencil/core';\nimport { RoutingKeys } from '../../entities/routing-key';\nimport { focusOnElement, getHTMLElement, isString } from '../../utility/helper';\nimport { Timeout } from '../../utility/timeout';\nimport DrawerContent from './drawer-content';\nimport { getAllFocusableElements } from '../double-drawer/helper';\nimport { getCurrentRoute, isAnimatingForward } from '../../services/routing-manager';\nimport { routerStore } from '../../state/router-store';\nimport { handleAnimationRouting } from './animations/animations-controller';\nimport registerSingleDrawerAnimationSequences from './animations/animations-register';\n\n@Component({\n  tag: 'phn-single-drawer',\n  scoped: true,\n  styleUrl: 'single-drawer.scss'\n})\nexport class SingleDrawer {\n  @Prop() breakpoint!: number;\n  @Prop() locale!: string;\n  @Prop() usingKeyboard = false;\n  @Prop() receivedContent = false;\n\n  @Element() el!: HTMLPhnSingleDrawerElement;\n\n  private focusTimeout = new Timeout(0);\n\n  @Listen('keydown', { passive: false })\n  handleKeyDown(e: KeyboardEvent): void {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    const targetElement = getHTMLElement(e.target);\n    if (targetElement === null) {\n      return;\n    }\n\n    let focusableDrawerElements = getAllFocusableElements(this.el.querySelector('.active'));\n    if (focusableDrawerElements.length === 0) {\n      return;\n    }\n\n    if (getCurrentRoute().startsWith(RoutingKeys.DEALER_SEARCH)) {\n      focusableDrawerElements = focusableDrawerElements.filter(\n        (element) => element.nodeName !== 'BUTTON' && element.nodeName !== 'A'\n      );\n    }\n\n    const firstFocusableDrawerElement = focusableDrawerElements[0];\n    const lastFocusableDrawerElement = focusableDrawerElements[focusableDrawerElements.length - 1];\n\n    if (targetElement === firstFocusableDrawerElement && e.shiftKey) {\n      e.preventDefault();\n\n      if (lastFocusableDrawerElement !== null) {\n        focusOnElement(lastFocusableDrawerElement);\n      }\n\n      return;\n    }\n\n    if (targetElement === lastFocusableDrawerElement && !e.shiftKey) {\n      e.preventDefault();\n\n      if (firstFocusableDrawerElement !== null) {\n        focusOnElement(firstFocusableDrawerElement);\n      }\n\n      return;\n    }\n  }\n\n  componentWillLoad(): void {\n    registerSingleDrawerAnimationSequences();\n  }\n\n  disconnectedCallback(): void {\n    this.focusTimeout.cancel();\n    routerStore.reset();\n  }\n\n  render(): HTMLPhnSingleDrawerElement {\n    const { nextRoute, currentRoute } = handleAnimationRouting();\n\n    return (\n      <Host>\n        {isString(currentRoute) ? (\n          <div class=\"drawer active\" key={currentRoute}>\n            <span class=\"first-focus\" tabIndex={-1} aria-hidden=\"true\" />\n            <DrawerContent\n              routingKey={currentRoute}\n              breakpoint={this.breakpoint}\n              locale={this.locale}\n              receivedContent={this.receivedContent}\n            />\n          </div>\n        ) : null}\n\n        {isString(nextRoute) ? (\n          <div class={`drawer animating`} style={isAnimatingForward() ? { left: '100%' } : {}} key={nextRoute}>\n            <DrawerContent\n              routingKey={nextRoute}\n              breakpoint={this.breakpoint}\n              locale={this.locale}\n              receivedContent={this.receivedContent}\n            />\n          </div>\n        ) : null}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}