import{B as n,q as t,t as e}from"./p-e1568a59.js";const i={};const o={};const r=1e3;function s(){n().addEventListener("transitionend",d);n().addEventListener("animationend",d)}function c(n,t){o[n]=t}function a(){Object.keys(o).forEach((n=>delete o[n]))}async function f(n){const t=o[n];if(t===undefined){return new Promise(((t,e)=>e(new Error(`Sequence ${n} has not been registered`))))}if(!t.running){t.promise=new Promise(((n,e)=>{t.resolve=()=>{t.running=false;n()};t.reject=n=>{t.running=false;e(n)};t.running=true;u(t)}))}return t.promise}async function u(n){var t;if(n.currentStepIndex>=n.steps.length){l(n);return}const e=n.steps[n.currentStepIndex];const i=[];for(const n of e){i.push(m(n))}try{await Promise.all(i)}catch(e){(t=n.reject)===null||t===void 0?void 0:t.call(n,e);return}n.currentStepIndex+=1;setTimeout((()=>u(n)),0)}function l(n){var t;n.currentStepIndex=0;(t=n.resolve)===null||t===void 0?void 0:t.call(n,null);n.promise=undefined}function d(n){const t=e(n.target);if(t===null){throw new Error(`${n.type} event target is null`)}const i=t.dataset.phnAmId;if(i!==undefined&&i!==null){p(i,t)}}async function m({onStart:e,onEnd:i,animation:o,elementSelector:r}){if(e){const n=e();if(t(n)){await n}}const s=Array.from(n().querySelectorAll(r));const c=[];for(const n of s){const t=w(h)(n,o);c.push(t)}await Promise.all(c);if(i){const n=i();if(t(n)){await n}}}function w(n){return async function(e,i){const{cleanUpBeforeAnimation:o,cleanUpAfterAnimation:r}=i;const s=n(e,i);if(typeof o==="function"){const n=o(e);if(t(n)){await n}}await s;if(typeof r==="function"){const n=r(e);if(t(n)){await n}}if(r!==false){e.classList.remove(i.className)}}}const h=(n,t)=>{const e=Math.floor(Math.random()*1e7);n.classList.add(t.className);n.dataset.phnAmId=e.toString();let o;let s;let c;const a=new Promise(((i,a)=>{o=i;s=a;c=setTimeout((()=>{console.warn(`Animation with className ${t.className} didn't finish after ${r}ms. Forcefully finishing animation and continuing with the rest of the sequence.`);p(String(e),n)}),r)}));i[e]={animation:t,resolve:o,reject:s,promise:a,timeout:c};return a};function p(n,t){const{resolve:e,timeout:o}=i[n];clearTimeout(o);delete i[n];delete t.dataset.phnAmId;e()}function y(n){const t=o[n];if(t===undefined){throw new Error(`Sequence ${n} has not been registered`)}return t.promise!==undefined}function g(n,t){return{steps:n.map((n=>n.map((n=>Object.assign(Object.assign({},t),n))))),currentStepIndex:0,running:false}}const v={initialize:s,play:f,isPlaying:y,register:c,reset:a};export{v as a,g as m};
//# sourceMappingURL=p-d0d7d34f.js.map