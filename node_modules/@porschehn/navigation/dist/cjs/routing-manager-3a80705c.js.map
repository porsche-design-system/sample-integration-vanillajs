{"file":"routing-manager-3a80705c.js","mappings":"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","names":["animationManager","AnimationSequences","routerStore","RoutingKeys","findTopLevelRoutingKey","dealerSearchResultsStore","isDesktop","windowService","dispatchEvent","constructRoutingKey","RoutingKeyPointers"],"sources":["src/components/single-drawer/animations/animations-controller.ts","src/services/routing-manager.ts"],"sourcesContent":["import animationManager from '../../../services/animations/animation-manager';\nimport { AnimationSequences, AnimationSequencesType } from '../../../utility/constants';\nimport {\n  getAnimatedRoute,\n  getCurrentRoute,\n  isAnimatingBackward,\n  isAnimatingForward,\n  isClosing,\n  isOpening\n} from '../../../services/routing-manager';\n\nexport const handleAnimationRouting = (): AnimationRouting => {\n  const actions: Record<Operations, () => AnimationRouting> = {\n    OPENING: openingAction,\n    CLOSING: closingAction,\n    FORWARD: forwardAction,\n    BACKWARDS: backwardAction,\n    UNCHANGED: unchangedAction\n  };\n\n  const conditionToExecute = getSingleDrawerAction();\n\n  return actions[conditionToExecute]();\n};\n\ntype Operations = 'OPENING' | 'CLOSING' | 'FORWARD' | 'BACKWARDS' | 'UNCHANGED';\nfunction getSingleDrawerAction(): Operations {\n  if (isOpening()) {\n    return 'OPENING';\n  }\n  if (isClosing()) {\n    return 'CLOSING';\n  }\n  if (isAnimatingForward()) {\n    return 'FORWARD';\n  }\n  if (isAnimatingBackward()) {\n    return 'BACKWARDS';\n  }\n  return 'UNCHANGED';\n}\n\ntype AnimationRouting = { nextRoute: string; currentRoute: string };\n\nconst openingAction = (): AnimationRouting => {\n  animationManager.play(AnimationSequences.OPEN_SINGLE_DRAWER);\n\n  return {\n    nextRoute: '',\n    currentRoute: getCurrentRoute()\n  };\n};\n\nconst closingAction = (): AnimationRouting => {\n  animationManager.play(AnimationSequences.CLOSE_SINGLE_DRAWER).then(() => {\n    // TODO: Focus on burger button if using the keyboard\n  });\n\n  return {\n    nextRoute: getCurrentRoute() || '',\n    currentRoute: getAnimatedRoute() || ''\n  };\n};\n\nconst forwardAction = (): AnimationRouting => {\n  setTimeout(() => {\n    animationManager.play(AnimationSequences.TRANSITION_NEXT_LEVEL_SINGLE_DRAWER);\n  });\n\n  return {\n    nextRoute: getCurrentRoute() ?? '',\n    currentRoute: getAnimatedRoute() ?? ''\n  };\n};\n\nconst backwardAction = (): AnimationRouting => {\n  if (getCurrentRoute() !== '') {\n    setTimeout(() => {\n      animationManager.play(AnimationSequences.TRANSITION_PREVIOUS_LEVEL_SINGLE_DRAWER);\n    });\n  }\n\n  return {\n    nextRoute: getAnimatedRoute() ?? '',\n    currentRoute: getCurrentRoute() ?? ''\n  };\n};\n\nconst unchangedAction = (): AnimationRouting => {\n  return {\n    nextRoute: '',\n    currentRoute: getCurrentRoute()\n  };\n};\n\nexport const isPlayingSingleDrawerAnimation = (): boolean => {\n  try {\n    const singleDrawerAnimationSequences: AnimationSequencesType[] = [\n      AnimationSequences.OPEN_SINGLE_DRAWER,\n      AnimationSequences.CLOSE_SINGLE_DRAWER,\n      AnimationSequences.TRANSITION_NEXT_LEVEL_SINGLE_DRAWER,\n      AnimationSequences.TRANSITION_PREVIOUS_LEVEL_SINGLE_DRAWER\n    ];\n\n    return singleDrawerAnimationSequences.some((sequence) => {\n      try {\n        return animationManager.isPlaying(sequence);\n      } catch {\n        return false;\n      }\n    });\n  } catch (e) {\n    return false;\n  }\n};\n","import { routerStore } from '../state/router-store';\nimport { constructRoutingKey, findTopLevelRoutingKey, RoutingKeyPointers, RoutingKeys } from '../entities/routing-key';\nimport { dispatchEvent, isDesktop } from '../utility/helper';\nimport windowService from './window-service';\nimport { dealerSearchResultsStore } from '../state/dealer-search-results-store';\nimport { isPlayingSingleDrawerAnimation } from '../components/single-drawer/animations/animations-controller';\n\nexport const getCurrentRoute = (): string => {\n  const { routingKeyHistory, routingKeyPointer } = routerStore.state;\n  return routingKeyHistory[routingKeyPointer] || '';\n};\n\nexport const getAnimatedRoute = (): string => {\n  const { routingKeyHistory, animatingPointer } = routerStore.state;\n  return routingKeyHistory[animatingPointer] || '';\n};\n\nexport const goTo = (...routes: string[]): void => {\n  const newHistory = [RoutingKeys.MAIN_MENU, ...routes];\n  routerStore.state.routingKeyPointer = routes.length;\n  routerStore.state.routingKeyHistory = newHistory;\n};\n\nexport const back = (): void => {\n  if (!isPlayingSingleDrawerAnimation()) {\n    if (findTopLevelRoutingKey(getCurrentRoute()) === RoutingKeys.DEALER_SEARCH) {\n      dealerSearchResultsStore.state.savedDealerCookie = null;\n    }\n    routerStore.state.routingKeyPointer = routerStore.state.routingKeyPointer - 1;\n  }\n};\n\nexport const pop = (): void => {\n  if (isNavigatingBackwards()) routerStore.state.routingKeyHistory.pop();\n};\n\nexport const addRoute = (newRoute: string[]): void => {\n  if (isDesktop(windowService.getBreakpoint())) {\n    dispatchEvent('phn-router', 'mobileMenuItemClick', {\n      bubbles: true,\n      cancelable: false,\n      detail: [constructRoutingKey(getCurrentRoute(), ...newRoute)]\n    });\n  } else {\n    const newHistory = [...routerStore.state.routingKeyHistory, constructRoutingKey(getCurrentRoute(), ...newRoute)];\n    routerStore.state.routingKeyPointer = newHistory.length - 1;\n    routerStore.state.routingKeyHistory = newHistory;\n  }\n};\n\nexport const reset = (): void => {\n  routerStore.state.routingKeyPointer = -1;\n};\n\nexport const isNavigatingBackwards = (): boolean => {\n  return routerStore.state.routingKeyPointer < routerStore.state.routingKeyHistory.length - 1;\n};\n\nexport const isAnimating = (): boolean => {\n  const { routingKeyPointer, animatingPointer } = routerStore.state;\n  return routingKeyPointer !== animatingPointer;\n};\n\n//____________ANIMATIONS______________//\n\nexport const isAnimatingForward = (): boolean => {\n  return routerStore.state.routingKeyPointer > routerStore.state.animatingPointer;\n};\n\nexport const isAnimatingBackward = (): boolean => {\n  return routerStore.state.routingKeyPointer < routerStore.state.animatingPointer;\n};\n\nexport const isOpening = (): boolean => {\n  return (\n    routerStore.state.animatingPointer === RoutingKeyPointers.LEVEL_ZERO && routerStore.state.routingKeyPointer >= 0\n  );\n};\n\nexport const isOpened = (): boolean => {\n  return !isClosed();\n};\n\nexport const isClosed = (): boolean => {\n  return (\n    routerStore.state.routingKeyPointer === RoutingKeyPointers.LEVEL_ZERO &&\n    routerStore.state.animatingPointer === RoutingKeyPointers.LEVEL_ZERO\n  );\n};\nexport const isClosing = (): boolean => {\n  return routerStore.state.routingKeyPointer === -1 && routerStore.state.animatingPointer >= 0;\n};\n\nexport const syncAnimation = () => {\n  routerStore.state.animatingPointer = routerStore.state.routingKeyPointer;\n};\n\nexport const showBackButton = (section: string): boolean => {\n  const sectionKey = routerStore.state.routingKeyHistory.indexOf(section);\n\n  return sectionKey >= RoutingKeyPointers.LEVEL_TWO;\n};\n"],"version":3}