'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-947214e4.js');
const animationManager = require('./animation-manager-cd2e5425.js');
const animations = require('./animations-dcc5b59a.js');
const naviError = require('./navi-error-3887a972.js');
require('./window-service-c9a19f26.js');

const registerContextualDrawerOpening = ({ onStartOpening, onFinishOpening }) => {
  animationManager.animationManager.register('openContextualDrawer', animationManager.makeSequence([
    [
      {
        onStart: onStartOpening,
        elementSelector: 'contextual-drawer',
        animation: {
          name: 'slideInFromLeft',
          to: 0,
          duration: animations.AnimationDurations.drawerOpen,
          from: -1000
        }
      },
      {
        onEnd: onFinishOpening,
        elementSelector: '.contextual-drawer-backdrop',
        animation: {
          name: 'fadeInBackdrop',
          duration: animations.AnimationDurations.backdrop,
          to: 0.6
        }
      }
    ]
  ], { timingFunction: 'cubicBezierStart' }));
};
const registerContextualDrawerClosing = ({ onStartClosing, onEndClosing }) => {
  animationManager.animationManager.register('closeContextualDrawer', animationManager.makeSequence([
    [
      {
        onStart: onStartClosing,
        elementSelector: 'contextual-drawer',
        animation: {
          name: 'slideOutToLeft',
          to: -1000,
          duration: animations.AnimationDurations.drawer
        }
      },
      {
        elementSelector: '.contextual-drawer-backdrop',
        animation: {
          name: 'fadeOutBackdrop',
          to: 0.6,
          duration: animations.AnimationDurations.backdrop
        },
        onEnd: onEndClosing
      }
    ]
  ], { timingFunction: 'cubicBezierEnd' }));
};

const contextualDrawerCss = "@-webkit-keyframes slideDown{from{max-height:0}to{max-height:1000px}}@keyframes slideDown{from{max-height:0}to{max-height:1000px}}@-webkit-keyframes slideUp{from{max-height:1000px}to{max-height:0}}@keyframes slideUp{from{max-height:1000px}to{max-height:0}}@-webkit-keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@-webkit-keyframes slideRight{from{max-width:1000px}to{max-width:0}}@keyframes slideRight{from{max-width:1000px}to{max-width:0}}@-webkit-keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@-webkit-keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@-webkit-keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@-webkit-keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@-webkit-keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@-webkit-keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes fadeOut{0%{opacity:1}100%{opacity:0}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}.phn-flex-col.sc-contextual-drawer{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.phn-flex-row.sc-contextual-drawer{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}.phn-align-center.sc-contextual-drawer{-ms-flex-align:center;align-items:center}.phn-justify-around.sc-contextual-drawer{-ms-flex-pack:distribute;justify-content:space-around}.phn-justify-between.sc-contextual-drawer{-ms-flex-pack:justify;justify-content:space-between}.phn-flex-wrap.sc-contextual-drawer{-ms-flex-wrap:wrap;flex-wrap:wrap}.sc-contextual-drawer-h{float:right;right:-150%;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;-webkit-box-sizing:border-box;box-sizing:border-box;position:fixed;top:0;height:100vh;z-index:301}@media (min-width: 0px) and (max-width: 759px){.sc-contextual-drawer-h{width:100%}}.sc-contextual-drawer-h .contextual-drawer-backdrop.sc-contextual-drawer{position:fixed;z-index:300;top:0;left:0;right:0;bottom:0;background-color:rgba(0, 0, 0, 0.8);cursor:pointer;backdrop-filter:blur(32px);-webkit-backdrop-filter:blur(32px)}.sc-contextual-drawer-h .close-button.sc-contextual-drawer{position:absolute;right:-4.75rem;z-index:301;width:3rem;height:3rem;margin-top:1.75rem;cursor:pointer}@media (min-width: 0px) and (max-width: 759px){.sc-contextual-drawer-h .close-button.sc-contextual-drawer{display:none}}.sc-contextual-drawer-h .contextual-drawer.sc-contextual-drawer{background-color:#EEEFF2;position:relative;overflow-y:auto;overflow-x:hidden;width:20.625rem;border-radius:0 4px 4px 0;height:100vh;z-index:301}@media (min-width: 0px) and (max-width: 759px){.sc-contextual-drawer-h .contextual-drawer.sc-contextual-drawer{width:100%;border-radius:0;background-color:#FFFFFF}}@media (min-width: 1000px){.sc-contextual-drawer-h .contextual-drawer.sc-contextual-drawer{width:21rem}}@media (min-width: 1300px){.sc-contextual-drawer-h .contextual-drawer.sc-contextual-drawer{width:25.3125rem}}@media (min-width: 1920px){.sc-contextual-drawer-h .contextual-drawer.sc-contextual-drawer{width:37.875rem}}";

const ContextualDrawer = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.openBackdrop = index.createEvent(this, "openBackdrop", 7);
    this.phnContextualDrawerStatus = index.createEvent(this, "phnContextualDrawerStatus", 7);
    this.isDrawerOpened = false;
  }
  closeContextualDrawer() {
    this.closeDrawer();
  }
  openContextualDrawer() {
    animationManager.animationManager.play('openContextualDrawer');
  }
  closeDrawer() {
    animationManager.animationManager.play('closeContextualDrawer');
  }
  componentDidLoad() {
    registerContextualDrawerOpening({
      onStartOpening: () => {
        this.phnContextualDrawerStatus.emit({ status: naviError.DrawerStatusValues.startOpening });
        this.isDrawerOpened = true;
        const contextualDrawerHeader = document.getElementById('contextual-drawer-header');
        if (contextualDrawerHeader) {
          contextualDrawerHeader.style.display = '';
        }
      },
      onFinishOpening: () => {
        this.phnContextualDrawerStatus.emit({ status: naviError.DrawerStatusValues.finishOpening });
      }
    });
    registerContextualDrawerClosing({
      onStartClosing: () => {
        this.phnContextualDrawerStatus.emit({ status: naviError.DrawerStatusValues.startClosing });
      },
      onEndClosing: () => {
        this.phnContextualDrawerStatus.emit({ status: naviError.DrawerStatusValues.finishClosing });
        this.isDrawerOpened = false;
      }
    });
  }
  render() {
    return (index.h(index.Host, { style: { display: this.isDrawerOpened ? '' : 'none' } }, index.h("phn-p-button", { variant: "secondary", className: "close-button", theme: "dark", "hide-label": "true", icon: 'close', "aria-label": "close modal dialog", onClick: () => {
        this.closeDrawer();
      } }), index.h("div", { class: "contextual-drawer", id: "contextual-drawer" }, index.h("div", { slot: "contextual_drawer_header" }, index.h("slot", { name: "contextual_drawer_header" }))), index.h("div", { "aria-hidden": "true", class: "contextual-drawer-backdrop", onClick: () => {
        this.closeDrawer();
      } })));
  }
};
ContextualDrawer.style = contextualDrawerCss;

exports.contextual_drawer = ContextualDrawer;

//# sourceMappingURL=contextual-drawer.cjs.entry.js.map