'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-98b6cdb7.js');
const navContentStore = require('./nav-content-store-7e491673.js');
const globalDataLayerService = require('./global-data-layer-service-6bfe4ea6.js');
const contentService = require('./content-service-f56f2bbf.js');
const dealerService = require('./dealer-service-f4e71e53.js');
const featureToggles = require('./feature-toggles-56b31f71.js');
const helper = require('./helper-2e938230.js');
const finderStateStore = require('./finder-state-store-b0f9d1f9.js');
const dealerSearchResultsStore = require('./dealer-search-results-store-82b04c04.js');
const shopHelper = require('./shop-helper-be8a945d.js');
const routerStore = require('./router-store-fdfbb3ef.js');
const timeout = require('./timeout-2252a895.js');
const dealerSearchHelper = require('./dealer-search-helper-630b685f.js');
const abTestingConstructorService = require('./ab-testing-constructor-service-0271deee.js');
const routingKey = require('./routing-key-7ce95adb.js');
const animationManager = require('./animation-manager-697ad19b.js');
const animations = require('./animations-34f77238.js');
const ready = require('./ready-1cd44fab.js');
const doubleDrawerAnimationSequences = require('./double-drawer-animation-sequences-48f2e029.js');
const routingManager = require('./routing-manager-3a80705c.js');

// Unique ID creation requires a high quality random # generator. In the browser we therefore
// require the crypto API and do not support built-in fallback to lower quality random number
// generators (like Math.random()).
let getRandomValues;
const rnds8 = new Uint8Array(16);
function rng() {
  // lazy load so that environments that need to polyfill have a chance to do so
  if (!getRandomValues) {
    // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation.
    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);

    if (!getRandomValues) {
      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
    }
  }

  return getRandomValues(rnds8);
}

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */

const byteToHex = [];

for (let i = 0; i < 256; ++i) {
  byteToHex.push((i + 0x100).toString(16).slice(1));
}

function unsafeStringify(arr, offset = 0) {
  // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];
}

const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);
const native = {
  randomUUID
};

function v4(options, buf, offset) {
  if (native.randomUUID && !buf && !options) {
    return native.randomUUID();
  }

  options = options || {};
  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    offset = offset || 0;

    for (let i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }

    return buf;
  }

  return unsafeStringify(rnds);
}

async function getUserInformation(accessToken, locale) {
  const config = helper.getConfig(navContentStore.navStateStore.state.env);
  const init = {
    method: 'GET',
    headers: {
      'X-Trace-Id': v4(),
      Authorization: `${accessToken}`,
      Accept: 'application/json',
      Env: navContentStore.navStateStore.state.env
    }
  };
  let response;
  try {
    response = await fetch(helper.getString(`${config === null || config === void 0 ? void 0 : config.BFF_ENDPOINT}/user-information?locale=${locale}`), init);
  }
  catch (err) {
    const errorMessage = `Get User information request failed in Frontend with error: ${JSON.stringify(err.message)}`;
    throw new navContentStore.NaviError(errorMessage, navContentStore.NaviErrorTypes.GENERAL);
  }
  if (response.status === 401) {
    throw new navContentStore.NaviError('AccessToken has expired', navContentStore.NaviErrorTypes.UNAUTHORIZED);
  }
  if (!response.ok) {
    const errorMessage = `Get User information request failed in Frontend with error: ${response.status} ${response.statusText}`;
    throw new navContentStore.NaviError(errorMessage, navContentStore.NaviErrorTypes.GENERAL);
  }
  return await response.json();
}

function getUserNameFromUserData(userData) {
  let status = '';
  const firstName = helper.getString(userData.firstName);
  const lastName = helper.getString(userData.lastName);
  if (helper.isString(firstName)) {
    status = firstName;
    if (helper.isString(lastName)) {
      status += ` ${lastName}`;
    }
  }
  else {
    if (helper.isString(lastName)) {
      status = lastName;
    }
  }
  return status;
}
async function initializeUserData(accessToken, locale) {
  let loggedInState = helper.LOGGED_OUT_USER_STATUS;
  let userId;
  try {
    const bffData = await getUserInformation(accessToken, locale);
    if (bffData === undefined || bffData === null) {
      throw new navContentStore.NaviError(`Invalid user data object extracted from user profile response`, navContentStore.NaviErrorTypes.NO_RESULTS);
    }
    finderStateStore.finderStateStore.state.savedSearchesCount = bffData.savedSearches;
    finderStateStore.finderStateStore.state.savedVehiclesCount = bffData.savedVehicles;
    navContentStore.navStateStore.state.unreadMessagesCount = bffData.unreadMessages;
    const userData = bffData.userData;
    loggedInState = getUserNameFromUserData(userData) || helper.LOGGED_IN_USER_NO_NAME_STATUS;
    userId = bffData.userData.userId || '';
  }
  catch (err) {
    if (!(err instanceof navContentStore.NaviError) || err.type !== navContentStore.NaviErrorTypes.UNAUTHORIZED) {
      loggedInState = helper.LOGGED_IN_USER_NO_NAME_STATUS;
    }
    navContentStore.navStateStore.state.unreadMessagesCount = helper.DEFAULT_UNREAD_MESSAGES_COUNT;
    navContentStore.navStateStore.state.loggedInState = loggedInState;
    throw err;
  }
  navContentStore.navStateStore.state.loggedInState = loggedInState;
  globalDataLayerService.globalDataLayerService.setUser(userId, helper.IsLoggedIn(loggedInState));
}
function initAuthIframe(config) {
  const queryString = helper.getQueryString({
    domain: config.IDENTITY_PROVIDER_URL,
    clientId: config.IDENTITY_CLIENT_ID,
    redirect_uri: config.LOGIN_REDIRECT_URL,
    audience: config.IDENTITY_AUDIENCE,
    scope: config.IDENTITY_USER_SCOPES
  });
  featureToggles.windowService.removeElement(helper.IFRAME_ID);
  featureToggles.windowService.createIframe(helper.IFRAME_ID, `${config.LOGIN_REDIRECT_URL}?${queryString}`);
}

const headerCss = "@-webkit-keyframes transition-forward-in-animation{from{left:150%}to{left:0%}}@keyframes transition-forward-in-animation{from{left:150%}to{left:0%}}@-webkit-keyframes transition-backward-in-animation{from{left:-150%}to{left:0%}}@keyframes transition-backward-in-animation{from{left:-150%}to{left:0%}}@-webkit-keyframes single-drawer-transition-forward-in-animation{from{left:100%}to{left:0%}}@keyframes single-drawer-transition-forward-in-animation{from{left:100%}to{left:0%}}@-webkit-keyframes fade-in-animation{from{opacity:0;background-color:rgba(0, 0, 0, 0)}to{opacity:1;background-color:rgba(0, 0, 0, 0.6)}}@keyframes fade-in-animation{from{opacity:0;background-color:rgba(0, 0, 0, 0)}to{opacity:1;background-color:rgba(0, 0, 0, 0.6)}}@-webkit-keyframes slide-in-from-left-absolute{from{left:-1000px}to{left:0px}}@keyframes slide-in-from-left-absolute{from{left:-1000px}to{left:0px}}@-webkit-keyframes slideDown{from{max-height:0}to{max-height:1000px}}@keyframes slideDown{from{max-height:0}to{max-height:1000px}}@-webkit-keyframes slideUp{from{max-height:1000px}to{max-height:0}}@keyframes slideUp{from{max-height:1000px}to{max-height:0}}@-webkit-keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@-webkit-keyframes slideRight{from{max-width:1000px}to{max-width:0}}@keyframes slideRight{from{max-width:1000px}to{max-width:0}}@-webkit-keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@-webkit-keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@-webkit-keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@-webkit-keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@-webkit-keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@-webkit-keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes fadeOut{0%{opacity:1}100%{opacity:0}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}.transition-forward-animation-out{-webkit-transition:left 250ms;transition:left 250ms;position:relative !important;left:-150% !important}.transition-forward-animation-in{position:relative;-webkit-animation:transition-forward-in-animation 250ms;animation:transition-forward-in-animation 250ms}.transition-backward-animation-out{-webkit-transition:left 250ms;transition:left 250ms;position:relative !important;left:150% !important}.transition-backward-animation-in{position:relative !important;-webkit-animation:transition-backward-in-animation 250ms;animation:transition-backward-in-animation 250ms}.slide-out-to-right-fixed{-webkit-transition:left 400ms;transition:left 400ms;position:fixed;left:100% !important}.slide-in-from-right-fixed{position:fixed;-webkit-animation:single-drawer-transition-forward-in-animation 400ms;animation:single-drawer-transition-forward-in-animation 400ms}.phn-flex-col{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.phn-flex-row{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}.phn-align-center{-ms-flex-align:center;align-items:center}.phn-justify-around{-ms-flex-pack:distribute;justify-content:space-around}.phn-justify-between{-ms-flex-pack:justify;justify-content:space-between}.phn-flex-wrap{-ms-flex-wrap:wrap;flex-wrap:wrap}:host{display:block;position:relative;visibility:visible;height:auto !important;z-index:500}:host .header{min-height:4.125rem}@media (min-width: 480px){:host .header{min-height:5rem}}@media (min-width: 760px){:host .header{min-height:4.5625rem}}@media (min-width: 1000px){:host .header{min-height:4.75rem}}@media (min-width: 1300px){:host .header{min-height:5.125rem}}@media (min-width: 1920px){:host .limited-width{max-width:160rem;margin:0 auto}}";

const Header = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.navigationDidLoad = index.createEvent(this, "navigationDidLoad", 7);
    this.phnLogout = index.createEvent(this, "phnLogout", 7);
    this.phnLogin = index.createEvent(this, "phnLogin", 7);
    this.eventPreventedTimeout = new timeout.Timeout(0);
    this.checkedMarketingConsent = false;
    this.loadedToggles = false;
    this.locale = helper.DEFAULT_LOCALE;
    this.env = '';
    this.clientId = '';
    this.pageName = '';
    this.theme = helper.NavigationTheme.light;
    this.mode = helper.NavigationMode.navbar;
    this.limitedWidth = 'true';
    this.app = helper.Application.default;
    this.initialRoutingPath = '';
    this.displayLogoOnly = false;
    this.numberOfShoppingItems = 0;
    this.wishlistItemsNumber = 0;
    this.shopInformation = '{ "wishlistItemsNumber": 0, "numberOfShoppingItems": 0, "subTotal": "0" }';
    this.loadingContent = false;
    this.receivedContent = false;
    this.breakpoint = featureToggles.windowService.getBreakpoint();
  }
  async localeWatchHandler() {
    navContentStore.navStateStore.state.locale = this.locale;
    await this.initNavContentStore();
    globalDataLayerService.globalDataLayerService.setLocale(this.locale);
    featureToggles.logger.init(this.breakpoint, this.locale);
  }
  pageNameWatchHandler() {
    globalDataLayerService.globalDataLayerService.setPageName(this.pageName);
  }
  async newEnvReceived() {
    await this.initEnvironment();
    await this.initNavContentStore();
    initAuthIframe(helper.getConfig(navContentStore.navStateStore.state.env));
  }
  async appWatcher(newValue) {
    navContentStore.navStateStore.state.app = helper.sanitizeApp(newValue);
  }
  breakpointWatcher() {
    featureToggles.logger.init(this.breakpoint, this.locale);
  }
  watchShopVariable(information, _, propName) {
    const shopInformation = JSON.parse(information);
    shopHelper.shopStateStore.set(propName, shopInformation);
  }
  initialRoutingPathWatcher() {
    this.handleInitialRoutingKeyPath();
  }
  resizeHandler() {
    this.breakpoint = featureToggles.windowService.getBreakpoint();
  }
  async newAuthMessageReceived(event) {
    const config = helper.getConfig(navContentStore.navStateStore.state.env);
    if (new URL(config.LOGIN_REDIRECT_URL).origin !== new URL(event.origin).origin) {
      return;
    }
    if (helper.isString(event.data.token)) {
      try {
        featureToggles.windowService.removeElement(helper.IFRAME_ID);
        await initializeUserData(event.data.token, this.locale);
      }
      catch (err) {
        featureToggles.logger.error('INIT_USER_DATA', err);
      }
    }
  }
  async handleLogin() {
    const phnLogin = this.phnLogin.emit();
    this.eventPreventedTimeout.set(async () => {
      var _a;
      if (phnLogin.defaultPrevented) {
        return;
      }
      const loginLink = (_a = navContentStore.navContentStore.state.myPorsche) === null || _a === void 0 ? void 0 : _a.link;
      if (helper.isString(loginLink)) {
        featureToggles.windowService.redirectToUrl(loginLink);
        return;
      }
    });
  }
  async handleLogout() {
    const config = helper.getConfig(navContentStore.navStateStore.state.env);
    const phnLogout = this.phnLogout.emit();
    this.eventPreventedTimeout.set(async () => {
      if (phnLogout.defaultPrevented) {
        return;
      }
      // TODO which logout url to use? myporsche? auth0?
      featureToggles.windowService.redirectToUrl(`${config.IDENTITY_PROVIDER_URL}/v2/logout`);
      return;
    });
  }
  handleUserCentricsReady() {
    this.checkMarketingConsent();
  }
  handleUserCentricsInitalization() {
    this.checkMarketingConsent();
  }
  navigationLoadedHandler({ detail: navigationLoaded }) {
    featureToggles.windowService.navigationLoaded = navigationLoaded;
    if (navigationLoaded) {
      this.navigationDidLoad.emit();
    }
  }
  checkMarketingConsent() {
    if (!this.checkedMarketingConsent) {
      navContentStore.navStateStore.state.userConsent = false;
      this.checkedMarketingConsent = featureToggles.windowService.maybeCheckMarketingConsent(() => {
        navContentStore.navStateStore.state.userConsent = true;
      });
    }
  }
  async initEnvironment() {
    navContentStore.navStateStore.state.env = navContentStore.getEnvironment(this.env);
    navContentStore.navStateStore.state.app = helper.sanitizeApp(this.app);
    navContentStore.navStateStore.state.locale = this.locale;
    globalDataLayerService.globalDataLayerService.setEnvironment(navContentStore.navStateStore.state.env);
    const config = helper.getConfig(navContentStore.navStateStore.state.env);
    initAuthIframe(config);
    this.loadedToggles = false;
    await featureToggles.featureToggles.setFeatures(navContentStore.navStateStore.state.env);
    this.loadedToggles = true;
    featureToggles.logger.init(this.breakpoint, this.locale);
    const shopInformation = JSON.parse(this.shopInformation);
    shopHelper.loadsShopPropsOnStore({
      shopInformation: shopInformation
    });
    await abTestingConstructorService.abTestingService().init();
  }
  async initNavContentStore() {
    const previouslyReceivedContent = this.receivedContent;
    this.receivedContent = false;
    this.loadingContent = true;
    try {
      const fetchedLocale = this.locale;
      const fetchedEnv = navContentStore.navStateStore.state.env;
      const contentForLocale = await contentService.fetchContent(fetchedLocale, this.app);
      // This is to make sure that the response is valid for the current locale and environment
      // and wasn't made with another locale or enironment
      if (this.locale === fetchedLocale && navContentStore.navStateStore.state.env === fetchedEnv) {
        Object.assign(navContentStore.navContentStore.state, contentForLocale);
        this.receivedContent = true;
      }
    }
    catch (err) {
      featureToggles.logger.error('FETCH_CONTENT', err);
      if (previouslyReceivedContent) {
        this.receivedContent = true;
      }
    }
    this.loadingContent = false;
  }
  async setDealerSearchResultsStore() {
    const { savedDealerCookie, ppnDealers } = dealerSearchResultsStore.dealerSearchResultsStore.state;
    if (savedDealerCookie === null || ppnDealers[savedDealerCookie.id] !== undefined) {
      return;
    }
    const coordinates = { latitude: savedDealerCookie.latitude, longitude: savedDealerCookie.longitude };
    const { env } = navContentStore.navStateStore.state;
    try {
      const { country } = navContentStore.splitLocale(this.locale);
      const { id: dealerId } = savedDealerCookie;
      const ppnDealer = dealerSearchHelper.showDealerSearchDropdown(country)
        ? await dealerService.getPPNDealerByRegion(dealerId, country)
        : await dealerService.getPPNDealer(env, helper.getConfig(env).DEALER_API_URL, dealerId, coordinates, country);
      dealerSearchResultsStore.dealerSearchResultsStore.state.ppnDealers[savedDealerCookie.id] = ppnDealer;
    }
    catch (err) {
      featureToggles.logger.error('GET_DEALER', err);
      dealerSearchResultsStore.dealerSearchResultsStore.state.savedDealerCookie = null;
    }
  }
  handleInitialRoutingKeyPath() {
    const [topLevelRoutingKey, ...segments] = this.initialRoutingPath.split('>');
    const rootContentItem = helper.getRootMenuItem(navContentStore.navContentStore.state, topLevelRoutingKey);
    if (rootContentItem === null) {
      return;
    }
    const validSegments = helper.getValidContentPathSegments(rootContentItem, segments);
    const routingKeyHistory = helper.buildRoutingKeyHistoryFromContentPath([topLevelRoutingKey, ...validSegments]);
    routerStore.routerStore.state.initialRoutingKeyHistory = routingKeyHistory;
    routerStore.routerStore.state.initialRoutingKeyPointer = routingKeyHistory.length - 1;
  }
  componentWillLoad() {
    globalDataLayerService.globalDataLayerService.setDefaultProperties(this.locale, this.pageName);
    window.ncs = navContentStore.navContentStore;
    this.checkMarketingConsent();
    this.initEnvironment()
      .then(() => Promise.all([this.initNavContentStore(), this.setDealerSearchResultsStore()]))
      .then(() => Promise.all([abTestingConstructorService.abTestingService().loadContentGeneratorExperiments()]))
      .then(() => {
      this.handleInitialRoutingKeyPath();
    });
  }
  async componentDidLoad() {
    featureToggles.windowService.version = helper.VERSION;
    globalDataLayerService.globalDataLayerService.pushDataLayerEvent(navContentStore.EventActions.GENERAL_LOAD);
    featureToggles.logger.info('NAVIGATION_LOAD');
  }
  disconnectedCallback() {
    this.eventPreventedTimeout.cancel();
  }
  hasLimitedWidth() {
    return this.mode === helper.NavigationMode.hero && this.limitedWidth === 'true' ? true : false;
  }
  render() {
    if (!this.loadedToggles) {
      return index.h("div", null);
    }
    return (
    // div needed because conditional styling does not work on Host of shadow component for some unknown reason
    index.h("div", { class: this.hasLimitedWidth() ? 'header limited-width' : 'header' }, index.h("phn-wrapper", { theme: this.theme, mode: this.mode, locale: this.locale, loadingContent: this.loadingContent, receivedContent: this.receivedContent, breakpoint: this.breakpoint, app: helper.sanitizeApp(this.app), displayLogoOnly: this.displayLogoOnly, limitedWidth: this.hasLimitedWidth() }, shopHelper.isShopAvailable(this.locale, helper.sanitizeApp(this.app)) ? (index.h("div", { slot: "contextual_drawer_header" }, index.h("slot", { name: "contextual_drawer_header" }))) : null)));
  }
  static get assetsDirs() { return ["auth"]; }
  static get watchers() { return {
    "locale": ["localeWatchHandler"],
    "pageName": ["pageNameWatchHandler"],
    "env": ["newEnvReceived"],
    "app": ["appWatcher"],
    "breakpoint": ["breakpointWatcher"],
    "shopInformation": ["watchShopVariable"],
    "initialRoutingPath": ["initialRoutingPathWatcher"]
  }; }
};
Header.style = headerCss;

const level0Css = "@-webkit-keyframes transition-forward-in-animation{from{left:150%}to{left:0%}}@keyframes transition-forward-in-animation{from{left:150%}to{left:0%}}@-webkit-keyframes transition-backward-in-animation{from{left:-150%}to{left:0%}}@keyframes transition-backward-in-animation{from{left:-150%}to{left:0%}}@-webkit-keyframes single-drawer-transition-forward-in-animation{from{left:100%}to{left:0%}}@keyframes single-drawer-transition-forward-in-animation{from{left:100%}to{left:0%}}@-webkit-keyframes fade-in-animation{from{opacity:0;background-color:rgba(0, 0, 0, 0)}to{opacity:1;background-color:rgba(0, 0, 0, 0.6)}}@keyframes fade-in-animation{from{opacity:0;background-color:rgba(0, 0, 0, 0)}to{opacity:1;background-color:rgba(0, 0, 0, 0.6)}}@-webkit-keyframes slide-in-from-left-absolute{from{left:-1000px}to{left:0px}}@keyframes slide-in-from-left-absolute{from{left:-1000px}to{left:0px}}@-webkit-keyframes slideDown{from{max-height:0}to{max-height:1000px}}@keyframes slideDown{from{max-height:0}to{max-height:1000px}}@-webkit-keyframes slideUp{from{max-height:1000px}to{max-height:0}}@keyframes slideUp{from{max-height:1000px}to{max-height:0}}@-webkit-keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@-webkit-keyframes slideRight{from{max-width:1000px}to{max-width:0}}@keyframes slideRight{from{max-width:1000px}to{max-width:0}}@-webkit-keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@-webkit-keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@-webkit-keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@-webkit-keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@-webkit-keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@-webkit-keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes fadeOut{0%{opacity:1}100%{opacity:0}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}.transition-forward-animation-out.sc-phn-level-0{-webkit-transition:left 250ms;transition:left 250ms;position:relative !important;left:-150% !important}.transition-forward-animation-in.sc-phn-level-0{position:relative;-webkit-animation:transition-forward-in-animation 250ms;animation:transition-forward-in-animation 250ms}.transition-backward-animation-out.sc-phn-level-0{-webkit-transition:left 250ms;transition:left 250ms;position:relative !important;left:150% !important}.transition-backward-animation-in.sc-phn-level-0{position:relative !important;-webkit-animation:transition-backward-in-animation 250ms;animation:transition-backward-in-animation 250ms}.slide-out-to-right-fixed.sc-phn-level-0{-webkit-transition:left 400ms;transition:left 400ms;position:fixed;left:100% !important}.slide-in-from-right-fixed.sc-phn-level-0{position:fixed;-webkit-animation:single-drawer-transition-forward-in-animation 400ms;animation:single-drawer-transition-forward-in-animation 400ms}.phn-flex-col.sc-phn-level-0{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.phn-flex-row.sc-phn-level-0{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}.phn-align-center.sc-phn-level-0{-ms-flex-align:center;align-items:center}.phn-justify-around.sc-phn-level-0{-ms-flex-pack:distribute;justify-content:space-around}.phn-justify-between.sc-phn-level-0{-ms-flex-pack:justify;justify-content:space-between}.phn-flex-wrap.sc-phn-level-0{-ms-flex-wrap:wrap;flex-wrap:wrap}.sc-phn-level-0-h{display:block}.hero_light-theme.themed-background.sc-phn-level-0-h{background:-webkit-gradient(linear, left top, left bottom, from(rgba(224, 224, 224, 0.9)), color-stop(20%, rgba(224, 224, 224, 0.9)), color-stop(26.67%, rgba(224, 224, 224, 0.852589)), color-stop(33.33%, rgba(225, 225, 225, 0.768225)), color-stop(40%, rgba(226, 226, 226, 0.668116)), color-stop(46.67%, rgba(227, 227, 227, 0.557309)), color-stop(53.33%, rgba(228, 228, 228, 0.442691)), color-stop(60%, rgba(229, 229, 229, 0.331884)), color-stop(66.67%, rgba(230, 230, 230, 0.231775)), color-stop(73.33%, rgba(231, 231, 231, 0.147411)), color-stop(80%, rgba(232, 232, 232, 0.0816599)), color-stop(86.67%, rgba(232, 232, 232, 0.03551)), color-stop(93.33%, rgba(232, 232, 232, 0.0086472)), to(rgba(232, 232, 232, 0)));background:linear-gradient(to bottom, rgba(224, 224, 224, 0.9) 0%, rgba(224, 224, 224, 0.9) 20%, rgba(224, 224, 224, 0.852589) 26.67%, rgba(225, 225, 225, 0.768225) 33.33%, rgba(226, 226, 226, 0.668116) 40%, rgba(227, 227, 227, 0.557309) 46.67%, rgba(228, 228, 228, 0.442691) 53.33%, rgba(229, 229, 229, 0.331884) 60%, rgba(230, 230, 230, 0.231775) 66.67%, rgba(231, 231, 231, 0.147411) 73.33%, rgba(232, 232, 232, 0.0816599) 80%, rgba(232, 232, 232, 0.03551) 86.67%, rgba(232, 232, 232, 0.0086472) 93.33%, rgba(232, 232, 232, 0) 100%)}@media (min-width: 0px){.hero_light-theme.themed-background.sc-phn-level-0-h{height:72px}}@media (min-width: 760px){.hero_light-theme.themed-background.sc-phn-level-0-h{height:148px}}.hero_light-theme.sc-phn-level-0-h phn-p-icon.sc-phn-level-0{color:black}.hero_dark-theme.themed-background.sc-phn-level-0-h{background:-webkit-gradient(linear, left top, left bottom, from(rgba(31, 31, 31, 0.9)), color-stop(20%, rgba(31, 31, 31, 0.9)), color-stop(26.67%, rgba(31, 31, 31, 0.852589)), color-stop(33.33%, rgba(32, 32, 32, 0.768225)), color-stop(40%, rgba(33, 33, 33, 0.668116)), color-stop(46.67%, rgba(34, 34, 34, 0.557309)), color-stop(53.33%, rgba(35, 35, 35, 0.442691)), color-stop(60%, rgba(36, 36, 36, 0.331884)), color-stop(66.67%, rgba(37, 37, 37, 0.231775)), color-stop(73.33%, rgba(38, 38, 38, 0.147411)), color-stop(80%, rgba(39, 39, 39, 0.0816599)), color-stop(86.67%, rgba(39, 39, 39, 0.03551)), color-stop(93.33%, rgba(39, 39, 39, 0.0086472)), to(rgba(39, 39, 39, 0)));background:linear-gradient(to bottom, rgba(31, 31, 31, 0.9) 0%, rgba(31, 31, 31, 0.9) 20%, rgba(31, 31, 31, 0.852589) 26.67%, rgba(32, 32, 32, 0.768225) 33.33%, rgba(33, 33, 33, 0.668116) 40%, rgba(34, 34, 34, 0.557309) 46.67%, rgba(35, 35, 35, 0.442691) 53.33%, rgba(36, 36, 36, 0.331884) 60%, rgba(37, 37, 37, 0.231775) 66.67%, rgba(38, 38, 38, 0.147411) 73.33%, rgba(39, 39, 39, 0.0816599) 80%, rgba(39, 39, 39, 0.03551) 86.67%, rgba(39, 39, 39, 0.0086472) 93.33%, rgba(39, 39, 39, 0) 100%)}@media (min-width: 0px){.hero_dark-theme.themed-background.sc-phn-level-0-h{height:72px}}@media (min-width: 760px){.hero_dark-theme.themed-background.sc-phn-level-0-h{height:148px}}.hero_dark-theme.sc-phn-level-0-h phn-p-icon.sc-phn-level-0{color:white}.navbar-theme.themed-background.sc-phn-level-0-h{background:white;border-bottom:1px solid #e3e4e5}.navbar-theme.sc-phn-level-0-h phn-p-icon.sc-phn-level-0{color:black}.transparent_dark-theme.themed-background.sc-phn-level-0-h{background:transparent}.transparent_dark-theme.sc-phn-level-0-h phn-p-icon.sc-phn-level-0{color:white}.transparent_light-theme.themed-background.sc-phn-level-0-h{background:transparent}.transparent_light-theme.sc-phn-level-0-h phn-p-icon.sc-phn-level-0{color:white}@media (min-width: 1920px){.sc-phn-level-0-h header.limited-width.sc-phn-level-0{padding:0 calc(50vw - 2560px)}}.sc-phn-level-0-h header.sc-phn-level-0{margin:0 var(--pds-internal-grid-margin, 0);display:grid;padding:0 calc(50% - var(--pds-internal-grid-margin, 0px) - 1280px);grid-gap:clamp(16px, 1.25vw + 12px, 36px);max-width:2560px;min-width:320px;-webkit-box-sizing:content-box;box-sizing:content-box;grid-template-columns:[full-start] minmax(0, var(--pds-internal-grid-outer-column, calc(var(--pds-internal-grid-safe-zone) - clamp(16px, 1.25vw + 12px, 36px)))) [wide-start extended-start basic-start narrow-start] repeat(6, minmax(0, 1fr)) [narrow-end basic-end extended-end wide-end] minmax(0, var(--pds-internal-grid-outer-column, calc(var(--pds-internal-grid-safe-zone) - clamp(16px, 1.25vw + 12px, 36px)))) [full-end];--pds-internal-grid-safe-zone:max(22px, 10.625vw - 12px);--pds-grid-basic-span-one-half:span 3;--pds-grid-basic-span-one-third:span 2;--pds-grid-narrow-span-one-half:span 3;--pds-grid-basic-span-two-thirds:span 4;--pds-grid-extended-span-one-half:span 3;font-family:\"Porsche Next\", \"Arial Narrow\", Arial, \"Heiti SC\", SimHei, sans-serif;font-weight:400;color:#fff;height:4.125rem}@media (min-width: 760px){.sc-phn-level-0-h header.sc-phn-level-0{grid-template-columns:[full-start] minmax(0, var(--pds-internal-grid-outer-column, calc(var(--pds-internal-grid-safe-zone) - clamp(16px, 1.25vw + 12px, 36px)))) [wide-start] minmax(0, 1fr) [extended-start] minmax(0, 1fr) [basic-start] repeat(2, minmax(0, 1fr)) [narrow-start] repeat(8, minmax(0, 1fr)) [narrow-end] repeat(2, minmax(0, 1fr)) [basic-end] minmax(0, 1fr) [extended-end] minmax(0, 1fr) [wide-end] minmax(0, var(--pds-internal-grid-outer-column, calc(var(--pds-internal-grid-safe-zone) - clamp(16px, 1.25vw + 12px, 36px)))) [full-end];--pds-internal-grid-safe-zone:calc(5vw - 16px);--pds-grid-basic-span-one-half:span 6;--pds-grid-basic-span-one-third:span 4;--pds-grid-narrow-span-one-half:span 4;--pds-grid-basic-span-two-thirds:span 8;--pds-grid-extended-span-one-half:span 7}}@media (min-width: 1920px){.sc-phn-level-0-h header.sc-phn-level-0{--pds-internal-grid-safe-zone:min(50vw - 880px, 400px)}}@media (min-width: 480px){.sc-phn-level-0-h header.sc-phn-level-0{height:5rem}}@media (min-width: 760px){.sc-phn-level-0-h header.sc-phn-level-0{height:4.5625rem}}@media (min-width: 1000px){.sc-phn-level-0-h header.sc-phn-level-0{height:4.75rem}}@media (min-width: 1300px){.sc-phn-level-0-h header.sc-phn-level-0{height:5.125rem;-ms-flex-direction:row;flex-direction:row}}.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0{height:100%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;position:relative;grid-column:wide-start/wide-end}.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 .level-0-content-logo.sc-phn-level-0{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 .level-0-content-icons.sc-phn-level-0{position:absolute;width:100%}.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 phn-burger-button.sc-phn-level-0,.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 phn-level-0-icons.sc-phn-level-0,.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 phn-logo.sc-phn-level-0,.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 .skeleton-container.sc-phn-level-0{-ms-flex:1;flex:1;display:-ms-flexbox;display:flex}.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 .skeleton-container.crest-skeleton.sc-phn-level-0{-ms-flex-pack:center;justify-content:center}.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 phn-logo.sc-phn-level-0{-ms-flex-pack:center;justify-content:center;z-index:1;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}@media (min-width: 1300px){.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 phn-logo.sc-phn-level-0{z-index:1}}.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 .burger-button-skeleton.sc-phn-level-0{width:1.5rem;height:1.5rem;border-radius:0.25rem;background:#d8d8db}@media (min-width: 480px){.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 .burger-button-skeleton.sc-phn-level-0{width:4.75rem;height:1.5rem}}.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 .label-bone.sc-phn-level-0{width:7.75rem;height:1.5rem;border-radius:0.25rem;background-color:#d8d8db}@media (min-width: 760px){.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 .label-bone.sc-phn-level-0{width:18rem}}.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 .crest-bone.sc-phn-level-0{width:1.403125rem;height:1.8125rem;background-image:url(\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='22.45px' height='29px' viewBox='0 0 29 37' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3Ecrest-path-pixel-perfect-3%3C/title%3E%3Cg id='Design-Focus' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='832-skeleton-hn-1366' transform='translate(-130.000000, -39.000000)' fill='%23E3E4E5' fill-rule='nonzero'%3E%3Cg id='Crest-bones' transform='translate(78.000000, 0.000000)'%3E%3Cpath d='M80.8612951,41.6891698 C79.3593022,41.0929534 77.8195513,40.5958533 76.2520235,40.2010916 C74.092052,39.6781633 71.8946453,39.3227949 69.6795438,39.1381787 C68.6125828,39.0425165 67.6096394,39.0106291 66.4786608,39 L66.4679912,39 C65.4010302,39 64.3340692,39 63.2671082,39.1381787 C61.0520067,39.3227949 58.8545999,39.6781633 56.6946284,40.2010916 C55.1285058,40.5930516 53.5918758,41.093847 52.0960265,41.6997989 L52,41.6997989 C52,41.6997989 52.1813834,52.8710141 52.3200883,58.3981614 C52.3624958,60.0288438 52.6613178,61.6428163 53.2056659,63.1812698 C53.83596,64.927843 54.6779771,66.5912102 55.7130243,68.1344441 C56.7974563,69.7321996 58.1093136,71.164397 59.6074319,72.3860959 C60.1877267,72.8817079 60.8047619,73.3329574 61.4532745,73.7359954 C62.4748439,74.3534515 63.5453697,74.8866836 64.6541575,75.3303648 C65.0062546,75.4791727 65.3263429,75.6279805 65.6144224,75.7236426 C65.9077386,75.8428333 66.2112826,75.9353298 66.5213392,76 C66.8313958,75.9353298 67.1349399,75.8428333 67.4282561,75.7236426 C67.7163355,75.6279805 68.0364238,75.4791727 68.3991906,75.3303648 C69.4899033,74.8845355 70.542531,74.3513317 71.5467255,73.7359954 C72.1928274,73.3294237 72.8096114,72.8783579 73.3925681,72.3860959 C74.8933275,71.167176 76.2055628,69.7345659 77.2869757,68.1344441 C78.3220229,66.5912102 79.16404,64.927843 79.7943341,63.1812698 C80.3386822,61.6428163 80.6375042,60.0288438 80.6799117,58.3981614 C80.8186166,52.8710141 81,41.6997989 81,41.6997989 L80.8612951,41.6891698 Z' id='crest-path-pixel-perfect-3'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");background-repeat:no-repeat;background-position:center}@media (min-width: 480px){.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 .crest-bone.sc-phn-level-0{width:1.6875rem;height:2.25rem;background-image:url(\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='27px' height='36px' viewBox='0 0 29 37' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3Ecrest-path-pixel-perfect-3%3C/title%3E%3Cg id='Design-Focus' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='832-skeleton-hn-1366' transform='translate(-130.000000, -39.000000)' fill='%23E3E4E5' fill-rule='nonzero'%3E%3Cg id='Crest-bones' transform='translate(78.000000, 0.000000)'%3E%3Cpath d='M80.8612951,41.6891698 C79.3593022,41.0929534 77.8195513,40.5958533 76.2520235,40.2010916 C74.092052,39.6781633 71.8946453,39.3227949 69.6795438,39.1381787 C68.6125828,39.0425165 67.6096394,39.0106291 66.4786608,39 L66.4679912,39 C65.4010302,39 64.3340692,39 63.2671082,39.1381787 C61.0520067,39.3227949 58.8545999,39.6781633 56.6946284,40.2010916 C55.1285058,40.5930516 53.5918758,41.093847 52.0960265,41.6997989 L52,41.6997989 C52,41.6997989 52.1813834,52.8710141 52.3200883,58.3981614 C52.3624958,60.0288438 52.6613178,61.6428163 53.2056659,63.1812698 C53.83596,64.927843 54.6779771,66.5912102 55.7130243,68.1344441 C56.7974563,69.7321996 58.1093136,71.164397 59.6074319,72.3860959 C60.1877267,72.8817079 60.8047619,73.3329574 61.4532745,73.7359954 C62.4748439,74.3534515 63.5453697,74.8866836 64.6541575,75.3303648 C65.0062546,75.4791727 65.3263429,75.6279805 65.6144224,75.7236426 C65.9077386,75.8428333 66.2112826,75.9353298 66.5213392,76 C66.8313958,75.9353298 67.1349399,75.8428333 67.4282561,75.7236426 C67.7163355,75.6279805 68.0364238,75.4791727 68.3991906,75.3303648 C69.4899033,74.8845355 70.542531,74.3513317 71.5467255,73.7359954 C72.1928274,73.3294237 72.8096114,72.8783579 73.3925681,72.3860959 C74.8933275,71.167176 76.2055628,69.7345659 77.2869757,68.1344441 C78.3220229,66.5912102 79.16404,64.927843 79.7943341,63.1812698 C80.3386822,61.6428163 80.6375042,60.0288438 80.6799117,58.3981614 C80.8186166,52.8710141 81,41.6997989 81,41.6997989 L80.8612951,41.6891698 Z' id='crest-path-pixel-perfect-3'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")}}@media (min-width: 760px){.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 .crest-bone.sc-phn-level-0{width:1.75rem;height:2.25rem;background-image:url(\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='28px' height='36px' viewBox='0 0 29 37' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3Ecrest-path-pixel-perfect-3%3C/title%3E%3Cg id='Design-Focus' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='832-skeleton-hn-1366' transform='translate(-130.000000, -39.000000)' fill='%23E3E4E5' fill-rule='nonzero'%3E%3Cg id='Crest-bones' transform='translate(78.000000, 0.000000)'%3E%3Cpath d='M80.8612951,41.6891698 C79.3593022,41.0929534 77.8195513,40.5958533 76.2520235,40.2010916 C74.092052,39.6781633 71.8946453,39.3227949 69.6795438,39.1381787 C68.6125828,39.0425165 67.6096394,39.0106291 66.4786608,39 L66.4679912,39 C65.4010302,39 64.3340692,39 63.2671082,39.1381787 C61.0520067,39.3227949 58.8545999,39.6781633 56.6946284,40.2010916 C55.1285058,40.5930516 53.5918758,41.093847 52.0960265,41.6997989 L52,41.6997989 C52,41.6997989 52.1813834,52.8710141 52.3200883,58.3981614 C52.3624958,60.0288438 52.6613178,61.6428163 53.2056659,63.1812698 C53.83596,64.927843 54.6779771,66.5912102 55.7130243,68.1344441 C56.7974563,69.7321996 58.1093136,71.164397 59.6074319,72.3860959 C60.1877267,72.8817079 60.8047619,73.3329574 61.4532745,73.7359954 C62.4748439,74.3534515 63.5453697,74.8866836 64.6541575,75.3303648 C65.0062546,75.4791727 65.3263429,75.6279805 65.6144224,75.7236426 C65.9077386,75.8428333 66.2112826,75.9353298 66.5213392,76 C66.8313958,75.9353298 67.1349399,75.8428333 67.4282561,75.7236426 C67.7163355,75.6279805 68.0364238,75.4791727 68.3991906,75.3303648 C69.4899033,74.8845355 70.542531,74.3513317 71.5467255,73.7359954 C72.1928274,73.3294237 72.8096114,72.8783579 73.3925681,72.3860959 C74.8933275,71.167176 76.2055628,69.7345659 77.2869757,68.1344441 C78.3220229,66.5912102 79.16404,64.927843 79.7943341,63.1812698 C80.3386822,61.6428163 80.6375042,60.0288438 80.6799117,58.3981614 C80.8186166,52.8710141 81,41.6997989 81,41.6997989 L80.8612951,41.6891698 Z' id='crest-path-pixel-perfect-3'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")}}@media (min-width: 1000px){.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 .crest-bone.sc-phn-level-0{width:1.9375rem;height:2.5625rem;background-image:url(\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='31px' height='41px' viewBox='0 0 29 37' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3Ecrest-path-pixel-perfect-3%3C/title%3E%3Cg id='Design-Focus' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='832-skeleton-hn-1366' transform='translate(-130.000000, -39.000000)' fill='%23E3E4E5' fill-rule='nonzero'%3E%3Cg id='Crest-bones' transform='translate(78.000000, 0.000000)'%3E%3Cpath d='M80.8612951,41.6891698 C79.3593022,41.0929534 77.8195513,40.5958533 76.2520235,40.2010916 C74.092052,39.6781633 71.8946453,39.3227949 69.6795438,39.1381787 C68.6125828,39.0425165 67.6096394,39.0106291 66.4786608,39 L66.4679912,39 C65.4010302,39 64.3340692,39 63.2671082,39.1381787 C61.0520067,39.3227949 58.8545999,39.6781633 56.6946284,40.2010916 C55.1285058,40.5930516 53.5918758,41.093847 52.0960265,41.6997989 L52,41.6997989 C52,41.6997989 52.1813834,52.8710141 52.3200883,58.3981614 C52.3624958,60.0288438 52.6613178,61.6428163 53.2056659,63.1812698 C53.83596,64.927843 54.6779771,66.5912102 55.7130243,68.1344441 C56.7974563,69.7321996 58.1093136,71.164397 59.6074319,72.3860959 C60.1877267,72.8817079 60.8047619,73.3329574 61.4532745,73.7359954 C62.4748439,74.3534515 63.5453697,74.8866836 64.6541575,75.3303648 C65.0062546,75.4791727 65.3263429,75.6279805 65.6144224,75.7236426 C65.9077386,75.8428333 66.2112826,75.9353298 66.5213392,76 C66.8313958,75.9353298 67.1349399,75.8428333 67.4282561,75.7236426 C67.7163355,75.6279805 68.0364238,75.4791727 68.3991906,75.3303648 C69.4899033,74.8845355 70.542531,74.3513317 71.5467255,73.7359954 C72.1928274,73.3294237 72.8096114,72.8783579 73.3925681,72.3860959 C74.8933275,71.167176 76.2055628,69.7345659 77.2869757,68.1344441 C78.3220229,66.5912102 79.16404,64.927843 79.7943341,63.1812698 C80.3386822,61.6428163 80.6375042,60.0288438 80.6799117,58.3981614 C80.8186166,52.8710141 81,41.6997989 81,41.6997989 L80.8612951,41.6891698 Z' id='crest-path-pixel-perfect-3'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")}}@media (min-width: 1300px){.sc-phn-level-0-h header.sc-phn-level-0 .level-0-content.sc-phn-level-0 .crest-bone.sc-phn-level-0{width:2rem;height:2.6875rem;background-image:url(\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='32px' height='43px' viewBox='0 0 29 37' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3Ecrest-path-pixel-perfect-3%3C/title%3E%3Cg id='Design-Focus' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='832-skeleton-hn-1366' transform='translate(-130.000000, -39.000000)' fill='%23E3E4E5' fill-rule='nonzero'%3E%3Cg id='Crest-bones' transform='translate(78.000000, 0.000000)'%3E%3Cpath d='M80.8612951,41.6891698 C79.3593022,41.0929534 77.8195513,40.5958533 76.2520235,40.2010916 C74.092052,39.6781633 71.8946453,39.3227949 69.6795438,39.1381787 C68.6125828,39.0425165 67.6096394,39.0106291 66.4786608,39 L66.4679912,39 C65.4010302,39 64.3340692,39 63.2671082,39.1381787 C61.0520067,39.3227949 58.8545999,39.6781633 56.6946284,40.2010916 C55.1285058,40.5930516 53.5918758,41.093847 52.0960265,41.6997989 L52,41.6997989 C52,41.6997989 52.1813834,52.8710141 52.3200883,58.3981614 C52.3624958,60.0288438 52.6613178,61.6428163 53.2056659,63.1812698 C53.83596,64.927843 54.6779771,66.5912102 55.7130243,68.1344441 C56.7974563,69.7321996 58.1093136,71.164397 59.6074319,72.3860959 C60.1877267,72.8817079 60.8047619,73.3329574 61.4532745,73.7359954 C62.4748439,74.3534515 63.5453697,74.8866836 64.6541575,75.3303648 C65.0062546,75.4791727 65.3263429,75.6279805 65.6144224,75.7236426 C65.9077386,75.8428333 66.2112826,75.9353298 66.5213392,76 C66.8313958,75.9353298 67.1349399,75.8428333 67.4282561,75.7236426 C67.7163355,75.6279805 68.0364238,75.4791727 68.3991906,75.3303648 C69.4899033,74.8845355 70.542531,74.3513317 71.5467255,73.7359954 C72.1928274,73.3294237 72.8096114,72.8783579 73.3925681,72.3860959 C74.8933275,71.167176 76.2055628,69.7345659 77.2869757,68.1344441 C78.3220229,66.5912102 79.16404,64.927843 79.7943341,63.1812698 C80.3386822,61.6428163 80.6375042,60.0288438 80.6799117,58.3981614 C80.8186166,52.8710141 81,41.6997989 81,41.6997989 L80.8612951,41.6891698 Z' id='crest-path-pixel-perfect-3'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")}}.sc-phn-level-0-h header.sc-phn-level-0 phn-crest.sc-phn-level-0{z-index:1;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}@media (min-width: 1300px){.sc-phn-level-0-h header.sc-phn-level-0 phn-crest.sc-phn-level-0{z-index:1}}.sc-phn-level-0-h header.sc-phn-level-0 phn-burger-button.sc-phn-level-0{padding:1.25rem 0 1rem 0.75rem}@media (min-width: 480px){.sc-phn-level-0-h header.sc-phn-level-0 phn-burger-button.sc-phn-level-0{padding:1.25rem 0 1rem 0.75rem}}@media (min-width: 760px){.sc-phn-level-0-h header.sc-phn-level-0 phn-burger-button.sc-phn-level-0{padding:1.75rem 0 1.5rem 1.25rem}}@media (min-width: 1000px){.sc-phn-level-0-h header.sc-phn-level-0 phn-burger-button.sc-phn-level-0{padding:2rem 0 1.75rem 1.5rem}}@media (min-width: 1760px){.sc-phn-level-0-h header.sc-phn-level-0 phn-burger-button.sc-phn-level-0{padding:2.25rem 0 2rem 1.75rem}}.sc-phn-level-0-h header.sc-phn-level-0 .burger-button.sc-phn-level-0:focus{outline-width:2px;outline-style:solid;outline-offset:1px;outline-color:#1a44ea}.sc-phn-level-0-h .main-content.sc-phn-level-0{width:1.25rem}.sc-phn-level-0-h .main-content.sc-phn-level-0:focus{outline-style:none}.sc-phn-level-0-h .sr-only.sc-phn-level-0{position:absolute;width:0.0625rem;height:0.0625rem;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.sc-phn-level-0-h phn-p-icon.sc-phn-level-0{width:1.5rem}@media (min-width: 760px){.sc-phn-level-0-h phn-p-icon.sc-phn-level-0{width:1.5rem}}@media (min-width: 1000px){.sc-phn-level-0-h phn-p-icon.sc-phn-level-0{width:1.5rem}}";

const Level0 = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.navigationLoaded = index.createEvent(this, "navigationLoaded", 7);
    this.operationPipeline = [];
    this.logoLoaded = false;
    this.drawerTimeout = new timeout.Timeout(20000);
    this.locale = undefined;
    this.breakpoint = undefined;
    this.loadingContent = false;
    this.receivedContent = false;
    this.theme = helper.NavigationTheme.light;
    this.mode = helper.NavigationMode.navbar;
    this.app = helper.Application.default;
    this.displayLogoOnly = false;
    this.limitedWidth = false;
    this.usingKeyboard = false;
    this.scrolledPastHeader = false;
    this.showBackdrop = false;
    this.routingKeyHistory = [];
    this.routingKeyPointer = routingKey.RoutingKeyPointers.LEVEL_ZERO;
    this.isNavigationLoaded = false;
    this.isLoading = false;
    this.isMyPorscheHoveredOn = false;
  }
  loadingContentWatcher() {
    this.setNavigationLoaded();
  }
  breakpointWatcher(newBreakpoint, oldBreakpoint) {
    this.updateRoutingKeyPointerOfMobileLevel1();
    this.setNavigationLoaded();
    this.handleResizeAnimation(newBreakpoint, oldBreakpoint);
  }
  handleResizeAnimation(newBreakpoint, oldBreakpoint) {
    const didDrawerModeChange = (helper.isDesktop(newBreakpoint) && !helper.isDesktop(oldBreakpoint)) ||
      (!helper.isDesktop(newBreakpoint) && helper.isDesktop(oldBreakpoint));
    if (routingManager.isOpened() && didDrawerModeChange) {
      if (helper.isDesktop(this.breakpoint)) {
        this.operationPipeline.push(() => {
          animationManager.animationManager.play(animations.AnimationSequences.OPEN_DOUBLE_DRAWER);
        });
      }
    }
  }
  receivedContentWatcher() {
    this.setNavigationLoaded();
  }
  logoLoadedHandler() {
    this.logoLoaded = true;
    this.setNavigationLoaded();
  }
  scrollHandler() {
    this.scrolledPastHeader = this.el.getBoundingClientRect().bottom <= 0;
  }
  handleKeyDown(e) {
    if (e.key === 'Escape' && !routingManager.isClosed()) {
      this.usingKeyboard = true;
      navContentStore.navStateStore.state.usingKeyboard = true;
      this.handleClickDrawerHeaderClose();
      return;
    }
  }
  handleClick(e) {
    this.usingKeyboard = helper.IsKeyboardClick(e);
    navContentStore.navStateStore.state.usingKeyboard = helper.IsKeyboardClick(e);
  }
  handleMobileMenuItemClick({ detail: newRoutingKeys }) {
    this.routingKeyHistory = [...this.routingKeyHistory.slice(0, this.routingKeyPointer + 1), ...newRoutingKeys];
    this.routingKeyPointer = this.routingKeyPointer + newRoutingKeys.length;
  }
  handleSideDrawerItemClick({ detail: routingKeys }) {
    this.routingKeyHistory = [...this.routingKeyHistory.slice(0, this.routingKeyPointer), ...routingKeys];
    if (routingKeys.length > 0) {
      this.routingKeyPointer = this.routingKeyPointer + routingKeys.length - 1;
    }
    this.updateRouterStore();
  }
  handleClickDrawerHeaderBack() {
    this.routingKeyPointer = this.routingKeyPointer - 1;
  }
  handleClickDrawerHeaderClose() {
    if (doubleDrawerAnimationSequences.isPlayingDoubleDrawerAnimation()) {
      return;
    }
    this.routingKeyPointer = -1;
    if (helper.isDesktop(this.breakpoint)) {
      animationManager.animationManager.play(animations.AnimationSequences.CLOSE_DOUBLE_DRAWER).then(() => {
        this.handleDrawerClosed();
        this.updateRouterStore();
      });
    }
    else {
      routingManager.reset();
    }
  }
  handleBackdropClosed() {
    this.showBackdrop = false;
  }
  handleDrawerChanged({ detail: isNavigatingBackwards }) {
    const activeRoutingKey = isNavigatingBackwards
      ? this.routingKeyHistory[this.routingKeyPointer + 1]
      : this.routingKeyHistory[this.routingKeyPointer];
    const topLevelRoutingKey = routingKey.findTopLevelRoutingKey(activeRoutingKey !== null && activeRoutingKey !== void 0 ? activeRoutingKey : '');
    if (topLevelRoutingKey !== routingKey.RoutingKeys.DEALER_SEARCH || topLevelRoutingKey === activeRoutingKey) {
      return;
    }
    if (isNavigatingBackwards) {
      dealerSearchResultsStore.dealerSearchResultsStore.state.savedDealerCookie = null;
      return;
    }
    const dealerId = routingKey.getLastRoutingSegment(activeRoutingKey);
    const { ppnDealer: savedDealer } = dealerSearchResultsStore.dealerSearchResultsStore.state.ppnDealers[dealerId] || {};
    if (savedDealer !== undefined) {
      dealerSearchResultsStore.dealerSearchResultsStore.state.savedDealerCookie = {
        id: savedDealer.id,
        latitude: savedDealer.coordinates.latitude,
        longitude: savedDealer.coordinates.longitude
      };
    }
  }
  async handleOpenDrawer(event) {
    await this.openDrawer(event.detail);
  }
  updateRouterStore() {
    routerStore.routerStore.set('routingKeyPointer', this.routingKeyPointer);
    routerStore.routerStore.set('routingKeyHistory', this.routingKeyHistory);
  }
  handleDrawerClosed() {
    if (this.usingKeyboard) {
      helper.focusOnElement(this.el.querySelector('phn-burger-button phn-p-button-pure'));
    }
  }
  updateRoutingKeyPointerOfMobileLevel1() {
    if (this.routingKeyPointer === routingKey.RoutingKeyPointers.LEVEL_ONE) {
      this.routingKeyPointer = helper.isDesktop(this.breakpoint) ? routingKey.RoutingKeyPointers.LEVEL_TWO : routingKey.RoutingKeyPointers.LEVEL_ONE;
    }
  }
  setNavigationLoaded() {
    this.isNavigationLoaded = !this.loadingContent && this.logoLoaded;
    this.navigationLoaded.emit(this.isNavigationLoaded);
  }
  setInitialRoutingProperties(initialRoutingKey) {
    if (helper.isString(initialRoutingKey)) {
      this.setRoutingProperties([initialRoutingKey]);
    }
    else if (routerStore.routerStore.state.initialRoutingKeyHistory !== null) {
      this.setRoutingProperties(routerStore.routerStore.state.initialRoutingKeyHistory);
    }
    else {
      this.setRoutingProperties([routingKey.RoutingKeys.MODELS]);
    }
  }
  async openDrawer(routingKeyWithClick) {
    const { initialRoutingKey, isKeyboardClick } = routingKeyWithClick;
    this.isLoading = true;
    this.usingKeyboard = isKeyboardClick;
    navContentStore.navStateStore.state.usingKeyboard = isKeyboardClick;
    this.setInitialRoutingProperties(initialRoutingKey);
    await ready.componentsOnReady(this.el, this.drawerTimeout, '.drawer', 'phn-backdrop');
    this.isLoading = false;
    if (helper.isDesktop(this.breakpoint)) {
      this.operationPipeline.push(() => {
        animationManager.animationManager.play(animations.AnimationSequences.OPEN_DOUBLE_DRAWER);
      });
    }
  }
  isDefaultRouteOnMobile() {
    return (!helper.isDesktop(this.breakpoint) &&
      routerStore.routerStore.state.initialRoutingKeyHistory === null &&
      this.routingKeyHistory.length === 2 &&
      this.routingKeyHistory[1] === routingKey.RoutingKeys.MODELS);
  }
  setRoutingProperties(initialRoutingKeys) {
    this.routingKeyHistory = [routingKey.RoutingKeys.MAIN_MENU, ...initialRoutingKeys];
    this.routingKeyPointer = helper.isDesktop(this.breakpoint) ? routingKey.RoutingKeyPointers.LEVEL_TWO : routingKey.RoutingKeyPointers.LEVEL_ONE;
    if (!this.isDefaultRouteOnMobile()) {
      this.routingKeyPointer = this.routingKeyHistory.length - 1;
    }
    this.updateRouterStore();
  }
  disconnectedCallback() {
    this.drawerTimeout.cancel();
  }
  async componentDidRender() {
    const promises = [];
    for (const operation of this.operationPipeline) {
      const maybePromise = operation();
      if (helper.isPromise(maybePromise)) {
        promises.push(maybePromise);
      }
    }
    await Promise.all(promises);
    this.operationPipeline.splice(0, this.operationPipeline.length);
  }
  getLogoSize() {
    return this.breakpoint >= helper.breakpoint.m ? 'medium' : 'small';
  }
  render() {
    return (index.h(index.Host, { class: `${helper.constructThemeClass(this.mode, this.theme)}-theme themed-background` }, index.h("header", { class: this.limitedWidth ? 'limited-width' : '' }, routingManager.isOpened() || routingManager.isOpening() ? (index.h("phn-backdrop", { style: this.isLoading ? { display: 'none' } : {} })) : null, index.h("div", { class: "level-0-content" }, !this.displayLogoOnly ? (index.h("div", { class: "level-0-content-icons" }, index.h("phn-level-0-icons", { locale: this.locale, theme: this.theme, mode: this.mode, app: this.app, breakpoint: this.breakpoint, isLoading: this.isLoading, isNavigationLoaded: this.isNavigationLoaded }, index.h("div", { class: "level-0-content-logo" }, index.h("phn-logo", { app: this.app, locale: this.locale, theme: this.theme, mode: this.mode, size: this.getLogoSize(), breakpoint: this.breakpoint, style: this.isNavigationLoaded ? {} : { display: 'none' } }), !this.isNavigationLoaded ? (index.h("div", { class: "crest-skeleton skeleton-container" }, this.breakpoint > helper.breakpoint.xs ? index.h("span", { class: "label-bone" }) : index.h("span", { class: "crest-bone" }))) : null)), shopHelper.isShopAvailable(this.locale, this.app) ? (index.h("contextual-drawer", null, index.h("div", { slot: "contextual_drawer_header" }, index.h("slot", { name: "contextual_drawer_header" })))) : null)) : (index.h("div", { class: "level-0-content-logo" }, index.h("phn-logo", { app: this.app, locale: this.locale, theme: this.theme, mode: this.mode, size: this.getLogoSize(), breakpoint: this.breakpoint, style: this.isNavigationLoaded ? {} : { display: 'none' } }), !this.isNavigationLoaded ? (index.h("div", { class: "crest-skeleton skeleton-container" }, this.breakpoint > helper.breakpoint.xs ? index.h("span", { class: "label-bone" }) : index.h("span", { class: "crest-bone" }))) : null)))), !routingManager.isClosed() ? (helper.isDesktop(this.breakpoint) ? (index.h("phn-double-drawer", { class: "drawer", style: this.isLoading ? { display: 'none' } : {}, routingKeyHistory: this.routingKeyHistory, routingKeyPointer: this.routingKeyPointer, breakpoint: this.breakpoint, initialUsingKeyboard: this.usingKeyboard, locale: this.locale, receivedContent: this.receivedContent })) : (index.h("phn-single-drawer", { class: "drawer", style: this.isLoading ? { display: 'none' } : {}, breakpoint: this.breakpoint, usingKeyboard: this.usingKeyboard, locale: this.locale, receivedContent: this.receivedContent }))) : null));
  }
  get el() { return index.getElement(this); }
  static get watchers() { return {
    "loadingContent": ["loadingContentWatcher"],
    "breakpoint": ["breakpointWatcher"],
    "receivedContent": ["receivedContentWatcher"]
  }; }
};
Level0.style = level0Css;

const wrapperCss = "@-webkit-keyframes transition-forward-in-animation{from{left:150%}to{left:0%}}@keyframes transition-forward-in-animation{from{left:150%}to{left:0%}}@-webkit-keyframes transition-backward-in-animation{from{left:-150%}to{left:0%}}@keyframes transition-backward-in-animation{from{left:-150%}to{left:0%}}@-webkit-keyframes single-drawer-transition-forward-in-animation{from{left:100%}to{left:0%}}@keyframes single-drawer-transition-forward-in-animation{from{left:100%}to{left:0%}}@-webkit-keyframes fade-in-animation{from{opacity:0;background-color:rgba(0, 0, 0, 0)}to{opacity:1;background-color:rgba(0, 0, 0, 0.6)}}@keyframes fade-in-animation{from{opacity:0;background-color:rgba(0, 0, 0, 0)}to{opacity:1;background-color:rgba(0, 0, 0, 0.6)}}@-webkit-keyframes slide-in-from-left-absolute{from{left:-1000px}to{left:0px}}@keyframes slide-in-from-left-absolute{from{left:-1000px}to{left:0px}}@-webkit-keyframes slideDown{from{max-height:0}to{max-height:1000px}}@keyframes slideDown{from{max-height:0}to{max-height:1000px}}@-webkit-keyframes slideUp{from{max-height:1000px}to{max-height:0}}@keyframes slideUp{from{max-height:1000px}to{max-height:0}}@-webkit-keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@-webkit-keyframes slideRight{from{max-width:1000px}to{max-width:0}}@keyframes slideRight{from{max-width:1000px}to{max-width:0}}@-webkit-keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@-webkit-keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@-webkit-keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@-webkit-keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@-webkit-keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@-webkit-keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes fadeOut{0%{opacity:1}100%{opacity:0}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}.transition-forward-animation-out.sc-phn-wrapper{-webkit-transition:left 250ms;transition:left 250ms;position:relative !important;left:-150% !important}.transition-forward-animation-in.sc-phn-wrapper{position:relative;-webkit-animation:transition-forward-in-animation 250ms;animation:transition-forward-in-animation 250ms}.transition-backward-animation-out.sc-phn-wrapper{-webkit-transition:left 250ms;transition:left 250ms;position:relative !important;left:150% !important}.transition-backward-animation-in.sc-phn-wrapper{position:relative !important;-webkit-animation:transition-backward-in-animation 250ms;animation:transition-backward-in-animation 250ms}.slide-out-to-right-fixed.sc-phn-wrapper{-webkit-transition:left 400ms;transition:left 400ms;position:fixed;left:100% !important}.slide-in-from-right-fixed.sc-phn-wrapper{position:fixed;-webkit-animation:single-drawer-transition-forward-in-animation 400ms;animation:single-drawer-transition-forward-in-animation 400ms}.phn-flex-col.sc-phn-wrapper{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.phn-flex-row.sc-phn-wrapper{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}.phn-align-center.sc-phn-wrapper{-ms-flex-align:center;align-items:center}.phn-justify-around.sc-phn-wrapper{-ms-flex-pack:distribute;justify-content:space-around}.phn-justify-between.sc-phn-wrapper{-ms-flex-pack:justify;justify-content:space-between}.phn-flex-wrap.sc-phn-wrapper{-ms-flex-wrap:wrap;flex-wrap:wrap}.sc-phn-wrapper-h{display:block}.sc-phn-wrapper-h .limit-stretch.sc-phn-wrapper{-webkit-box-sizing:content-box;box-sizing:content-box;margin:0 0.5vw}.sc-phn-wrapper-h .preview-badge.sc-phn-wrapper{display:block;position:absolute;top:0;right:0;background-color:#cc1922;z-index:9999;padding:0 0.125rem}.sc-phn-wrapper-h .main-content.sc-phn-wrapper{width:20px}.sc-phn-wrapper-h .main-content.sc-phn-wrapper:focus{outline-style:none}.sc-phn-wrapper-h .screenreader-only.sc-phn-wrapper{position:absolute;width:1px;height:1px;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}";

const Wrapper = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.locale = undefined;
    this.breakpoint = undefined;
    this.loadingContent = false;
    this.receivedContent = false;
    this.theme = helper.NavigationTheme.light;
    this.mode = helper.NavigationMode.navbar;
    this.app = helper.Application.default;
    this.displayLogoOnly = false;
    this.limitedWidth = false;
    this.showCountryRecommender = featureToggles.windowService.redirected;
    this.countryRecommenderClosed = false;
  }
  componentWillLoad() {
    this.el.style.setProperty('--scrollbar-width', featureToggles.windowService.getScrollbarWidth());
    helper.loadRootElement(this.el);
    animationManager.animationManager.initialize();
  }
  render() {
    const countryRecommenderContent = navContentStore.navContentStore.state.countryRecommender;
    const showCountryRecommender = this.showCountryRecommender && !this.countryRecommenderClosed && !this.loadingContent && this.receivedContent;
    const accessibilityStatement = navContentStore.navContentStore.state.accessibilityStatement;
    return (index.h(index.Host, null, navContentStore.navStateStore.state.env === navContentStore.Environments.PREVIEW ? (index.h("phn-p-text", { theme: "dark", size: "x-small", class: "preview-badge" }, "Header v", helper.VERSION, " - PP content")) : null, showCountryRecommender ? (index.h("phn-country-recommender", { locale: this.locale, content: countryRecommenderContent, role: "region", "aria-label": "Change recommended Region or Language", onBannerClosed: () => {
        this.countryRecommenderClosed = true;
      } })) : null, this.locale === 'en-US' && accessibilityStatement !== null ? (index.h("a", { class: "screenreader-only", href: accessibilityStatement.link }, accessibilityStatement.text)) : null, index.h("phn-level-0", { theme: this.theme, mode: this.mode, locale: this.locale, loadingContent: this.loadingContent, receivedContent: this.receivedContent, breakpoint: this.breakpoint, app: this.app, displayLogoOnly: this.displayLogoOnly, limitedWidth: this.limitedWidth }, shopHelper.isShopAvailable(this.locale, this.app) ? (index.h("div", { slot: "contextual_drawer_header" }, index.h("slot", { name: "contextual_drawer_header" }))) : null), index.h("div", { id: "main", class: "main-content", onBlur: (e) => {
        const el = helper.getHTMLElement(e.currentTarget);
        if (el !== null) {
          el.removeAttribute('tabIndex');
        }
      } })));
  }
  get el() { return index.getElement(this); }
};
Wrapper.style = wrapperCss;

exports.phn_header = Header;
exports.phn_level_0 = Level0;
exports.phn_wrapper = Wrapper;

//# sourceMappingURL=phn-header_3.cjs.entry.js.map