{"file":"phn-burger-button.phn-my-porsche-icon-button.entry.cjs.js","mappings":";;;;;;;;;;AAAA,MAAM,eAAe,GAAG,ugQAAugQ;;MCmBlhQ,YAAY;;;;;qBAGH,KAAK;iBACYA,sBAAe,CAAC,KAAK;gBACvBC,qBAAc,CAAC,MAAM;;EAEhD,kBAAkB,CAAC,IAAa;IACtCC,6CAAsB,CAAC,kBAAkB,CAACC,4BAAY,CAAC,UAAU,EAAE;MACjE,cAAc,EAAE;QACd,cAAc,EAAE,IAAI,CAAC,EAAE;QACvB,gBAAgB,EAAE,IAAI,CAAC,IAAI;QAC3B,aAAa,EAAE,eAAe;QAC9B,gBAAgB,EAAEC,iCAAiB,CAAC,MAAM;OAC3C;KACF,CAAC,CAAC;GACJ;EAED,MAAM;IACJ,MAAM,EAAE,IAAI,EAAE,GAAGC,+BAAe,CAAC,KAAK,CAAC;IAEvC,QACEC,QAACC,UAAI,IAAC,KAAK,EAAE,GAAGC,0BAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,IAChEF,+BACE,KAAK,EAAEG,oBAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,EAC3C,OAAO,EAAE,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAC5C,IAAI,EAAE,EAAE,eAAe,EAAE,QAAQ,EAAE,YAAY,EAAE,eAAe,EAAE,iBACrD,IAAI,CAAC,UAAU,EAC5B,IAAI,EAAC,YAAY,EACjB,OAAO,EAAE,IAAI,CAAC,SAAS,EACvB,IAAI,EAAC,SAAS,EACd,SAAS,EAAE,IAAI,CAAC,SAAS,IAExB,IAAI,CAAC,IAAI,CACQ,CACf,EACP;GACH;;;;ACxDH,MAAM,sBAAsB,GAAG,qxJAAqxJ;;MCmBvyJ,mBAAmB;;;gBACKR,qBAAc,CAAC,MAAM;iBACnBD,sBAAe,CAAC,KAAK;gCAE1B,KAAK;;EAE7B,kBAAkB;IACxBE,6CAAsB,CAAC,kBAAkB,CAACC,4BAAY,CAAC,uBAAuB,EAAE;MAC9E,cAAc,EAAE;QACd,cAAc,EAAEO,sBAAW,CAAC,UAAU;QACtC,gBAAgB,EAAE,0BAA0B;QAC5C,gBAAgB,EAAEN,iCAAiB,CAAC,MAAM;OAC3C;KACF,CAAC,CAAC;GACJ;EAED,MAAM;IACJ,MAAM,EAAE,mBAAmB,EAAE,aAAa,EAAE,GAAGO,6BAAa,CAAC,KAAK,CAAC;IACnE,MAAM,UAAU,GAAGC,iBAAU,CAAC,aAAa,CAAC,CAAC;IAE7C,QACEN,QAACC,UAAI,QACHD,+BACE,IAAI,EAAE,OAAO,UAAU,GAAG,SAAS,GAAG,EAAE,EAAE,gBAC/B,MAAM,EACjB,OAAO,EAAC,MAAM,aACL,GAAGI,sBAAW,CAAC,UAAU,oBAAoB,EACtD,IAAI,EAAC,0EAA0E,kBAClE,kBAAkB,EAC/B,KAAK,EAAED,oBAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,EAC3C,YAAY,EAAE;QACZ,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;OAClC,EACD,YAAY,EAAE;QACZ,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;OACnC,EACD,OAAO,EAAE;QACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;OAC3B,GACD,EACD,mBAAmB,GAAG,CAAC,IACtBH,kBACE,KAAK,EAAE,uCAAuC,IAAI,CAAC,IAAI,KAAK,MAAM,GAAG,IAAI,CAAC,KAAK,GAAGN,sBAAe,CAAC,KAAK,EAAE,GACzG,IACA,IAAI,CACH,EACP;GACH;;;;;;;","names":["NavigationTheme","NavigationMode","globalDataLayerService","EventActions","ClickElementTypes","navContentStore","h","Host","constructThemeClass","getRightTheme","RoutingKeys","navStateStore","IsLoggedIn"],"sources":["src/components/burger-button/burger-button.scss?tag=phn-burger-button&encapsulation=scoped","src/components/burger-button/burger-button.tsx","src/components/my-porsche-icon-button/my-porsche-icon-button.scss?tag=phn-my-porsche-icon-button&encapsulation=scoped","src/components/my-porsche-icon-button/my-porsche-icon-button.tsx"],"sourcesContent":["@import '../../scss';\n\n:host {\n  display: block;\n  position: relative;\n  @include apply-themes();\n\n  phn-p-button-pure {\n    font-size: p-px-to-rem(16px);\n    margin: p-px-to-rem(6px);\n\n    @include pds-media-query-min('s') {\n      font-size: p-px-to-rem(16px);\n      margin: p-px-to-rem(8px);\n    }\n\n    @include pds-media-query-min('m') {\n      font-size: p-px-to-rem(16px);\n    }\n  }\n}\n","import { Component, h, Host, JSX, Prop } from '@stencil/core';\nimport { TButton } from '../../entities/content';\nimport globalDataLayerService from '../../services/analytics/global-data-layer-service';\nimport { navContentStore } from '../../state/nav-content-store';\nimport {\n  ClickElementTypes,\n  EventActions,\n  NavigationMode,\n  NavigationModeType,\n  NavigationTheme,\n  NavigationThemeType\n} from '../../utility/constants';\nimport { constructThemeClass, getRightTheme } from '../../utility/helper';\n\n@Component({\n  tag: 'phn-burger-button',\n  styleUrl: 'burger-button.scss',\n  scoped: true\n})\nexport class BurgerButton {\n  @Prop() hideLabel!: boolean;\n  @Prop() alignLabel!: string;\n  @Prop() isLoading = false;\n  @Prop() theme: NavigationThemeType = NavigationTheme.light;\n  @Prop() mode: NavigationModeType = NavigationMode.navbar;\n\n  private sendDataLayerEvent(menu: TButton) {\n    globalDataLayerService.pushDataLayerEvent(EventActions.MORE_CLICK, {\n      componentClick: {\n        clickElementId: menu.id,\n        clickElementName: menu.text,\n        targetElement: 'level1_drawer',\n        clickElementType: ClickElementTypes.Button\n      }\n    });\n  }\n\n  render(): JSX.Element {\n    const { menu } = navContentStore.state;\n\n    return (\n      <Host class={`${constructThemeClass(this.mode, this.theme)}-theme`}>\n        <phn-p-button-pure\n          theme={getRightTheme(this.theme, this.mode)}\n          onClick={() => this.sendDataLayerEvent(menu)}\n          aria={{ 'aria-haspopup': 'dialog', 'aria-label': 'open the menu' }}\n          align-label={this.alignLabel}\n          icon=\"menu-lines\"\n          loading={this.isLoading}\n          size=\"inherit\"\n          hideLabel={this.hideLabel}\n        >\n          {menu.text}\n        </phn-p-button-pure>\n      </Host>\n    );\n  }\n}\n","@import '../../scss';\n\n:host {\n\n  phn-p-button-pure {\n    position: relative;\n    display: inline-block;\n    vertical-align: top;\n    outline: 0px !important;\n  }\n\n  .myporsche-unread-messages-indicator {\n    position: absolute;\n    width: p-px-to-rem(6px);\n    height: p-px-to-rem(6px);\n    border-radius: 50%;\n\n    &.light{\n      background-color: $pds-theme-light-notification-info;\n    }\n\n    &.dark{\n      background-color: $pds-theme-light-notification-info-soft;\n    }\n  }\n}\n","import { Component, Host, h, Prop, State, JSX } from '@stencil/core';\nimport { RoutingKeys } from '../../entities/routing-key';\nimport {\n  ClickElementTypes,\n  EventActions,\n  NavigationMode,\n  NavigationModeType,\n  NavigationTheme,\n  NavigationThemeType\n} from '../../utility/constants';\nimport { getRightTheme, IsLoggedIn } from '../../utility/helper';\nimport { navStateStore } from '../../state/nav-state-store';\nimport globalDataLayerService from '../../services/analytics/global-data-layer-service';\n\n@Component({\n  tag: 'phn-my-porsche-icon-button',\n  styleUrl: 'my-porsche-icon-button.scss',\n  scoped: true\n})\nexport class MyPorscheIconButton {\n  @Prop() mode: NavigationModeType = NavigationMode.navbar;\n  @Prop() theme: NavigationThemeType = NavigationTheme.light;\n\n  @State() isMyPorscheHoveredOn = false;\n\n  private sendDataLayerEvent() {\n    globalDataLayerService.pushDataLayerEvent(EventActions.CONTEXTUAL_BUTTON_CLICK, {\n      componentClick: {\n        clickElementId: RoutingKeys.MY_PORSCHE,\n        clickElementName: 'open the my porsche menu',\n        clickElementType: ClickElementTypes.Button\n      }\n    });\n  }\n\n  render(): JSX.Element {\n    const { unreadMessagesCount, loggedInState } = navStateStore.state;\n    const isLoggedIn = IsLoggedIn(loggedInState);\n\n    return (\n      <Host>\n        <phn-p-button-pure\n          icon={`user${isLoggedIn ? '-filled' : ''}`}\n          hide-label=\"true\"\n          stretch=\"true\"\n          data-id={`${RoutingKeys.MY_PORSCHE}-contextual-button`}\n          aria=\"{ 'aria-haspopup': 'dialog', 'aria-label' : 'open the my porsche menu' }\"\n          data-test-id=\"myporsche-button\"\n          theme={getRightTheme(this.theme, this.mode)}\n          onMouseEnter={() => {\n            this.isMyPorscheHoveredOn = true;\n          }}\n          onMouseLeave={() => {\n            this.isMyPorscheHoveredOn = false;\n          }}\n          onClick={() => {\n            this.sendDataLayerEvent();\n          }}\n        />\n        {unreadMessagesCount > 0 ? (\n          <span\n            class={`myporsche-unread-messages-indicator ${this.mode === 'hero' ? this.theme : NavigationTheme.light}`}\n          />\n        ) : null}\n      </Host>\n    );\n  }\n}\n"],"version":3}