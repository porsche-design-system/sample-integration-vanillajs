'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-947214e4.js');
const analyticsManager = require('./analytics-manager-c01a9024.js');
const globalDataLayerService = require('./global-data-layer-service-a697b177.js');
const windowService = require('./window-service-c9a19f26.js');
const navContentStore = require('./nav-content-store-792bb73e.js');
require('./routing-key-39c28377.js');
require('./navi-error-3887a972.js');
require('./router-store-96589d10.js');
require('./menu-items-service-e380c308.js');
require('./ab-testing-constructor-service-c7ed262c.js');
require('./feature-toggles-e81741ab.js');

const backdropCss = "@-webkit-keyframes slideDown{from{max-height:0}to{max-height:1000px}}@keyframes slideDown{from{max-height:0}to{max-height:1000px}}@-webkit-keyframes slideUp{from{max-height:1000px}to{max-height:0}}@keyframes slideUp{from{max-height:1000px}to{max-height:0}}@-webkit-keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@keyframes slideLeft{from{max-width:0}to{max-width:1000px}}@-webkit-keyframes slideRight{from{max-width:1000px}to{max-width:0}}@keyframes slideRight{from{max-width:1000px}to{max-width:0}}@-webkit-keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@keyframes darken{from{background-color:rgba(0, 0, 0, 0)}to{background-color:rgba(0, 0, 0, 0.8)}}@-webkit-keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@keyframes lighten{from{background-color:rgba(0, 0, 0, 0.8)}to{background-color:rgba(0, 0, 0, 0)}}@-webkit-keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@keyframes fadeInFromBottom{0%{opacity:0;top:36px}100%{opacity:1;top:0px}}@-webkit-keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@keyframes fadeOutToTop{0%{opacity:1;bottom:0px}100%{opacity:0;bottom:16px}}@-webkit-keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@keyframes slideLeftDoubleDrawer{from{right:-1000px}to{right:0px}}@-webkit-keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@keyframes slideRightDoubleDrawer{from{right:0px}to{right:-1000px}}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes fadeOut{0%{opacity:1}100%{opacity:0}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}.phn-flex-col.sc-phn-backdrop{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.phn-flex-row.sc-phn-backdrop{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}.phn-align-center.sc-phn-backdrop{-ms-flex-align:center;align-items:center}.phn-justify-around.sc-phn-backdrop{-ms-flex-pack:distribute;justify-content:space-around}.phn-justify-between.sc-phn-backdrop{-ms-flex-pack:justify;justify-content:space-between}.phn-flex-wrap.sc-phn-backdrop{-ms-flex-wrap:wrap;flex-wrap:wrap}.sc-phn-backdrop-h{position:fixed;z-index:300;top:0;left:0;right:0;bottom:0;background-color:rgba(0, 0, 0, 0.6);cursor:pointer;backdrop-filter:blur(32px);-webkit-backdrop-filter:blur(32px)}";

const Backdrop = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.clickDrawerHeaderClose = index.createEvent(this, "clickDrawerHeaderClose", 7);
    this.backdropClosed = index.createEvent(this, "backdropClosed", 7);
    this.activeRoutingKey = undefined;
  }
  handleClick() {
    this.sendDataAnalyticsEvent();
    this.clickDrawerHeaderClose.emit();
  }
  sendDataAnalyticsEvent() {
    analyticsManager.analyticsManager.setDrawerType(navContentStore.DisplayElementTypes.DoubleDrawer);
    globalDataLayerService.globalDataLayerService.pushDataLayerEvent(navContentStore.EventActions.MENU_CLOSE_CLICK, {
      componentClick: {
        clickElementId: 'mainmenu.drawer.close',
        clickElementName: 'backdrop',
        clickElementType: navContentStore.ClickElementTypes.Button,
        targetElement: 'level-0'
      },
      componentDisplay: {
        displayElementType: analyticsManager.analyticsManager.calculateDisplayElementType(this.activeRoutingKey, navContentStore.ElementTypes.backdrop),
        displayElementId: analyticsManager.analyticsManager.calculateDisplayElementId(),
        displayElementName: 'Double Drawer'
      }
    });
  }
  componentWillLoad() {
    if (windowService.windowService.hasScrollbar()) {
      windowService.windowService.lockScroll();
    }
  }
  disconnectedCallback() {
    if (windowService.windowService.hasScrollbar()) {
      windowService.windowService.unlockScroll();
    }
  }
  render() {
    return index.h(index.Host, null);
  }
  get el() { return index.getElement(this); }
};
Backdrop.style = backdropCss;

exports.phn_backdrop = Backdrop;

//# sourceMappingURL=phn-backdrop.cjs.entry.js.map