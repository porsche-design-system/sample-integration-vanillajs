{"file":"phn-country-recommender.entry.cjs.js","mappings":"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","names":["getConfig","navStateStore","getFlagURL","globalDataLayerService","EventActions","ClickElementTypes","getHTMLElement","h","Host","isString"],"sources":["src/components/country-recommender/country-recommender.scss?tag=phn-country-recommender&encapsulation=scoped","src/components/country-recommender/country-recommender.tsx"],"sourcesContent":["@import '../../scss';\n\n:host {\n  display: block;\n  @include apply-themes();\n  background-color: $pds-theme-light-primary;\n  width: 100%;\n  overflow: hidden;\n  color: white;\n  line-height: p-px-to-rem(20px);\n  border-bottom: 1PX solid #E3E4E5;\n  font-size: p-px-to-rem(12px);\n\n\n  &.showing {\n    animation: slideDown 1s ease-in-out 0s;\n  }\n\n  &.hiding {\n    animation: slideUp 1s ease-in-out 0s;\n  }\n\n  @include pds-media-query-min('s') {\n    font-size: p-px-to-rem(14px);\n  }\n\n  @include pds-media-query-min('xl') {\n    font-size: p-px-to-rem(16px);\n  }\n\n  phn-p-button-pure, phn-p-link-pure {\n    height: fit-content;\n  }\n\n  .country-recommender-container {\n    @include pds-grid;\n\n\n\n    font-family: $pds-font-family;\n    font-weight: $pds-font-weight-regular;\n    color: $pds-theme-light-background-base;\n\n    .country-recommender {\n      font-family: $pds-font-family;\n      font-weight: $pds-font-weight-regular;\n      color: $pds-theme-light-background-base;\n\n      overflow: hidden;\n\n      display: flex;\n      align-items: center;\n      position: relative;\n      grid-column: wide-start/wide-end;\n      @include limit-stretch();\n      padding-top: p-px-to-rem(26px);\n      padding-bottom: p-px-to-rem(10px);\n\n      .country-recommender-icons-tray {\n        display: grid;\n        grid-template-columns: 4fr 1fr;\n        grid-template-rows: 1fr;\n        gap: 0px 0px;\n        grid-template-areas: \"left  right\";\n        width: 100%;\n\n        div.left-icons,\n        div.right-icons {\n          display: flex;\n          flex-direction: row;\n        }\n\n        div.left-icons {\n          grid-area: left;\n          flex-wrap: wrap;\n        }\n\n        div.right-icons {\n          display: flex;\n          flex-direction: row;\n          justify-self: end;\n          grid-area: right;\n        }\n\n\n        .statement {\n          order: 0;\n          padding-top: p-px-to-rem(2px);\n          padding-right: p-px-to-rem(8px);\n\n          @include pds-media-query-max('s') {\n            padding-bottom: p-px-to-rem(17px);\n          }\n          @include pds-media-query-max('xs') {\n            padding-bottom: p-px-to-rem(17px);\n          }\n          @include pds-media-query-min-max('base', 'xs') {\n           padding-bottom: p-px-to-rem(10px);\n          }\n        }\n\n        .flag {\n          margin-right: p-px-to-rem(8px);\n          max-height: p-px-to-rem(24px);\n          width: p-px-to-rem(20px);\n          height: p-px-to-rem(20px);\n          border-radius: 100%;\n          border: 1px solid $pds-theme-light-contrast-medium;\n          background-color: $pds-theme-light-contrast-medium;\n\n          @include pds-media-query-min('m') {\n            width: p-px-to-rem(22px);\n            height: p-px-to-rem(22px);\n          }\n        }\n\n        .flag-region {\n          display: flex;\n        }\n\n        .language {\n          padding-right: p-px-to-rem(24px);\n          padding-top: p-px-to-rem(2px);\n          padding-bottom: p-px-to-rem(16px);\n        }\n\n        .selector {\n          display: inline-flex;\n          order: 2;\n          width: 100%;\n\n          @include pds-media-query-min('s') {\n            order: 1;\n            width: auto;\n          }\n        }\n\n        .change {\n          padding-top: p-px-to-rem(2px);\n          margin-bottom: p-px-to-rem(16px);\n        }\n\n        .close-button {\n          grid-area: right;\n          margin-left: auto;\n          order: 1;\n          font-size: p-px-to-rem(6px);\n\n          @include pds-media-query-min('s') {\n            order: 2;\n          }\n        }\n      }\n    }\n  }\n}\n\n\n","import { Component, Element, Event, EventEmitter, h, Host, Listen, Prop, State, Watch } from '@stencil/core';\nimport { TCountryRecommender } from '../../entities/content';\nimport { getFlagURL } from '../../services/content-service';\nimport globalDataLayerService from '../../services/analytics/global-data-layer-service';\nimport { navStateStore } from '../../state/nav-state-store';\nimport { ClickElementTypes, EventActions } from '../../utility/constants';\nimport { getConfig, getHTMLElement, isString } from '../../utility/helper';\n\n@Component({\n  tag: 'phn-country-recommender',\n  styleUrl: 'country-recommender.scss',\n  scoped: true\n})\nexport class CountryRecommender {\n  @Prop() locale!: string;\n  @Prop() content!: TCountryRecommender;\n\n  @State() flagURL = '';\n\n  @Element() el!: HTMLPhnCountryRecommenderElement;\n\n  @Event() bannerClosed!: EventEmitter<void>;\n\n  @Watch('locale')\n  async localeWatcher(): Promise<void> {\n    await this.setFlagURL();\n  }\n\n  private async setFlagURL() {\n    const footerAssetsUrl = getConfig(navStateStore.state.env).FOOTER_ASSETS_URL;\n    this.flagURL = await getFlagURL(footerAssetsUrl, this.locale);\n  }\n\n  private closeCountryRecommender(): void {\n    globalDataLayerService.pushDataLayerEvent(EventActions.COUNTRY_RECOMMENDER_CLOSE, {\n      componentClick: {\n        clickElementId: 'mainmenu.banner.close',\n        clickElementName: 'close',\n        clickElementType: ClickElementTypes.Button\n      }\n    });\n\n    this.el.classList.remove('showing');\n    this.el.classList.add('hiding');\n  }\n\n  componentWillLoad(): void {\n    this.setFlagURL();\n  }\n\n  componentDidLoad(): void {\n    globalDataLayerService.pushDataLayerEvent(EventActions.COUNTRY_RECOMMENDER_LOAD, {\n      componentClick: {\n        clickElementId: 'mainmenu.banner',\n        clickElementName: 'Country Recommender',\n        clickElementType: ClickElementTypes.Link\n      }\n    });\n  }\n\n  @Listen('animationend', { passive: true })\n  handleAnimationEnd(e: AnimationEvent): void {\n    if (e.animationName === 'slideUp') {\n      getHTMLElement(e.target)?.classList.remove('hiding');\n      this.bannerClosed.emit();\n    } else if (e.animationName === 'slideDown') {\n      getHTMLElement(e.target)?.classList.remove('showing');\n    }\n  }\n\n  private sendDataLayerEvent() {\n    globalDataLayerService.pushDataLayerEvent(EventActions.COUNTRY_RECOMMENDER_CHANGE, {\n      componentClick: {\n        clickElementId: this.content.change.id,\n        clickElementName: this.content.change.text,\n        clickElementType: ClickElementTypes.Link,\n        targetUrl: getConfig(navStateStore.state.env).COUNTRY_SELECTOR_URL\n      }\n    });\n  }\n\n  render(): HTMLPhnCountryRecommenderElement {\n    const { statement, region, language, change } = this.content;\n\n    return (\n      <Host class=\"showing\">\n        <div class=\"country-recommender-container\">\n          <div class=\"country-recommender\">\n            <div class=\"country-recommender-icons-tray\">\n              <div class=\"left-icons\">\n                {isString(statement) ? (\n                  <phn-p-text theme=\"dark\" size=\"inherit\" class=\"statement\">\n                    {statement}\n                  </phn-p-text>\n                ) : /* istanbul ignore next */\n                null}\n\n                <div class=\"selector\">\n                  <div class=\"phn-flex-row phn-flex-wrap\">\n                    <div class=\"flag-region\">\n                      {isString(this.flagURL) ? (\n                        <phn-p-icon\n                          source={this.flagURL}\n                          class=\"flag\"\n                          aria-hidden=\"true\"\n                          size=\"inherit\"\n                          color=\"inherit\"\n                        />\n                      ) : /* istanbul ignore next */\n                      null}\n\n                      {isString(region) && isString(language) ? (\n                        <phn-p-text theme=\"dark\" class=\"language\" size=\"inherit\">\n                          {region} / {language}\n                        </phn-p-text>\n                      ) : /* istanbul ignore next */\n                      null}\n                    </div>\n\n                    <phn-p-link-pure\n                      theme=\"dark\"\n                      size=\"inherit\"\n                      class=\"change\"\n                      onClick={() => this.sendDataLayerEvent()}\n                      aria={{ 'aria-label': 'Change Region or Language' }}\n                    >\n                      <a href={getConfig(navStateStore.state.env).COUNTRY_SELECTOR_URL}>{change.text}</a>\n                    </phn-p-link-pure>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"right-icons\">\n                <phn-p-button-pure\n                  theme=\"dark\"\n                  icon=\"close\"\n                  onClick={() => this.closeCountryRecommender()}\n                  class=\"close-button\"\n                  hide-label=\"true\"\n                >\n                  Close dialog\n                </phn-p-button-pure>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}