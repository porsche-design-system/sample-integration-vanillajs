{"file":"animation-manager-feeac76f.js","mappings":"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","names":["getHTMLElement","isPromise"],"sources":["src/services/animations/animation-manager.ts"],"sourcesContent":["import { AnimationSequencesType } from '../../utility/constants';\nimport { getHTMLElement, isPromise } from '../../utility/helper';\n\nexport type AnimationStartsCallbacks = {\n  onAnimationStarts?: (() => Promise<unknown>) | (() => void);\n};\n\nexport type AnimationEndsCallbacks = {\n  onAnimationEnds?: (() => Promise<unknown>) | (() => void);\n};\n\nexport type AnimationStatusCallbacks = AnimationStartsCallbacks & AnimationEndsCallbacks;\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type SequenceIdentifier = AnimationSequencesType | (string & {});\n\nexport interface NaviAnimation {\n  animation: AnimationGeneratorType;\n  elementSelector: string;\n  onStart?: (() => Promise<unknown>) | (() => unknown);\n  onEnd?: (() => Promise<unknown>) | (() => unknown);\n}\n\nexport type SequenceStep = Array<NaviAnimation>;\n\nexport type AnimationSequence = {\n  steps: Array<SequenceStep>;\n  currentStepIndex: number;\n  running: boolean;\n  resolve?: (value: unknown) => void;\n  reject?: (reason?: unknown) => void;\n  promise?: Promise<void>;\n};\n\nexport type AnimationGeneratorType = {\n  className: string;\n  cleanUpBeforeAnimation?: ((el: HTMLElement) => Promise<void>) | ((el: HTMLElement) => void) | boolean;\n  cleanUpAfterAnimation?: ((el: HTMLElement) => Promise<void>) | ((el: HTMLElement) => void) | boolean;\n};\n\nconst animationRegistry: Record<\n  string,\n  {\n    promise: Promise<void>;\n    resolve: (value: void) => void;\n    reject: (reason?: unknown) => void;\n    animation: AnimationGeneratorType;\n    timeout: NodeJS.Timeout;\n  }\n> = {};\n\nconst sequences: {\n  [key in SequenceIdentifier]?: AnimationSequence | undefined;\n} = {};\n\nlet rootElement: HTMLElement | null = null;\n\nconst animationTimeoutDurationMs = 1000;\n\nfunction initialize(element: HTMLElement): void {\n  rootElement = element;\n\n  rootElement.addEventListener('transitionend', animationEndListener);\n  rootElement.addEventListener('animationend', animationEndListener);\n}\n\nfunction register(sequenceIdentifier: SequenceIdentifier, animationSequence: AnimationSequence): void {\n  sequences[sequenceIdentifier] = animationSequence;\n}\n\nfunction reset(): void {\n  Object.keys(sequences).forEach((key) => delete sequences[key]);\n}\n\nasync function play(sequenceIdentifier: SequenceIdentifier): Promise<unknown> {\n  const sequence = sequences[sequenceIdentifier];\n\n  if (sequence === undefined) {\n    return new Promise((_, reject) => reject(new Error(`Sequence ${sequenceIdentifier} has not been registered`)));\n  }\n\n  if (!sequence.running) {\n    sequence.promise = new Promise<void>((resolve, reject) => {\n      sequence.resolve = () => {\n        sequence.running = false;\n        resolve();\n      };\n\n      sequence.reject = (value: unknown) => {\n        sequence.running = false;\n        reject(value);\n      };\n\n      sequence.running = true;\n\n      applyCurrentAnimationSequenceStep(sequence);\n    });\n  }\n\n  return sequence.promise;\n}\n\nasync function applyCurrentAnimationSequenceStep(sequence: AnimationSequence) {\n  if (sequence.currentStepIndex >= sequence.steps.length) {\n    finishAnimationSequence(sequence);\n    return;\n  }\n\n  const sequenceStep = sequence.steps[sequence.currentStepIndex];\n\n  const promises = [];\n  for (const animation of sequenceStep) {\n    promises.push(executeAnimation(animation));\n  }\n\n  try {\n    await Promise.all(promises);\n  } catch (error) {\n    sequence.reject?.(error);\n    return;\n  }\n\n  sequence.currentStepIndex += 1;\n\n  setTimeout(() => applyCurrentAnimationSequenceStep(sequence), 0);\n}\n\nfunction finishAnimationSequence(sequence: AnimationSequence) {\n  sequence.currentStepIndex = 0;\n  sequence.resolve?.(null);\n  sequence.promise = undefined;\n}\n\nfunction animationEndListener(event: AnimationEvent | TransitionEvent): void {\n  const target = getHTMLElement(event.target);\n\n  if (target === null) {\n    throw new Error(`${event.type} event target is null`);\n  }\n\n  const id = target.dataset.phnAmId;\n\n  if (id !== undefined && id !== null) {\n    finishAnimationPromise(id, target);\n  }\n}\n\nasync function executeAnimation({ onStart, onEnd, animation, elementSelector }: NaviAnimation): Promise<void> {\n  if (rootElement === null) {\n    throw new Error('No root element present');\n  }\n\n  if (onStart) {\n    const maybePromise = onStart();\n    if (isPromise<void>(maybePromise)) {\n      await maybePromise;\n    }\n  }\n\n  const animatedElements: HTMLElement[] = Array.from(rootElement.querySelectorAll(elementSelector));\n  const animationExecutors = [];\n\n  for (const element of animatedElements) {\n    const animationPromiseEffect = generateAndCleanUpAnimationPromise(animationPromiseGenerator)(element, animation);\n    animationExecutors.push(animationPromiseEffect);\n  }\n\n  await Promise.all(animationExecutors);\n\n  if (onEnd) {\n    const maybePromise = onEnd();\n    if (isPromise<void>(maybePromise)) {\n      await maybePromise;\n    }\n  }\n}\n\nfunction generateAndCleanUpAnimationPromise(\n  animationPromiseGenerator: (element: HTMLElement, animation: AnimationGeneratorType) => Promise<void>\n): (element: HTMLElement, animation: AnimationGeneratorType) => Promise<void> {\n  return async function (element: HTMLElement, animation: AnimationGeneratorType): Promise<void> {\n    const { cleanUpBeforeAnimation, cleanUpAfterAnimation } = animation;\n\n    const animationPromise = animationPromiseGenerator(element, animation);\n\n    if (typeof cleanUpBeforeAnimation === 'function') {\n      const maybePromise: void | Promise<void> = cleanUpBeforeAnimation(element);\n      if (isPromise<void>(maybePromise)) {\n        await maybePromise;\n      }\n    }\n\n    await animationPromise;\n\n    if (typeof cleanUpAfterAnimation === 'function') {\n      const maybePromise: void | Promise<void> = cleanUpAfterAnimation(element);\n      if (isPromise<void>(maybePromise)) {\n        await maybePromise;\n      }\n    }\n\n    if (cleanUpAfterAnimation !== false) {\n      // only not remove class if cleanUpAfterAnimation is explicitely set to false\n      element.classList.remove(animation.className);\n    }\n  };\n}\n\nconst animationPromiseGenerator = (element: HTMLElement, animation: AnimationGeneratorType): Promise<void> => {\n  const id = Math.floor(Math.random() * 1e7);\n\n  element.classList.add(animation.className);\n  element.dataset.phnAmId = id.toString();\n\n  let resolve!: (value: void) => void;\n  let reject!: (reason?: unknown) => void;\n  let timeout!: NodeJS.Timeout;\n  const promise = new Promise<void>((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n\n    timeout = setTimeout(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Animation with className ${animation.className} didn't finish after ${animationTimeoutDurationMs}ms. Forcefully finishing animation and continuing with the rest of the sequence.`\n      );\n      finishAnimationPromise(String(id), element);\n    }, animationTimeoutDurationMs);\n  });\n\n  animationRegistry[id] = { animation, resolve, reject, promise, timeout };\n\n  return promise;\n};\n\nfunction finishAnimationPromise(phnAmId: string, target: HTMLElement): void {\n  const { resolve, timeout } = animationRegistry[phnAmId];\n\n  clearTimeout(timeout);\n  delete animationRegistry[phnAmId];\n  delete target.dataset.phnAmId;\n\n  resolve();\n}\n\nfunction isPlaying(sequenceIdentifier: SequenceIdentifier): boolean {\n  const sequence = sequences[sequenceIdentifier];\n\n  if (sequence === undefined) {\n    throw new Error(`Sequence ${sequenceIdentifier} has not been registered`);\n  }\n\n  return sequence.promise !== undefined;\n}\n\nfunction makeSequence(\n  sequenceSteps: SequenceStep[],\n  animationDefaults?: Partial<Omit<AnimationGeneratorType, 'name'>>\n): AnimationSequence {\n  return {\n    steps: sequenceSteps.map((step) => step.map((animation) => ({ ...animationDefaults, ...animation }))),\n    currentStepIndex: 0,\n    running: false\n  };\n}\n\nexport default {\n  initialize,\n  play,\n  isPlaying,\n  register,\n  reset\n};\n\nexport { makeSequence };\n"],"version":3}