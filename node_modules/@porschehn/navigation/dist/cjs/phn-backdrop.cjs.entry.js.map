{"file":"phn-backdrop.entry.cjs.js","mappings":";;;;;;;;;;;;;;;;AAAA,MAAM,WAAW,GAAG,84EAA84E;;MCWr5E,QAAQ;;;;;;;EASnB,WAAW;IACT,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAC9B,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC;GACpC;EAEO,sBAAsB;IAC5BA,iCAAgB,CAAC,aAAa,CAACC,mCAAmB,CAAC,YAAY,CAAC,CAAC;IACjEC,6CAAsB,CAAC,kBAAkB,CAACC,4BAAY,CAAC,gBAAgB,EAAE;MACvE,cAAc,EAAE;QACd,cAAc,EAAE,uBAAuB;QACvC,gBAAgB,EAAE,UAAU;QAC5B,gBAAgB,EAAEC,iCAAiB,CAAC,MAAM;QAC1C,aAAa,EAAE,SAAS;OACzB;MACD,gBAAgB,EAAE;QAChB,kBAAkB,EAAEJ,iCAAgB,CAAC,2BAA2B,CAAC,IAAI,CAAC,gBAAgB,EAAEK,4BAAY,CAAC,QAAQ,CAAC;QAC9G,gBAAgB,EAAEL,iCAAgB,CAAC,yBAAyB,EAAE;QAC9D,kBAAkB,EAAE,eAAe;OACpC;KACF,CAAC,CAAC;GACJ;EAED,iBAAiB;IACf,IAAIM,2BAAa,CAAC,YAAY,EAAE,EAAE;MAChCA,2BAAa,CAAC,UAAU,EAAE,CAAC;KAC5B;GACF;EAED,oBAAoB;IAClB,IAAIA,2BAAa,CAAC,YAAY,EAAE,EAAE;MAChCA,2BAAa,CAAC,YAAY,EAAE,CAAC;KAC9B;GACF;EAED,MAAM;IACJ,OAAOC,QAACC,UAAI,OAAG,CAAC;GACjB;;;;;;;","names":["analyticsManager","DisplayElementTypes","globalDataLayerService","EventActions","ClickElementTypes","ElementTypes","windowService","h","Host"],"sources":["src/components/backdrop/backdrop.scss?tag=phn-backdrop&encapsulation=scoped","src/components/backdrop/backdrop.tsx"],"sourcesContent":["@import '../../scss';\n\n:host {\n  position: fixed;\n  z-index: $phn-z-index-mega-flyout;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.6);\n  cursor: pointer;\n  @include pds-frosted-glass()\n}\n","import { Component, Element, Event, EventEmitter, h, Host, Listen, Prop } from '@stencil/core';\nimport analyticsManager from '../../services/analytics/analytics-manager';\nimport globalDataLayerService from '../../services/analytics/global-data-layer-service';\nimport windowService from '../../services/window-service';\nimport { ClickElementTypes, DisplayElementTypes, ElementTypes, EventActions } from '../../utility/constants';\n\n@Component({\n  tag: 'phn-backdrop',\n  styleUrl: 'backdrop.scss',\n  scoped: true\n})\nexport class Backdrop {\n  @Prop() activeRoutingKey!: string;\n\n  @Element() el!: HTMLPhnBackdropElement;\n\n  @Event() clickDrawerHeaderClose!: EventEmitter<void>;\n  @Event() backdropClosed!: EventEmitter<void>;\n\n  @Listen('click', { passive: true })\n  handleClick(): void {\n    this.sendDataAnalyticsEvent();\n    this.clickDrawerHeaderClose.emit();\n  }\n\n  private sendDataAnalyticsEvent() {\n    analyticsManager.setDrawerType(DisplayElementTypes.DoubleDrawer);\n    globalDataLayerService.pushDataLayerEvent(EventActions.MENU_CLOSE_CLICK, {\n      componentClick: {\n        clickElementId: 'mainmenu.drawer.close',\n        clickElementName: 'backdrop',\n        clickElementType: ClickElementTypes.Button,\n        targetElement: 'level-0'\n      },\n      componentDisplay: {\n        displayElementType: analyticsManager.calculateDisplayElementType(this.activeRoutingKey, ElementTypes.backdrop),\n        displayElementId: analyticsManager.calculateDisplayElementId(),\n        displayElementName: 'Double Drawer'\n      }\n    });\n  }\n\n  componentWillLoad(): void {\n    if (windowService.hasScrollbar()) {\n      windowService.lockScroll();\n    }\n  }\n\n  disconnectedCallback(): void {\n    if (windowService.hasScrollbar()) {\n      windowService.unlockScroll();\n    }\n  }\n\n  render(): HTMLPhnBackdropElement {\n    return <Host />;\n  }\n}\n"],"version":3}