/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
import { ApplicationType, DrawerStatusTypes } from "./utility/constants/app";
import { Prediction } from "./entities/places";
import { EventAction, NavigationModeType, NavigationThemeType } from "./utility/constants";
import { Dealer, Series, TCountryRecommender, TLink, TMenu, TVehiclePurchaseMenu } from "./entities/content";
import { ApplicationType as ApplicationType1, NavigationThemeType as NavigationThemeType1 } from "./components";
import { RoutingKeyWithClick } from "./entities/routing-key";
import { TDataLayer } from "@porsche/globaldatalayer-events/projects/pcom/all/types";
export { ApplicationType, DrawerStatusTypes } from "./utility/constants/app";
export { Prediction } from "./entities/places";
export { EventAction, NavigationModeType, NavigationThemeType } from "./utility/constants";
export { Dealer, Series, TCountryRecommender, TLink, TMenu, TVehiclePurchaseMenu } from "./entities/content";
export { ApplicationType as ApplicationType1, NavigationThemeType as NavigationThemeType1 } from "./components";
export { RoutingKeyWithClick } from "./entities/routing-key";
export { TDataLayer } from "@porsche/globaldatalayer-events/projects/pcom/all/types";
export namespace Components {
    interface ContextualDrawer {
    }
    interface PhnAutocompleteSearchField {
        "errorMessage": string;
        "errorState": string;
        "initialValue": string;
        "placeholder": string;
        "predictions": Prediction[];
    }
    interface PhnBackButton {
        "analyticsId": string;
        "text": string;
    }
    interface PhnBackdrop {
    }
    interface PhnBurgerButton {
        "alignLabel": string;
        "hideLabel": boolean;
        "isLoading": boolean;
        "mode": NavigationModeType;
        "theme": NavigationThemeType;
    }
    interface PhnCarBodyTypesDrawer {
        "breakpoint": number;
        "series": Series;
    }
    interface PhnCountryRecommender {
        "content": TCountryRecommender;
        "locale": string;
    }
    interface PhnDealerDetailsDrawer {
        "breakpoint": number;
        "dealerId": string;
        "locale": string;
    }
    interface PhnDealerSearchByNumberOfDealers {
        "locale": string;
    }
    interface PhnDealerSearchForm {
        "breakpoint": number;
        "dealer": Dealer;
        "locale": string;
        "showHeadline": boolean;
    }
    interface PhnDealerSearchFormDropdown {
        "breakpoint": number;
        "locale": string;
    }
    interface PhnDealerSearchFormGeolocation {
        "locale": string;
    }
    interface PhnDealerSearchResults {
        "breakpoint": number;
        "locale": string;
        "showOverlay": boolean;
    }
    interface PhnDoubleDrawer {
        "breakpoint": number;
        "initialUsingKeyboard": boolean;
        "locale": string;
        "receivedContent": boolean;
        "routingKeyHistory": string[];
        "routingKeyPointer": number;
    }
    interface PhnDrawerHeader {
        "backButtonAnalyticsId": string;
        "backButtonText": string;
        "breakpoint": number;
        "locale"?: string;
        "receivedContent": boolean;
        "route": string;
        "showBackButton": boolean;
    }
    interface PhnHeader {
        "app": ApplicationType;
        "clientId": string;
        "displayLogoOnly": boolean;
        "env": string;
        "initialRoutingPath": string;
        "limitedWidth": string;
        "locale": string;
        "mode": NavigationModeType;
        "numberOfShoppingItems": number;
        "pageName": string;
        "shopInformation": string;
        "theme": NavigationThemeType;
        "wishlistItemsNumber": number;
    }
    interface PhnHeading {
        "subtext"?: string;
        "text": string;
    }
    interface PhnLevel0 {
        "app": ApplicationType;
        "breakpoint": number;
        "displayLogoOnly": boolean;
        "limitedWidth": boolean;
        "loadingContent": boolean;
        "locale": string;
        "mode": NavigationModeType;
        "receivedContent": boolean;
        "theme": NavigationThemeType;
    }
    interface PhnLevel0Icons {
        "app": ApplicationType;
        "breakpoint": number;
        "isLoading": boolean;
        "isNavigationLoaded": boolean;
        "locale": string;
        "mode": NavigationModeType;
        "theme": NavigationThemeType1;
    }
    interface PhnLevel1 {
        "breakpoint": number;
        "locale": string;
    }
    interface PhnLogo {
        "app": ApplicationType1;
        "breakpoint": number;
        "locale": string;
        "mode": NavigationModeType;
        "size": string;
        "theme": NavigationThemeType;
    }
    interface PhnMenu {
        "item": TMenu | TVehiclePurchaseMenu;
        "receivedContent": boolean;
        "showHeadline": boolean;
    }
    interface PhnMenuItem {
        "analyticsId": string;
        "customDatalayerProperties": TDataLayer;
        "datalayerEventAction": EventAction;
        "elementId": string;
        "fontWeight": string;
        "iconLeft": string;
        "iconRight": string;
        "isLoading": boolean;
        "isModels": boolean;
        "link": string;
        "size": string;
        "subtext": string;
        "target": string;
        "text": string;
        "variant": string;
    }
    interface PhnMenuItemCard {
        "analyticsId": string;
        "customDatalayerProperties": TDataLayer;
        "datalayerEventAction": EventAction;
        "elementId": string;
        "iconLeft": string;
        "link": string;
        "subtext": string;
        "target": string;
        "text": string;
    }
    interface PhnModels {
        "breakpoint": number;
        "showHeadline": boolean;
    }
    interface PhnMyPorscheIconButton {
        "mode": NavigationModeType;
        "theme": NavigationThemeType;
    }
    interface PhnMyporscheDrawer {
    }
    interface PhnMyporscheLogin {
        "login": TLink;
        "more": TLink | null;
        "signup": TLink;
        "signupText": string;
    }
    interface PhnRouter {
        "activeRoutingKey": string;
        "breakpoint": number;
        "locale": string;
        "receivedContent": boolean;
    }
    interface PhnSideDrawer {
        "activeRoutingKey": string;
        "locale": string;
    }
    interface PhnSideDrawerItem {
        "analyticsId": string;
        "customDatalayerProperties": TDataLayer;
        "datalayerEventAction": EventAction;
        "elementId": string;
        "hasDoubleDrawerAnimationFinished": boolean;
        "iconRight": string;
        "isActive": boolean;
        "link": string;
        "renderSignatures": boolean;
        "subtext": string;
        "text": string;
    }
    interface PhnSignatureHeading {
        "subtext"?: string;
        "text": string;
    }
    interface PhnSingleDrawer {
        "breakpoint": number;
        "locale": string;
        "receivedContent": boolean;
        "usingKeyboard": boolean;
    }
    interface PhnWrapper {
        "app": ApplicationType;
        "breakpoint": number;
        "displayLogoOnly": boolean;
        "limitedWidth": boolean;
        "loadingContent": boolean;
        "locale": string;
        "mode": NavigationModeType;
        "receivedContent": boolean;
        "theme": NavigationThemeType;
    }
}
export interface ContextualDrawerCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLContextualDrawerElement;
}
export interface PhnAutocompleteSearchFieldCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnAutocompleteSearchFieldElement;
}
export interface PhnBackdropCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnBackdropElement;
}
export interface PhnCountryRecommenderCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnCountryRecommenderElement;
}
export interface PhnDealerDetailsDrawerCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnDealerDetailsDrawerElement;
}
export interface PhnDealerSearchByNumberOfDealersCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnDealerSearchByNumberOfDealersElement;
}
export interface PhnDealerSearchFormDropdownCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnDealerSearchFormDropdownElement;
}
export interface PhnDealerSearchFormGeolocationCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnDealerSearchFormGeolocationElement;
}
export interface PhnDoubleDrawerCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnDoubleDrawerElement;
}
export interface PhnDrawerHeaderCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnDrawerHeaderElement;
}
export interface PhnHeaderCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnHeaderElement;
}
export interface PhnLevel0CustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnLevel0Element;
}
export interface PhnLevel0IconsCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnLevel0IconsElement;
}
export interface PhnLevel1CustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnLevel1Element;
}
export interface PhnLogoCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnLogoElement;
}
export interface PhnMenuCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnMenuElement;
}
export interface PhnMyporscheDrawerCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnMyporscheDrawerElement;
}
export interface PhnMyporscheLoginCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnMyporscheLoginElement;
}
export interface PhnRouterCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnRouterElement;
}
export interface PhnSideDrawerCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPhnSideDrawerElement;
}
declare global {
    interface HTMLContextualDrawerElement extends Components.ContextualDrawer, HTMLStencilElement {
    }
    var HTMLContextualDrawerElement: {
        prototype: HTMLContextualDrawerElement;
        new (): HTMLContextualDrawerElement;
    };
    interface HTMLPhnAutocompleteSearchFieldElement extends Components.PhnAutocompleteSearchField, HTMLStencilElement {
    }
    var HTMLPhnAutocompleteSearchFieldElement: {
        prototype: HTMLPhnAutocompleteSearchFieldElement;
        new (): HTMLPhnAutocompleteSearchFieldElement;
    };
    interface HTMLPhnBackButtonElement extends Components.PhnBackButton, HTMLStencilElement {
    }
    var HTMLPhnBackButtonElement: {
        prototype: HTMLPhnBackButtonElement;
        new (): HTMLPhnBackButtonElement;
    };
    interface HTMLPhnBackdropElement extends Components.PhnBackdrop, HTMLStencilElement {
    }
    var HTMLPhnBackdropElement: {
        prototype: HTMLPhnBackdropElement;
        new (): HTMLPhnBackdropElement;
    };
    interface HTMLPhnBurgerButtonElement extends Components.PhnBurgerButton, HTMLStencilElement {
    }
    var HTMLPhnBurgerButtonElement: {
        prototype: HTMLPhnBurgerButtonElement;
        new (): HTMLPhnBurgerButtonElement;
    };
    interface HTMLPhnCarBodyTypesDrawerElement extends Components.PhnCarBodyTypesDrawer, HTMLStencilElement {
    }
    var HTMLPhnCarBodyTypesDrawerElement: {
        prototype: HTMLPhnCarBodyTypesDrawerElement;
        new (): HTMLPhnCarBodyTypesDrawerElement;
    };
    interface HTMLPhnCountryRecommenderElement extends Components.PhnCountryRecommender, HTMLStencilElement {
    }
    var HTMLPhnCountryRecommenderElement: {
        prototype: HTMLPhnCountryRecommenderElement;
        new (): HTMLPhnCountryRecommenderElement;
    };
    interface HTMLPhnDealerDetailsDrawerElement extends Components.PhnDealerDetailsDrawer, HTMLStencilElement {
    }
    var HTMLPhnDealerDetailsDrawerElement: {
        prototype: HTMLPhnDealerDetailsDrawerElement;
        new (): HTMLPhnDealerDetailsDrawerElement;
    };
    interface HTMLPhnDealerSearchByNumberOfDealersElement extends Components.PhnDealerSearchByNumberOfDealers, HTMLStencilElement {
    }
    var HTMLPhnDealerSearchByNumberOfDealersElement: {
        prototype: HTMLPhnDealerSearchByNumberOfDealersElement;
        new (): HTMLPhnDealerSearchByNumberOfDealersElement;
    };
    interface HTMLPhnDealerSearchFormElement extends Components.PhnDealerSearchForm, HTMLStencilElement {
    }
    var HTMLPhnDealerSearchFormElement: {
        prototype: HTMLPhnDealerSearchFormElement;
        new (): HTMLPhnDealerSearchFormElement;
    };
    interface HTMLPhnDealerSearchFormDropdownElement extends Components.PhnDealerSearchFormDropdown, HTMLStencilElement {
    }
    var HTMLPhnDealerSearchFormDropdownElement: {
        prototype: HTMLPhnDealerSearchFormDropdownElement;
        new (): HTMLPhnDealerSearchFormDropdownElement;
    };
    interface HTMLPhnDealerSearchFormGeolocationElement extends Components.PhnDealerSearchFormGeolocation, HTMLStencilElement {
    }
    var HTMLPhnDealerSearchFormGeolocationElement: {
        prototype: HTMLPhnDealerSearchFormGeolocationElement;
        new (): HTMLPhnDealerSearchFormGeolocationElement;
    };
    interface HTMLPhnDealerSearchResultsElement extends Components.PhnDealerSearchResults, HTMLStencilElement {
    }
    var HTMLPhnDealerSearchResultsElement: {
        prototype: HTMLPhnDealerSearchResultsElement;
        new (): HTMLPhnDealerSearchResultsElement;
    };
    interface HTMLPhnDoubleDrawerElement extends Components.PhnDoubleDrawer, HTMLStencilElement {
    }
    var HTMLPhnDoubleDrawerElement: {
        prototype: HTMLPhnDoubleDrawerElement;
        new (): HTMLPhnDoubleDrawerElement;
    };
    interface HTMLPhnDrawerHeaderElement extends Components.PhnDrawerHeader, HTMLStencilElement {
    }
    var HTMLPhnDrawerHeaderElement: {
        prototype: HTMLPhnDrawerHeaderElement;
        new (): HTMLPhnDrawerHeaderElement;
    };
    interface HTMLPhnHeaderElement extends Components.PhnHeader, HTMLStencilElement {
    }
    var HTMLPhnHeaderElement: {
        prototype: HTMLPhnHeaderElement;
        new (): HTMLPhnHeaderElement;
    };
    interface HTMLPhnHeadingElement extends Components.PhnHeading, HTMLStencilElement {
    }
    var HTMLPhnHeadingElement: {
        prototype: HTMLPhnHeadingElement;
        new (): HTMLPhnHeadingElement;
    };
    interface HTMLPhnLevel0Element extends Components.PhnLevel0, HTMLStencilElement {
    }
    var HTMLPhnLevel0Element: {
        prototype: HTMLPhnLevel0Element;
        new (): HTMLPhnLevel0Element;
    };
    interface HTMLPhnLevel0IconsElement extends Components.PhnLevel0Icons, HTMLStencilElement {
    }
    var HTMLPhnLevel0IconsElement: {
        prototype: HTMLPhnLevel0IconsElement;
        new (): HTMLPhnLevel0IconsElement;
    };
    interface HTMLPhnLevel1Element extends Components.PhnLevel1, HTMLStencilElement {
    }
    var HTMLPhnLevel1Element: {
        prototype: HTMLPhnLevel1Element;
        new (): HTMLPhnLevel1Element;
    };
    interface HTMLPhnLogoElement extends Components.PhnLogo, HTMLStencilElement {
    }
    var HTMLPhnLogoElement: {
        prototype: HTMLPhnLogoElement;
        new (): HTMLPhnLogoElement;
    };
    interface HTMLPhnMenuElement extends Components.PhnMenu, HTMLStencilElement {
    }
    var HTMLPhnMenuElement: {
        prototype: HTMLPhnMenuElement;
        new (): HTMLPhnMenuElement;
    };
    interface HTMLPhnMenuItemElement extends Components.PhnMenuItem, HTMLStencilElement {
    }
    var HTMLPhnMenuItemElement: {
        prototype: HTMLPhnMenuItemElement;
        new (): HTMLPhnMenuItemElement;
    };
    interface HTMLPhnMenuItemCardElement extends Components.PhnMenuItemCard, HTMLStencilElement {
    }
    var HTMLPhnMenuItemCardElement: {
        prototype: HTMLPhnMenuItemCardElement;
        new (): HTMLPhnMenuItemCardElement;
    };
    interface HTMLPhnModelsElement extends Components.PhnModels, HTMLStencilElement {
    }
    var HTMLPhnModelsElement: {
        prototype: HTMLPhnModelsElement;
        new (): HTMLPhnModelsElement;
    };
    interface HTMLPhnMyPorscheIconButtonElement extends Components.PhnMyPorscheIconButton, HTMLStencilElement {
    }
    var HTMLPhnMyPorscheIconButtonElement: {
        prototype: HTMLPhnMyPorscheIconButtonElement;
        new (): HTMLPhnMyPorscheIconButtonElement;
    };
    interface HTMLPhnMyporscheDrawerElement extends Components.PhnMyporscheDrawer, HTMLStencilElement {
    }
    var HTMLPhnMyporscheDrawerElement: {
        prototype: HTMLPhnMyporscheDrawerElement;
        new (): HTMLPhnMyporscheDrawerElement;
    };
    interface HTMLPhnMyporscheLoginElement extends Components.PhnMyporscheLogin, HTMLStencilElement {
    }
    var HTMLPhnMyporscheLoginElement: {
        prototype: HTMLPhnMyporscheLoginElement;
        new (): HTMLPhnMyporscheLoginElement;
    };
    interface HTMLPhnRouterElement extends Components.PhnRouter, HTMLStencilElement {
    }
    var HTMLPhnRouterElement: {
        prototype: HTMLPhnRouterElement;
        new (): HTMLPhnRouterElement;
    };
    interface HTMLPhnSideDrawerElement extends Components.PhnSideDrawer, HTMLStencilElement {
    }
    var HTMLPhnSideDrawerElement: {
        prototype: HTMLPhnSideDrawerElement;
        new (): HTMLPhnSideDrawerElement;
    };
    interface HTMLPhnSideDrawerItemElement extends Components.PhnSideDrawerItem, HTMLStencilElement {
    }
    var HTMLPhnSideDrawerItemElement: {
        prototype: HTMLPhnSideDrawerItemElement;
        new (): HTMLPhnSideDrawerItemElement;
    };
    interface HTMLPhnSignatureHeadingElement extends Components.PhnSignatureHeading, HTMLStencilElement {
    }
    var HTMLPhnSignatureHeadingElement: {
        prototype: HTMLPhnSignatureHeadingElement;
        new (): HTMLPhnSignatureHeadingElement;
    };
    interface HTMLPhnSingleDrawerElement extends Components.PhnSingleDrawer, HTMLStencilElement {
    }
    var HTMLPhnSingleDrawerElement: {
        prototype: HTMLPhnSingleDrawerElement;
        new (): HTMLPhnSingleDrawerElement;
    };
    interface HTMLPhnWrapperElement extends Components.PhnWrapper, HTMLStencilElement {
    }
    var HTMLPhnWrapperElement: {
        prototype: HTMLPhnWrapperElement;
        new (): HTMLPhnWrapperElement;
    };
    interface HTMLElementTagNameMap {
        "contextual-drawer": HTMLContextualDrawerElement;
        "phn-autocomplete-search-field": HTMLPhnAutocompleteSearchFieldElement;
        "phn-back-button": HTMLPhnBackButtonElement;
        "phn-backdrop": HTMLPhnBackdropElement;
        "phn-burger-button": HTMLPhnBurgerButtonElement;
        "phn-car-body-types-drawer": HTMLPhnCarBodyTypesDrawerElement;
        "phn-country-recommender": HTMLPhnCountryRecommenderElement;
        "phn-dealer-details-drawer": HTMLPhnDealerDetailsDrawerElement;
        "phn-dealer-search-by-number-of-dealers": HTMLPhnDealerSearchByNumberOfDealersElement;
        "phn-dealer-search-form": HTMLPhnDealerSearchFormElement;
        "phn-dealer-search-form-dropdown": HTMLPhnDealerSearchFormDropdownElement;
        "phn-dealer-search-form-geolocation": HTMLPhnDealerSearchFormGeolocationElement;
        "phn-dealer-search-results": HTMLPhnDealerSearchResultsElement;
        "phn-double-drawer": HTMLPhnDoubleDrawerElement;
        "phn-drawer-header": HTMLPhnDrawerHeaderElement;
        "phn-header": HTMLPhnHeaderElement;
        "phn-heading": HTMLPhnHeadingElement;
        "phn-level-0": HTMLPhnLevel0Element;
        "phn-level-0-icons": HTMLPhnLevel0IconsElement;
        "phn-level-1": HTMLPhnLevel1Element;
        "phn-logo": HTMLPhnLogoElement;
        "phn-menu": HTMLPhnMenuElement;
        "phn-menu-item": HTMLPhnMenuItemElement;
        "phn-menu-item-card": HTMLPhnMenuItemCardElement;
        "phn-models": HTMLPhnModelsElement;
        "phn-my-porsche-icon-button": HTMLPhnMyPorscheIconButtonElement;
        "phn-myporsche-drawer": HTMLPhnMyporscheDrawerElement;
        "phn-myporsche-login": HTMLPhnMyporscheLoginElement;
        "phn-router": HTMLPhnRouterElement;
        "phn-side-drawer": HTMLPhnSideDrawerElement;
        "phn-side-drawer-item": HTMLPhnSideDrawerItemElement;
        "phn-signature-heading": HTMLPhnSignatureHeadingElement;
        "phn-single-drawer": HTMLPhnSingleDrawerElement;
        "phn-wrapper": HTMLPhnWrapperElement;
    }
}
declare namespace LocalJSX {
    interface ContextualDrawer {
        "onOpenBackdrop"?: (event: ContextualDrawerCustomEvent<boolean>) => void;
        "onPhnContextualDrawerStatus"?: (event: ContextualDrawerCustomEvent<{
    status: DrawerStatusTypes;
  }>) => void;
    }
    interface PhnAutocompleteSearchField {
        "errorMessage"?: string;
        "errorState"?: string;
        "initialValue"?: string;
        "onAutoCompleteLoaded"?: (event: PhnAutocompleteSearchFieldCustomEvent<boolean>) => void;
        "onClearSearch"?: (event: PhnAutocompleteSearchFieldCustomEvent<void>) => void;
        "onPredictionsToggle"?: (event: PhnAutocompleteSearchFieldCustomEvent<boolean>) => void;
        "onSearchInput"?: (event: PhnAutocompleteSearchFieldCustomEvent<string>) => void;
        "onSubmitSearch"?: (event: PhnAutocompleteSearchFieldCustomEvent<Prediction | null>) => void;
        "placeholder": string;
        "predictions": Prediction[];
    }
    interface PhnBackButton {
        "analyticsId"?: string;
        "text"?: string;
    }
    interface PhnBackdrop {
        "onBackdropClosed"?: (event: PhnBackdropCustomEvent<void>) => void;
        "onClickDrawerHeaderClose"?: (event: PhnBackdropCustomEvent<void>) => void;
    }
    interface PhnBurgerButton {
        "alignLabel": string;
        "hideLabel": boolean;
        "isLoading"?: boolean;
        "mode"?: NavigationModeType;
        "theme"?: NavigationThemeType;
    }
    interface PhnCarBodyTypesDrawer {
        "breakpoint": number;
        "series": Series;
    }
    interface PhnCountryRecommender {
        "content": TCountryRecommender;
        "locale": string;
        "onBannerClosed"?: (event: PhnCountryRecommenderCustomEvent<void>) => void;
    }
    interface PhnDealerDetailsDrawer {
        "breakpoint": number;
        "dealerId": string;
        "locale": string;
        "onClickDrawerHeaderBack"?: (event: PhnDealerDetailsDrawerCustomEvent<void>) => void;
    }
    interface PhnDealerSearchByNumberOfDealers {
        "locale": string;
        "onRemoveSkeletonOnDealerSearchForm"?: (event: PhnDealerSearchByNumberOfDealersCustomEvent<any>) => void;
    }
    interface PhnDealerSearchForm {
        "breakpoint": number;
        "dealer": Dealer;
        "locale": string;
        "showHeadline"?: boolean;
    }
    interface PhnDealerSearchFormDropdown {
        "breakpoint": number;
        "locale"?: string;
        "onClearSearchEvent"?: (event: PhnDealerSearchFormDropdownCustomEvent<any>) => void;
        "onDealerSearchFormEvent"?: (event: PhnDealerSearchFormDropdownCustomEvent<any>) => void;
        "onRemoveSkeletonOnDealerSearchForm"?: (event: PhnDealerSearchFormDropdownCustomEvent<any>) => void;
    }
    interface PhnDealerSearchFormGeolocation {
        "locale": string;
        "onClearSearchEvent"?: (event: PhnDealerSearchFormGeolocationCustomEvent<any>) => void;
        "onDealerSearchFormEvent"?: (event: PhnDealerSearchFormGeolocationCustomEvent<any>) => void;
        "onRemoveSkeletonOnDealerSearchForm"?: (event: PhnDealerSearchFormGeolocationCustomEvent<any>) => void;
    }
    interface PhnDealerSearchResults {
        "breakpoint": number;
        "locale": string;
        "showOverlay"?: boolean;
    }
    interface PhnDoubleDrawer {
        "breakpoint": number;
        "initialUsingKeyboard"?: boolean;
        "locale": string;
        "onBackdropClosed"?: (event: PhnDoubleDrawerCustomEvent<void>) => void;
        "onClickDrawerHeaderBack"?: (event: PhnDoubleDrawerCustomEvent<void>) => void;
        "onClickDrawerHeaderClose"?: (event: PhnDoubleDrawerCustomEvent<void>) => void;
        "onDrawerChanged"?: (event: PhnDoubleDrawerCustomEvent<boolean>) => void;
        "onDrawerClosed"?: (event: PhnDoubleDrawerCustomEvent<void>) => void;
        "onPhnDrawerStatus"?: (event: PhnDoubleDrawerCustomEvent<{
    status: DrawerStatusTypes;
  }>) => void;
        "receivedContent": boolean;
        "routingKeyHistory"?: string[];
        "routingKeyPointer"?: number;
    }
    interface PhnDrawerHeader {
        "backButtonAnalyticsId": string;
        "backButtonText"?: string;
        "breakpoint": number;
        "locale"?: string;
        "onClickDrawerHeaderClose"?: (event: PhnDrawerHeaderCustomEvent<void>) => void;
        "receivedContent"?: boolean;
        "route": string;
        "showBackButton"?: boolean;
    }
    interface PhnHeader {
        "app"?: ApplicationType;
        "clientId"?: string;
        "displayLogoOnly"?: boolean;
        "env"?: string;
        "initialRoutingPath"?: string;
        "limitedWidth"?: string;
        "locale"?: string;
        "mode"?: NavigationModeType;
        "numberOfShoppingItems"?: number;
        "onNavigationDidLoad"?: (event: PhnHeaderCustomEvent<void>) => void;
        "onPhnLogin"?: (event: PhnHeaderCustomEvent<void>) => void;
        "onPhnLogout"?: (event: PhnHeaderCustomEvent<void>) => void;
        "pageName"?: string;
        "shopInformation"?: string;
        "theme"?: NavigationThemeType;
        "wishlistItemsNumber"?: number;
    }
    interface PhnHeading {
        "subtext"?: string;
        "text": string;
    }
    interface PhnLevel0 {
        "app"?: ApplicationType;
        "breakpoint": number;
        "displayLogoOnly"?: boolean;
        "limitedWidth"?: boolean;
        "loadingContent"?: boolean;
        "locale": string;
        "mode"?: NavigationModeType;
        "onNavigationLoaded"?: (event: PhnLevel0CustomEvent<boolean>) => void;
        "receivedContent"?: boolean;
        "theme"?: NavigationThemeType;
    }
    interface PhnLevel0Icons {
        "app"?: ApplicationType;
        "breakpoint": number;
        "isLoading": boolean;
        "isNavigationLoaded": boolean;
        "locale": string;
        "mode"?: NavigationModeType;
        "onOpenDrawer"?: (event: PhnLevel0IconsCustomEvent<RoutingKeyWithClick>) => void;
        "theme"?: NavigationThemeType1;
    }
    interface PhnLevel1 {
        "breakpoint": number;
        "locale": string;
        "onMobileMenuItemClick"?: (event: PhnLevel1CustomEvent<string[]>) => void;
    }
    interface PhnLogo {
        "app": ApplicationType1;
        "breakpoint": number;
        "locale": string;
        "mode"?: NavigationModeType;
        "onLogoLoaded"?: (event: PhnLogoCustomEvent<void>) => void;
        "size": string;
        "theme"?: NavigationThemeType;
    }
    interface PhnMenu {
        "item": TMenu | TVehiclePurchaseMenu;
        "onMobileMenuItemClick"?: (event: PhnMenuCustomEvent<string[]>) => void;
        "receivedContent"?: boolean;
        "showHeadline"?: boolean;
    }
    interface PhnMenuItem {
        "analyticsId": string;
        "customDatalayerProperties"?: TDataLayer;
        "datalayerEventAction"?: EventAction;
        "elementId"?: string;
        "fontWeight"?: string;
        "iconLeft"?: string;
        "iconRight"?: string;
        "isLoading"?: boolean;
        "isModels"?: boolean;
        "link"?: string;
        "size"?: string;
        "subtext"?: string;
        "target"?: string;
        "text"?: string;
        "variant"?: string;
    }
    interface PhnMenuItemCard {
        "analyticsId": string;
        "customDatalayerProperties"?: TDataLayer;
        "datalayerEventAction"?: EventAction;
        "elementId"?: string;
        "iconLeft"?: string;
        "link"?: string;
        "subtext"?: string;
        "target"?: string;
        "text": string;
    }
    interface PhnModels {
        "breakpoint": number;
        "showHeadline"?: boolean;
    }
    interface PhnMyPorscheIconButton {
        "mode"?: NavigationModeType;
        "theme"?: NavigationThemeType;
    }
    interface PhnMyporscheDrawer {
        "onLogoutEvent"?: (event: PhnMyporscheDrawerCustomEvent<void>) => void;
    }
    interface PhnMyporscheLogin {
        "login": TLink;
        "more"?: TLink | null;
        "onLoginEvent"?: (event: PhnMyporscheLoginCustomEvent<void>) => void;
        "signup": TLink;
        "signupText": string;
    }
    interface PhnRouter {
        "activeRoutingKey": string;
        "breakpoint": number;
        "locale": string;
        "onLoginEvent"?: (event: PhnRouterCustomEvent<void>) => void;
        "receivedContent"?: boolean;
    }
    interface PhnSideDrawer {
        "activeRoutingKey": string;
        "locale": string;
        "onSideDrawerItemClick"?: (event: PhnSideDrawerCustomEvent<string[]>) => void;
    }
    interface PhnSideDrawerItem {
        "analyticsId": string;
        "customDatalayerProperties"?: TDataLayer;
        "datalayerEventAction"?: EventAction;
        "elementId"?: string;
        "hasDoubleDrawerAnimationFinished"?: boolean;
        "iconRight"?: string;
        "isActive"?: boolean;
        "link"?: string;
        "renderSignatures"?: boolean;
        "subtext"?: string;
        "text": string;
    }
    interface PhnSignatureHeading {
        "subtext"?: string;
        "text": string;
    }
    interface PhnSingleDrawer {
        "breakpoint": number;
        "locale": string;
        "receivedContent"?: boolean;
        "usingKeyboard"?: boolean;
    }
    interface PhnWrapper {
        "app"?: ApplicationType;
        "breakpoint": number;
        "displayLogoOnly"?: boolean;
        "limitedWidth"?: boolean;
        "loadingContent"?: boolean;
        "locale": string;
        "mode"?: NavigationModeType;
        "receivedContent"?: boolean;
        "theme"?: NavigationThemeType;
    }
    interface IntrinsicElements {
        "contextual-drawer": ContextualDrawer;
        "phn-autocomplete-search-field": PhnAutocompleteSearchField;
        "phn-back-button": PhnBackButton;
        "phn-backdrop": PhnBackdrop;
        "phn-burger-button": PhnBurgerButton;
        "phn-car-body-types-drawer": PhnCarBodyTypesDrawer;
        "phn-country-recommender": PhnCountryRecommender;
        "phn-dealer-details-drawer": PhnDealerDetailsDrawer;
        "phn-dealer-search-by-number-of-dealers": PhnDealerSearchByNumberOfDealers;
        "phn-dealer-search-form": PhnDealerSearchForm;
        "phn-dealer-search-form-dropdown": PhnDealerSearchFormDropdown;
        "phn-dealer-search-form-geolocation": PhnDealerSearchFormGeolocation;
        "phn-dealer-search-results": PhnDealerSearchResults;
        "phn-double-drawer": PhnDoubleDrawer;
        "phn-drawer-header": PhnDrawerHeader;
        "phn-header": PhnHeader;
        "phn-heading": PhnHeading;
        "phn-level-0": PhnLevel0;
        "phn-level-0-icons": PhnLevel0Icons;
        "phn-level-1": PhnLevel1;
        "phn-logo": PhnLogo;
        "phn-menu": PhnMenu;
        "phn-menu-item": PhnMenuItem;
        "phn-menu-item-card": PhnMenuItemCard;
        "phn-models": PhnModels;
        "phn-my-porsche-icon-button": PhnMyPorscheIconButton;
        "phn-myporsche-drawer": PhnMyporscheDrawer;
        "phn-myporsche-login": PhnMyporscheLogin;
        "phn-router": PhnRouter;
        "phn-side-drawer": PhnSideDrawer;
        "phn-side-drawer-item": PhnSideDrawerItem;
        "phn-signature-heading": PhnSignatureHeading;
        "phn-single-drawer": PhnSingleDrawer;
        "phn-wrapper": PhnWrapper;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "contextual-drawer": LocalJSX.ContextualDrawer & JSXBase.HTMLAttributes<HTMLContextualDrawerElement>;
            "phn-autocomplete-search-field": LocalJSX.PhnAutocompleteSearchField & JSXBase.HTMLAttributes<HTMLPhnAutocompleteSearchFieldElement>;
            "phn-back-button": LocalJSX.PhnBackButton & JSXBase.HTMLAttributes<HTMLPhnBackButtonElement>;
            "phn-backdrop": LocalJSX.PhnBackdrop & JSXBase.HTMLAttributes<HTMLPhnBackdropElement>;
            "phn-burger-button": LocalJSX.PhnBurgerButton & JSXBase.HTMLAttributes<HTMLPhnBurgerButtonElement>;
            "phn-car-body-types-drawer": LocalJSX.PhnCarBodyTypesDrawer & JSXBase.HTMLAttributes<HTMLPhnCarBodyTypesDrawerElement>;
            "phn-country-recommender": LocalJSX.PhnCountryRecommender & JSXBase.HTMLAttributes<HTMLPhnCountryRecommenderElement>;
            "phn-dealer-details-drawer": LocalJSX.PhnDealerDetailsDrawer & JSXBase.HTMLAttributes<HTMLPhnDealerDetailsDrawerElement>;
            "phn-dealer-search-by-number-of-dealers": LocalJSX.PhnDealerSearchByNumberOfDealers & JSXBase.HTMLAttributes<HTMLPhnDealerSearchByNumberOfDealersElement>;
            "phn-dealer-search-form": LocalJSX.PhnDealerSearchForm & JSXBase.HTMLAttributes<HTMLPhnDealerSearchFormElement>;
            "phn-dealer-search-form-dropdown": LocalJSX.PhnDealerSearchFormDropdown & JSXBase.HTMLAttributes<HTMLPhnDealerSearchFormDropdownElement>;
            "phn-dealer-search-form-geolocation": LocalJSX.PhnDealerSearchFormGeolocation & JSXBase.HTMLAttributes<HTMLPhnDealerSearchFormGeolocationElement>;
            "phn-dealer-search-results": LocalJSX.PhnDealerSearchResults & JSXBase.HTMLAttributes<HTMLPhnDealerSearchResultsElement>;
            "phn-double-drawer": LocalJSX.PhnDoubleDrawer & JSXBase.HTMLAttributes<HTMLPhnDoubleDrawerElement>;
            "phn-drawer-header": LocalJSX.PhnDrawerHeader & JSXBase.HTMLAttributes<HTMLPhnDrawerHeaderElement>;
            "phn-header": LocalJSX.PhnHeader & JSXBase.HTMLAttributes<HTMLPhnHeaderElement>;
            "phn-heading": LocalJSX.PhnHeading & JSXBase.HTMLAttributes<HTMLPhnHeadingElement>;
            "phn-level-0": LocalJSX.PhnLevel0 & JSXBase.HTMLAttributes<HTMLPhnLevel0Element>;
            "phn-level-0-icons": LocalJSX.PhnLevel0Icons & JSXBase.HTMLAttributes<HTMLPhnLevel0IconsElement>;
            "phn-level-1": LocalJSX.PhnLevel1 & JSXBase.HTMLAttributes<HTMLPhnLevel1Element>;
            "phn-logo": LocalJSX.PhnLogo & JSXBase.HTMLAttributes<HTMLPhnLogoElement>;
            "phn-menu": LocalJSX.PhnMenu & JSXBase.HTMLAttributes<HTMLPhnMenuElement>;
            "phn-menu-item": LocalJSX.PhnMenuItem & JSXBase.HTMLAttributes<HTMLPhnMenuItemElement>;
            "phn-menu-item-card": LocalJSX.PhnMenuItemCard & JSXBase.HTMLAttributes<HTMLPhnMenuItemCardElement>;
            "phn-models": LocalJSX.PhnModels & JSXBase.HTMLAttributes<HTMLPhnModelsElement>;
            "phn-my-porsche-icon-button": LocalJSX.PhnMyPorscheIconButton & JSXBase.HTMLAttributes<HTMLPhnMyPorscheIconButtonElement>;
            "phn-myporsche-drawer": LocalJSX.PhnMyporscheDrawer & JSXBase.HTMLAttributes<HTMLPhnMyporscheDrawerElement>;
            "phn-myporsche-login": LocalJSX.PhnMyporscheLogin & JSXBase.HTMLAttributes<HTMLPhnMyporscheLoginElement>;
            "phn-router": LocalJSX.PhnRouter & JSXBase.HTMLAttributes<HTMLPhnRouterElement>;
            "phn-side-drawer": LocalJSX.PhnSideDrawer & JSXBase.HTMLAttributes<HTMLPhnSideDrawerElement>;
            "phn-side-drawer-item": LocalJSX.PhnSideDrawerItem & JSXBase.HTMLAttributes<HTMLPhnSideDrawerItemElement>;
            "phn-signature-heading": LocalJSX.PhnSignatureHeading & JSXBase.HTMLAttributes<HTMLPhnSignatureHeadingElement>;
            "phn-single-drawer": LocalJSX.PhnSingleDrawer & JSXBase.HTMLAttributes<HTMLPhnSingleDrawerElement>;
            "phn-wrapper": LocalJSX.PhnWrapper & JSXBase.HTMLAttributes<HTMLPhnWrapperElement>;
        }
    }
}
