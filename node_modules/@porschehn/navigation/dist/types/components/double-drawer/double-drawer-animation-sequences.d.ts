import { AnimationStatusCallbacks, WithRequired } from '../../services/animations/animation-manager';
export type RouteChangeCallbacks = {
  onSlideMainDrawerOutEnd: () => Promise<unknown>;
} & WithRequired<GrowHighlightCallbacks, 'onGrowHighlightEnd'>;
export type GrowHighlightCallbacks = {
  onGrowHighlightEnd?: (() => Promise<unknown>) | (() => void);
  onGrowHighlightStart?: (() => Promise<unknown>) | (() => void);
};
export type ShrinkHighlightCallbacks = {
  onShrinkHighlightEnd?: (() => Promise<unknown>) | (() => void);
  onShrinkHighlightStart?: (() => Promise<unknown>) | (() => void);
};
export declare const registerOpenDoubleDrawerSequence: ({ onAnimationStarts, onAnimationEnds }: Required<AnimationStatusCallbacks>) => void;
export declare const registerCloseDoubleDrawerSequence: ({ onBackdropFadeOutEnd, onAnimationStarts, onAnimationEnds }: Required<AnimationStatusCallbacks> & {
  onBackdropFadeOutEnd: () => Promise<void>;
}) => void;
export declare const registerTransitionSequence: ({ onGrowHighlightEnd, onSlideMainDrawerOutEnd }: RouteChangeCallbacks, direction?: 'normal' | 'reverse') => void;
export declare const registerForwardToNextMenuSequence: ({ onSlideMainDrawerOutEnd, onGrowHighlightEnd }: RouteChangeCallbacks) => void;
export declare const registerBackToPreviousMenuSequence: ({ onGrowHighlightEnd, onSlideMainDrawerOutEnd }: RouteChangeCallbacks) => void;
export declare const isPlayingDoubleDrawerAnimation: () => boolean;
