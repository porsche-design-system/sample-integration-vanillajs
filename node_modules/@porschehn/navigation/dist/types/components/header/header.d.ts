import { EventEmitter } from '../../stencil-public-runtime';
import { Message } from '../../entities/auth';
import { ShopStateStoreTypes } from '../../state/shop-state-store';
import { NavigationModeType, NavigationThemeType } from '../../utility/constants';
import { ApplicationType } from '../../utility/constants/app';
export declare class Header {
  locale: string;
  env: string;
  clientId: string;
  pageName: string;
  theme: NavigationThemeType;
  mode: NavigationModeType;
  limitedWidth: string;
  app: ApplicationType;
  initialRoutingPath: string;
  displayLogoOnly: boolean;
  numberOfShoppingItems: number;
  wishlistItemsNumber: number;
  shopInformation: string;
  loadingContent: boolean;
  receivedContent: boolean;
  breakpoint: number;
  private eventPreventedTimeout;
  private checkedMarketingConsent;
  private loadedToggles;
  navigationDidLoad: EventEmitter<void>;
  phnLogout: EventEmitter<void>;
  phnLogin: EventEmitter<void>;
  localeWatchHandler(): Promise<void>;
  pageNameWatchHandler(): void;
  newEnvReceived(): Promise<void>;
  appWatcher(newValue: string): Promise<void>;
  breakpointWatcher(): void;
  watchShopVariables(newValue: number, _: string, propName: keyof ShopStateStoreTypes): void;
  watchShopVariable(information: string, _: string, propName: keyof ShopStateStoreTypes): void;
  initialRoutingPathWatcher(): void;
  resizeHandler(): void;
  newAuthMessageReceived(event: Message): Promise<void>;
  handleLogin(): Promise<void>;
  handleLogout(): Promise<void>;
  handleUserCentricsReady(): void;
  handleUserCentricsInitalization(): void;
  navigationLoadedHandler({ detail: navigationLoaded }: CustomEvent<boolean>): void;
  private checkMarketingConsent;
  private initEnvironment;
  private initNavContentStore;
  private setDealerSearchResultsStore;
  private handleInitialRoutingKeyPath;
  componentWillLoad(): void;
  componentDidLoad(): Promise<void>;
  disconnectedCallback(): void;
  private hasLimitedWidth;
  render(): HTMLPhnHeaderElement;
}
