import { EffectType } from './animation-effects';
declare const AnimationsAction: {
  readonly slideOutToLeftRelative: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
  readonly slideInFromRightRelative: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
  readonly slideInFromLeftRelative: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
  readonly slideOutToRightRelative: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
  readonly shrinkElement: (el: HTMLElement, progress: number, { to }: EffectType) => void;
  readonly growElement: (el: HTMLElement, progress: number, { to }: EffectType) => void;
  readonly slideInFromRight: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
  readonly slideInFromLeft: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
  readonly slideOutToRight: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
  readonly slideOutToLeft: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
  readonly fadeOut: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
  readonly fadeIn: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
  readonly fadeInBackdrop: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
  readonly fadeOutBackdrop: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
  readonly slideInFromRightFixed: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
  readonly slideOutToRightFixed: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
  readonly slideInFromLeftFixed: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
  readonly slideOutToLeftFixed: (el: HTMLElement, progress: number, { from, to }: EffectType) => void;
};
export default AnimationsAction;
