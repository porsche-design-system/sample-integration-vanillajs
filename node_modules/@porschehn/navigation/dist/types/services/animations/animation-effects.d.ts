import AnimationsAction from './animation-actions';
export type AvailableAnimations = keyof typeof AnimationsAction;
type TimingFunction = keyof typeof timingFunctions;
export type AnimationGeneratorType = {
  cleanUpAfterAnimation?: ((el: HTMLElement) => Promise<void>) | ((el: HTMLElement) => void) | boolean;
  duration?: number;
};
export type EffectType = {
  name: AvailableAnimations;
  to?: number;
  from?: number;
  timingFunction?: TimingFunction;
};
export declare const getAnimationEffect: (effectName: AvailableAnimations) => (el: HTMLElement, progress: number, effect: EffectType) => void;
declare const timingFunctions: {
  readonly easeInOutSin: (timeFraction: number) => number;
  readonly easeInOutQuad: (timeFraction: number) => number;
  readonly linear: (timeFraction: number) => number;
  readonly cubicBezierStart: (timeFraction: number) => number;
  readonly cubicBezierEnd: (timeFraction: number) => number;
};
export declare function animationPromiseGenerator(el: HTMLElement, animation: AnimationGeneratorType & EffectType): Promise<void>;
export {};
