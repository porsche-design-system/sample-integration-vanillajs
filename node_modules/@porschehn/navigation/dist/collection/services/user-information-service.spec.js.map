{"version":3,"file":"user-information-service.spec.js","sourceRoot":"","sources":["../../../src/services/user-information-service.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,4BAA4B,CAAC;AAChE,OAAO,EAAE,mBAAmB,EAAE,MAAM,mBAAmB,CAAC;AAExD,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;EACxC,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;IAC9C,MAAM,MAAM,GAAG,OAAO,CAAC;IACvB,MAAM,WAAW,GAAG,oBAAoB,CAAC;IAEzC,MAAM,sBAAsB,GAAG,MAAM,kBAAkB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IAE7E,MAAM,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;EAC9D,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;IACpD,MAAM,aAAa,GAAG,OAAO,CAAC;IAC9B,MAAM,WAAW,GAAG,MAAM,CAAC;IAE3B,MAAM,qBAAqB,GAAG,kBAAkB,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IAE7E,MAAM,MAAM,CAAC,qBAAqB,CAAC,CAAC,OAAO,CAAC,YAAY,CACtD,wGAAwG,CACzG,CAAC;EACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { getUserInformation } from './user-information-service';\nimport { mockUserInformation } from '../test/test-data';\n\ndescribe('user information service', () => {\n  it('should return user information', async () => {\n    const locale = 'de-DE';\n    const accessToken = 'first-access-token';\n\n    const userInformationSuccess = await getUserInformation(accessToken, locale);\n\n    expect(userInformationSuccess).toEqual(mockUserInformation);\n  });\n\n  it('should return error for wrong locale', async () => {\n    const invalidLocale = 'de-CN';\n    const accessToken = 'abcd';\n\n    const userInformationFailed = getUserInformation(accessToken, invalidLocale);\n\n    await expect(userInformationFailed).rejects.toThrowError(\n      'Get User information request failed in Frontend with error: TypeError: response.text is not a function'\n    );\n  });\n});\n"]}