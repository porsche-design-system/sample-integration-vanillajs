{"version":3,"file":"matomo-ab-testing-service.spec.js","sourceRoot":"","sources":["../../../../../src/services/ab-testing/test/matomo-ab-testing-service.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { Environment } from '../../../entities/environment';\nimport { MatomoAbTestingService } from '../matomo-ab-testing-service';\nimport { navStateStore } from '../../../state/nav-state-store';\nimport experimentsTestdata, { contentDefinitions, testMenu } from '../../../test/experiments.testdata';\nimport { NaviError, NaviErrorTypes } from '../../../utility/navi-error';\nimport Logger from '../../logger';\nimport * as utilityHelper from '../../../utility/helper';\nimport featureToggles from '../../feature-toggles';\nimport { Experiment, Variation } from '../../../utility/constants/ab-testing';\nimport { navContentStore } from '../../../state/nav-content-store';\n\nconst clientMock = {\n  AbTesting: {\n    Experiment: jest.fn()\n  }\n};\n\nconst mockEmptyExperiment = {\n  name: 'experiment_present',\n  getActivatedVariationName: () => {\n    return 'variation_not_present';\n  },\n  variations: []\n};\n\nconst mockExistingExperiment = {\n  name: 'experiment_present',\n  getActivatedVariationName: () => {\n    return 'variation_present';\n  },\n  variations: [\n    {\n      name: 'variation_present',\n      activate: jest.fn()\n    }\n  ]\n};\n\ndescribe('Matomo AB testing Service', () => {\n  let loggerMock: jest.SpyInstance;\n\n  beforeEach(() => {\n    loggerMock = jest.spyOn(Logger, 'error');\n    jest.spyOn(featureToggles, 'isABTestingToggleActive').mockReturnValue(true);\n  });\n\n  describe('Init', () => {\n    describe.each<Environment>(['production', 'preview'])('Initialize service', (env) => {\n      it(`should inject matomo script for ${env}`, async () => {\n        navStateStore.state.env = env;\n\n        const service = new MatomoAbTestingService();\n        service.init();\n\n        expect(document.getElementsByTagName('script')[0].text).toEqual(getMatomoScript(env));\n      });\n    });\n\n    it('should set client', function () {\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'injectScript').mockResolvedValue(true);\n      const w = window as any;\n      w.Matomo = clientMock;\n      const service = new MatomoAbTestingService();\n\n      expect(() => service.init()).not.toThrow();\n    });\n\n    it('should catch error if no matomo script is available client', async function () {\n      jest.spyOn(utilityHelper, 'getHTMLElement').mockReturnValue(null);\n      const service = new MatomoAbTestingService();\n      await service.init();\n\n      expect(loggerMock).toHaveBeenCalledWith(\n        'Could not initialize AbTesting',\n        new NaviError('There is no HTML Script element available', NaviErrorTypes.GENERAL)\n      );\n    });\n\n    it('set client should throw error', async function () {\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'injectScript').mockResolvedValue(true);\n\n      const service = new MatomoAbTestingService();\n      await service.init();\n\n      expect(loggerMock).toHaveBeenCalledWith(\n        'Could not initialize AbTesting',\n        new NaviError('No client is set, you must call init first', NaviErrorTypes.GENERAL)\n      );\n    });\n\n    it('should load Experiments', async () => {\n      jest\n        .spyOn(MatomoAbTestingService.prototype as any, 'getAbTestingDefinitions')\n        .mockReturnValue(experimentsTestdata);\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'getClient').mockReturnValue(clientMock);\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'injectScript').mockResolvedValue(true);\n\n      const service = new MatomoAbTestingService();\n      await service.init();\n\n      expect(clientMock.AbTesting.Experiment).toHaveBeenCalledTimes(1);\n    });\n\n    it('should init Ab Testing based on Matomo', async () => {\n      const setClientMock = jest.spyOn(MatomoAbTestingService.prototype as any, 'setClient').mockResolvedValue(true);\n      const loadExperimentsMock = jest\n        .spyOn(MatomoAbTestingService.prototype as any, 'loadExperiments')\n        .mockResolvedValue(true);\n\n      const service = new MatomoAbTestingService();\n      await service.init();\n\n      expect(setClientMock).toHaveBeenCalledTimes(1);\n      expect(loadExperimentsMock).toHaveBeenCalledTimes(1);\n    });\n\n    it('should thrown error when Ab Testing init fails', async () => {\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'setClient').mockRejectedValue(false);\n\n      const service = new MatomoAbTestingService();\n\n      await expect(() => service.init()).not.toThrow();\n    });\n\n    it('should Log error when Ab Testing init fails', async () => {\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'setClient').mockRejectedValue('Failed');\n\n      const service = new MatomoAbTestingService();\n      await service.init();\n\n      expect(loggerMock).toHaveBeenCalled();\n      expect(loggerMock).toHaveBeenCalledWith('Could not initialize AbTesting', 'Failed');\n    });\n  });\n\n  describe('Execute', () => {\n    beforeEach(() => {\n      navContentStore.state.abExperiences = contentDefinitions;\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'getClient').mockReturnValue(clientMock);\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'injectScript').mockResolvedValue(true);\n    });\n\n    it('should throw error when no experiment is found', () => {\n      const service = new MatomoAbTestingService();\n\n      service.execute('experiment_not_present');\n\n      expect(loggerMock).toHaveBeenCalled();\n      expect(loggerMock).toHaveBeenCalledWith(\n        'Could not execute experiment experiment_not_present',\n        new NaviError('No experiment with name: experiment_not_present found', NaviErrorTypes.GENERAL)\n      );\n    });\n\n    it('should throw error when no variation is found', () => {\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'getExperiment').mockReturnValue(mockEmptyExperiment);\n\n      const service = new MatomoAbTestingService();\n      service.execute('experiment_present');\n\n      expect(loggerMock).toHaveBeenCalled();\n      expect(loggerMock).toHaveBeenCalledWith(\n        'Could not execute experiment experiment_present',\n        new NaviError(\n          'No variation in experiment: experiment_present with name: variation_not_present found',\n          NaviErrorTypes.GENERAL\n        )\n      );\n    });\n\n    it('should call variation activate function', function () {\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'getExperiment').mockReturnValue(mockExistingExperiment);\n\n      const service = new MatomoAbTestingService();\n      service.execute('experiment_present');\n      expect(mockExistingExperiment.variations[0].activate).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('feature Toggle', () => {\n    it('should not set client if feature toggle is false', async () => {\n      const setClientMock = jest.spyOn(MatomoAbTestingService.prototype as any, 'setClient').mockReturnValue(false);\n      const loadExperimentsMock = jest\n        .spyOn(MatomoAbTestingService.prototype as any, 'loadExperiments')\n        .mockReturnValue(false);\n      jest.spyOn(featureToggles, 'isABTestingToggleActive').mockReturnValue(false);\n\n      const service = new MatomoAbTestingService();\n      await service.init();\n\n      expect(setClientMock).not.toHaveBeenCalled();\n      expect(loadExperimentsMock).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('content experiments', () => {\n    beforeEach(() => {\n      navContentStore.state.abExperiences = contentDefinitions;\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'getClient').mockReturnValue(clientMock);\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'injectScript').mockResolvedValue(true);\n    });\n\n    it('should load content experiments', async () => {\n      const service = new MatomoAbTestingService();\n\n      await service.loadContentGeneratorExperiments();\n\n      expect(clientMock.AbTesting.Experiment).toHaveBeenCalledTimes(1);\n      const experimentParameters = clientMock.AbTesting.Experiment.mock.calls[0][0];\n      expect(experimentParameters.variations[0].name).toEqual('variation1');\n      expect(experimentParameters.variations[0].activate()).toEqual([\n        { children: [], id: '1', link: 'var1 link', text: 'var1 text' }\n      ]);\n      expect(experimentParameters.variations[1].name).toEqual('original');\n      expect(experimentParameters.variations[1].activate()).toEqual(null);\n    });\n\n    it('should return original menu children for original variation', async () => {\n      const variation: Variation = {\n        name: 'original',\n        activate: jest.fn()\n      };\n\n      const experiment: Experiment = {\n        name: 'experiment1',\n        getActivatedVariationName: jest.fn(),\n        variations: [variation]\n      };\n\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'getExperiment').mockReturnValue(experiment);\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'getVariation').mockReturnValue(variation);\n\n      const service = new MatomoAbTestingService();\n\n      const originalChildren = service.executeContentChange(testMenu);\n\n      expect(originalChildren).toEqual(testMenu.children);\n    });\n\n    it('should return original menu children when feature toggle is disabled', async () => {\n      jest.spyOn(featureToggles, 'isABTestingToggleActive').mockReturnValue(false);\n      const service = new MatomoAbTestingService();\n\n      const variationChildren = service.executeContentChange(testMenu);\n\n      expect(variationChildren).toEqual(testMenu.children);\n    });\n\n    it('executeContentChange should return changed content', async () => {\n      const variation: Variation = {\n        name: 'variation1',\n        activate: jest.fn()\n      };\n\n      const experiment: Experiment = {\n        name: 'experiment1',\n        getActivatedVariationName: jest.fn(),\n        variations: [variation]\n      };\n\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'getExperiment').mockReturnValue(experiment);\n      jest.spyOn(MatomoAbTestingService.prototype as any, 'getVariation').mockReturnValue(variation);\n\n      const service = new MatomoAbTestingService();\n      service.executeContentChange(testMenu);\n\n      expect(variation.activate).toHaveBeenCalledTimes(1);\n    });\n  });\n});\n\nfunction getMatomoScript(currentEnvironment: string): string {\n  return `var _paq = window._paq = window._paq || [];\n    _paq.push(['trackPageView']);\n    _paq.push(['enableLinkTracking']);\n    (function() {\n      var u=\"https://porsche.matomo.cloud/\";\n      _paq.push(['setTrackerUrl', u+'matomo.php']);\n      _paq.push(['setSiteId', ${currentEnvironment === 'production' ? '7' : '8'}]);\n      var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n      g.async=true; g.src='//cdn.matomo.cloud/porsche.matomo.cloud/matomo.js'; s.parentNode.insertBefore(g,s);\n    })\n   ();`;\n}\n"]}