{"version":3,"file":"matomo-ab-testing-service.js","sourceRoot":"","sources":["../../../../src/services/ab-testing/matomo-ab-testing-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { navStateStore } from '../../state/nav-state-store';\nimport { NaviError, NaviErrorTypes } from '../../utility/navi-error';\nimport { IAbTestingService } from './ab-testing-service.interface';\nimport {\n  AvailableExperiment,\n  Experiment,\n  experimentsDefinitions,\n  MatomoClient,\n  Variation\n} from '../../utility/constants/ab-testing';\nimport Logger from '../logger';\nimport { getHTMLElement } from '../../utility/helper';\nimport featureToggles from '../feature-toggles';\nimport { TMenu, VariationDefinition } from '../../entities/content';\nimport { navContentStore } from '../../state/nav-content-store';\n\nexport class MatomoAbTestingService implements IAbTestingService {\n  client: MatomoClient | null = null;\n  experiments: Experiment[] = [];\n\n  async init(): Promise<void> {\n    if (featureToggles.isABTestingToggleActive()) {\n      try {\n        await this.setClient();\n        await this.loadExperiments();\n      } catch (e) {\n        Logger.error('Could not initialize AbTesting', e as Error);\n      }\n    }\n  }\n\n  execute(experimentName: AvailableExperiment): void {\n    if (featureToggles.isABTestingToggleActive()) {\n      try {\n        const experiment = this.getExperiment(experimentName);\n        const variation = this.getVariation(experiment);\n        variation.activate();\n      } catch (e) {\n        Logger.error(`Could not execute experiment ${experimentName}`, e as Error);\n      }\n    }\n  }\n\n  executeContentChange(menu: TMenu): TMenu[] {\n    if (featureToggles.isABTestingToggleActive()) {\n      try {\n        const experiment = this.getExperiment(menu.experienceName);\n        const variation = this.getVariation(experiment);\n        if (variation.name === 'original') {\n          return menu.children;\n        }\n        return variation.activate() as unknown as TMenu[];\n      } catch (e) {\n        Logger.error(`Could not execute experiment ${menu.experienceName}`, e as Error);\n      }\n    }\n    return menu.children;\n  }\n\n  private async setClient(): Promise<MatomoClient> {\n    if (this.client) return Promise.resolve(this.client);\n\n    await this.injectScript();\n    const w = window as any;\n    this.client = w.Matomo as MatomoClient;\n    return this.client;\n  }\n\n  private async loadExperiments(): Promise<void> {\n    const client = this.getClient();\n    const ExperimentCreator = client.AbTesting.Experiment;\n    const experimentsDefinitions = this.getAbTestingDefinitions();\n    for (const experimentKey in experimentsDefinitions) {\n      const experimentDefinition = experimentsDefinitions[experimentKey];\n      const experiment = new ExperimentCreator(experimentDefinition);\n      this.experiments.push(experiment);\n    }\n  }\n\n  async loadContentGeneratorExperiments(): Promise<void> {\n    if (featureToggles.isABTestingToggleActive()) {\n      const client = this.getClient();\n      const ExperimentCreator = client.AbTesting.Experiment;\n      const contentDefinitions = navContentStore.state.abExperiences;\n\n      if (contentDefinitions) {\n        for (const experimentDefinition of contentDefinitions) {\n          const variationDefinition: Variation[] = experimentDefinition.variations.map(\n            (variation: VariationDefinition) => ({\n              name: variation.name,\n              activate: () => variation.children\n            })\n          );\n          variationDefinition.push({\n            name: 'original',\n            activate: () => null\n          });\n          const experiment = new ExperimentCreator({ ...experimentDefinition, variations: variationDefinition });\n          this.experiments.push(experiment);\n        }\n      }\n    }\n  }\n\n  private getExperiment(name: AvailableExperiment): Experiment {\n    const experiment = this.experiments.find((experiment) => experiment.name === name);\n    if (!experiment) throw new NaviError(`No experiment with name: ${name} found`, NaviErrorTypes.GENERAL);\n    return experiment;\n  }\n\n  private getVariation(experiment: Experiment): Variation {\n    const variationName = experiment.getActivatedVariationName();\n    const variation = experiment.variations.find((variation) => variation.name === variationName);\n\n    if (!variation)\n      throw new NaviError(\n        `No variation in experiment: ${experiment.name} with name: ${variationName} found`,\n        NaviErrorTypes.GENERAL\n      );\n    return variation;\n  }\n\n  private getClient(): MatomoClient {\n    if (!this.client) throw new NaviError('No client is set, you must call init first', NaviErrorTypes.GENERAL);\n    return this.client;\n  }\n\n  private injectScript(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      const s = document.createElement('script');\n      s.text = this.getMatomoScript();\n      document.head.appendChild(s);\n\n      const matomoScript = getHTMLElement(\n        document.querySelector('script[src=\"//cdn.matomo.cloud/porsche.matomo.cloud/matomo.js\"]')\n      );\n\n      if (matomoScript) {\n        matomoScript.onload = () => {\n          resolve(true);\n        };\n        matomoScript.onerror = () => reject(new NaviError('Could not inject Matomo script', NaviErrorTypes.GENERAL));\n      } else {\n        reject(new NaviError('There is no HTML Script element available', NaviErrorTypes.GENERAL));\n      }\n    });\n  }\n\n  private getAbTestingDefinitions() {\n    return experimentsDefinitions;\n  }\n\n  private getMatomoScript(): string {\n    const currentEnvironment = navStateStore.state.env;\n    return `var _paq = window._paq = window._paq || [];\n    _paq.push(['trackPageView']);\n    _paq.push(['enableLinkTracking']);\n    (function() {\n      var u=\"https://porsche.matomo.cloud/\";\n      _paq.push(['setTrackerUrl', u+'matomo.php']);\n      _paq.push(['setSiteId', ${currentEnvironment === 'production' ? '7' : '8'}]);\n      var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n      g.async=true; g.src='//cdn.matomo.cloud/porsche.matomo.cloud/matomo.js'; s.parentNode.insertBefore(g,s);\n    })\n   ();`;\n  }\n}\n\nexport const MatomoAbTesting = new MatomoAbTestingService();\n"]}