{"version":3,"file":"maps-service.spec.js","sourceRoot":"","sources":["../../../src/services/maps-service.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;EAC5B,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;IACzD,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;EAChF,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;IAChE,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;IACrE,MAAM,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;EAC1E,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,2DAA2D,EAAE,GAAG,EAAE;IACnE,MAAM,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACvE,MAAM,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;EACtE,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,8DAA8D,EAAE,GAAG,EAAE;IACtE,MAAM,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IACvE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IAC9D,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;EAC1E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { NaviErrorTypes } from '../utility/navi-error';\nimport { getErrorType } from './maps-service';\n\ndescribe('getErrorType', () => {\n  it('should return INVALID_INPUT for INVALID_REQUEST', () => {\n    expect(getErrorType('INVALID_REQUEST')).toEqual(NaviErrorTypes.INVALID_INPUT);\n  });\n\n  it('should return NO_RESULTS for NOT_FOUND or ZERO_RESULTS', () => {\n    expect(getErrorType('NOT_FOUND')).toEqual(NaviErrorTypes.NO_RESULTS);\n    expect(getErrorType('ZERO_RESULTS')).toEqual(NaviErrorTypes.NO_RESULTS);\n  });\n\n  it('should return RETRY for OVER_QUERY_LIMIT or UNKNOWN_ERROR', () => {\n    expect(getErrorType('OVER_QUERY_LIMIT')).toEqual(NaviErrorTypes.RETRY);\n    expect(getErrorType('UNKNOWN_ERROR')).toEqual(NaviErrorTypes.RETRY);\n  });\n\n  it('should return GENERAL for ERROR or REQUEST_DENIED or default', () => {\n    expect(getErrorType('REQUEST_DENIED')).toEqual(NaviErrorTypes.GENERAL);\n    expect(getErrorType('ERROR')).toEqual(NaviErrorTypes.GENERAL);\n    expect(getErrorType('any other error')).toEqual(NaviErrorTypes.GENERAL);\n  });\n});\n"]}