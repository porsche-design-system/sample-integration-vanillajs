{"version":3,"file":"window-service.spec.js","sourceRoot":"","sources":["../../../src/services/window-service.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import windowService, { getErrorType, MarketingWindow } from './window-service';\n\ndescribe('window service', () => {\n  it('should return location', () => {\n    expect(windowService.location).not.toBeUndefined();\n  });\n\n  it('should return sessionStorage', () => {\n    expect(windowService.sessionStorage).not.toBeUndefined();\n  });\n\n  describe('GoogleMaps', () => {\n    const url = 'http://google-maps-api-url/';\n\n    it('should add googlemaps script, if googlemaps is not already loaded', async () => {\n      jest.restoreAllMocks();\n      const promise = windowService.fetchGoogleMapsApi('apiKey', url);\n\n      const googleMapsScript = document.getElementById('googleMaps');\n      expect(googleMapsScript).toBeTruthy();\n\n      if (googleMapsScript instanceof HTMLScriptElement) {\n        googleMapsScript.onload?.(new Event('test'));\n        expect(googleMapsScript.src).toBe(url);\n      }\n\n      await promise;\n    });\n\n    it('should not fetch googlemaps script, if googlemaps is already loaded', async () => {\n      window.google = { maps: { version: 'version' } as typeof google.maps };\n\n      await windowService.fetchGoogleMapsApi('apiKey', url);\n\n      expect(document.getElementById('googleMaps')).toBeNull();\n    });\n\n    it('should not fetch googlemaps script, if googlemaps script is already added', async () => {\n      const script = document.createElement('script');\n      script.src = url;\n      script.id = 'googleMaps';\n      document.head.appendChild(script);\n\n      await windowService.fetchGoogleMapsApi('apiKey', url);\n\n      expect(document.querySelectorAll('#googleMaps')).toHaveLength(1);\n    });\n  });\n\n  describe('getErrorType', () => {\n    it('should return GEOLOCATION_DENIED for PERMISSION_DENIED', () => {\n      const positionError: GeolocationPositionError = {\n        code: 1,\n        message: 'Permission got denied',\n        PERMISSION_DENIED: 1,\n        POSITION_UNAVAILABLE: 2,\n        TIMEOUT: 3\n      };\n      expect(getErrorType(positionError)).toEqual('GEOLOCATION_DENIED');\n    });\n\n    it('should return RETRY for POSITION_UNAVAILABLE', () => {\n      const positionError: GeolocationPositionError = {\n        code: 2,\n        message: 'Some internal error happened',\n        PERMISSION_DENIED: 1,\n        POSITION_UNAVAILABLE: 2,\n        TIMEOUT: 3\n      };\n      expect(getErrorType(positionError)).toEqual('RETRY');\n    });\n\n    it('should return RETRY for TIMEOUT', () => {\n      const positionError: GeolocationPositionError = {\n        code: 3,\n        message: 'This timed out',\n        PERMISSION_DENIED: 1,\n        POSITION_UNAVAILABLE: 2,\n        TIMEOUT: 3\n      };\n      expect(getErrorType(positionError)).toEqual('RETRY');\n    });\n\n    it('should return GENERAL for default', () => {\n      const positionError: GeolocationPositionError = {\n        code: 0,\n        message: 'Unknown error',\n        PERMISSION_DENIED: 1,\n        POSITION_UNAVAILABLE: 2,\n        TIMEOUT: 3\n      };\n      expect(getErrorType(positionError)).toEqual('GENERAL');\n    });\n  });\n\n  /**\n   * site does NOT EVEN HAVE PCOM?! -> consent NOT needed\n   * site does NOT have consent mechanism -> consent NOT needed\n   * site does have consent mechanism + isConsentActive NOT exists -> consent NOT needed\n   * site does have consent mechanism + isConsentActive exists + isConsentActive -> consent needed\n   * site does have consent mechanism + NOT isConsentActive -> consent NOT needed\n   */\n\n  describe('maybeCheckMarketingConsent', () => {\n    it('marketing consent is not needed if header is loaded outside of PCOM', () => {\n      expect(windowService.maybeCheckMarketingConsent(() => null)).toBeFalsy();\n    });\n\n    it('marketing consent is not needed if consent is not needed by law', () => {\n      (window as MarketingWindow).PCOM = {};\n      expect(windowService.maybeCheckMarketingConsent(() => null)).toBeFalsy();\n    });\n\n    it('marketing consent is checked if checkConsent is a function', () => {\n      const checkConsent = jest.fn();\n      const handleSuccess = jest.fn();\n\n      (window as MarketingWindow).PCOM = { globalConsent: { checkConsent } };\n\n      expect(windowService.maybeCheckMarketingConsent(handleSuccess)).toBeTruthy();\n      expect(checkConsent).toBeCalledWith({\n        processorId: 'Google Maps',\n        mapContainer: '',\n        timeoutVar: {},\n        callbacks: {\n          success: handleSuccess\n        }\n      });\n    });\n\n    it('marketing consent is not needed if user centrics does not exist', () => {\n      (window as MarketingWindow).ucPrivacyShield = {};\n      expect(windowService.maybeCheckMarketingConsent(() => null)).toBeFalsy();\n    });\n\n    it('marketing consent is checked if user centrics exists', () => {\n      const checkConsent = jest.fn();\n      const handleSuccess = jest.fn();\n\n      (window as MarketingWindow).ucPrivacyShield = { checkConsent };\n\n      expect(windowService.maybeCheckMarketingConsent(handleSuccess)).toBeTruthy();\n      expect(checkConsent).toBeCalledWith({\n        processorId: 'Google Maps',\n        mapContainer: '',\n        timeoutVar: {},\n        callbacks: {\n          success: handleSuccess\n        }\n      });\n    });\n  });\n\n  xdescribe('crypto', () => {\n    it('produces the right challenge for a valid code', async () => {\n      const code = windowService.generateRandom(43);\n      const result = await windowService.deriveChallenge(code);\n      expect(result).toBeTruthy();\n      expect(result).not.toContain('=');\n    });\n\n    it('generateRandom produces different values', () => {\n      const code1 = windowService.generateRandom(10);\n      const code2 = windowService.generateRandom(10);\n      expect(code1).not.toEqual(code2);\n    });\n\n    it('produces the right base64 encoded challenge', async () => {\n      const code = new Array(6).join('challenge');\n      const challenge = await windowService.deriveChallenge(code);\n      expect(challenge).toEqual('MYdqq2Vt_ZLMAWpXXsjGIrlxrCF2e4ZP4SxDf7cm_tg');\n    });\n  });\n});\n"]}