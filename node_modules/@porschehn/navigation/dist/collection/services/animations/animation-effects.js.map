{"version":3,"file":"animation-effects.js","sourceRoot":"","sources":["../../../../src/services/animations/animation-effects.ts"],"names":[],"mappings":"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","sourcesContent":["import { isPromise } from '../../utility/helper';\nimport windowService from '../window-service';\nimport AnimationsAction from './animation-actions';\n\nexport type AvailableAnimations = keyof typeof AnimationsAction;\ntype TimingFunction = keyof typeof timingFunctions;\nexport type AnimationGeneratorType = {\n  cleanUpAfterAnimation?: ((el: HTMLElement) => Promise<void>) | ((el: HTMLElement) => void) | boolean;\n  duration?: number;\n};\nexport type EffectType = {\n  name: AvailableAnimations;\n  to?: number;\n  from?: number;\n  timingFunction?: TimingFunction;\n};\n\nconst resetStyle = (el: HTMLElement): void => {\n  el.removeAttribute('style');\n};\n\nexport const getAnimationEffect = (\n  effectName: AvailableAnimations\n): ((el: HTMLElement, progress: number, effect: EffectType) => void) => {\n  return AnimationsAction[effectName];\n};\n\n/* istanbul ignore next */\nconst timingFunctions = {\n  easeInOutSin: (timeFraction: number): number => {\n    return -(Math.cos(Math.PI * timeFraction) - 1) / 2;\n  },\n  easeInOutQuad: (timeFraction: number): number => {\n    if (timeFraction < 0.5) {\n      return (2 * timeFraction) / 2;\n    } else {\n      return (2 - 2 * (1 - timeFraction)) / 2;\n    }\n  },\n  linear: (timeFraction: number): number => {\n    return timeFraction < 0 || timeFraction > 1 ? Math.round(timeFraction) : timeFraction;\n  },\n  cubicBezierStart: (timeFraction: number) => {\n    return cubicBezier(timeFraction, 0.1, 0.0, 0.0, 100);\n  },\n  cubicBezierEnd: (timeFraction: number) => {\n    return cubicBezier(timeFraction, 0.3, 0.0, 1.0, 0.8);\n  }\n} as const;\n\nexport function animationPromiseGenerator(\n  el: HTMLElement,\n  animation: AnimationGeneratorType & EffectType\n): Promise<void> {\n  const { duration = 300, cleanUpAfterAnimation = false, ...effect } = animation;\n\n  return new Promise<void>((resolve) => {\n    let animationFrame: number;\n\n    const timeout = setTimeout(() => {\n      cancelAnimationFrame(animationFrame);\n      finishAnimation();\n    }, duration + 50);\n\n    function finishAnimation() {\n      playEffect(el, 1, effect);\n\n      clearTimeout(timeout);\n      if (typeof cleanUpAfterAnimation === 'function') {\n        const maybePromise: void | Promise<void> = cleanUpAfterAnimation(el);\n        if (isPromise<void>(maybePromise)) {\n          maybePromise.then(() => resolve());\n          return;\n        }\n      } else if (cleanUpAfterAnimation === true) {\n        resetStyle(el);\n      }\n\n      resolve();\n    }\n\n    const start = performance.now();\n    const playEffect = getAnimationEffect(effect.name);\n    function animate(time: DOMHighResTimeStamp) {\n      const timingFunction = timingFunctions[effect.timingFunction || 'linear'];\n      let progress = timingFunction((time - start) / duration);\n      progress = Math.round((progress + Number.EPSILON) * 1000) / 1000;\n\n      const ANIMATION_HAS_FINISHED = progress >= 1;\n      const ANIMATION_ON_PROGRESS = progress < 1;\n\n      if (ANIMATION_HAS_FINISHED) {\n        return finishAnimation();\n      }\n\n      playEffect(el, progress, effect);\n\n      if (ANIMATION_ON_PROGRESS) {\n        animationFrame = windowService.requestAnimationFrame(animate);\n      }\n    }\n\n    animationFrame = windowService.requestAnimationFrame(animate);\n  });\n}\n\nfunction cubicBezier(t: number, initial: number, p1: number, p2: number, final: number) {\n  return (\n    (1 - t) * (1 - t) * (1 - t) * initial +\n    3 * (1 - t) * (1 - t) * t * p1 +\n    3 * (1 - t) * t * t * p2 +\n    t * t * t * final\n  );\n}\n"]}