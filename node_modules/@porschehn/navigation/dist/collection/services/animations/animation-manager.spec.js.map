{"version":3,"file":"animation-manager.spec.js","sourceRoot":"","sources":["../../../../src/services/animations/animation-manager.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage, SpecPage } from '@stencil/core/testing';\nimport { endAnimation } from '../../test/element-helpers';\nimport { getHTMLElement, loadRootElement } from '../../utility/helper';\nimport animationManager, { AnimationSequence, makeSequence, SequenceIdentifier } from './animation-manager';\n\ntype SequenceRegisterParams = {\n  sequenceIdentifier: SequenceIdentifier;\n  animationSequence: AnimationSequence;\n};\n\ndescribe('Animation manager', () => {\n  const elementSelector = '#animate';\n  const testSequence: SequenceRegisterParams = {\n    sequenceIdentifier: 'abcdef',\n    animationSequence: makeSequence([[{ elementSelector, animation: { className: 'growElement' } }]])\n  };\n\n  beforeEach(() => {\n    jest.spyOn(animationManager, 'initialize').mockRestore();\n    jest.spyOn(animationManager, 'register').mockRestore();\n    jest.spyOn(animationManager, 'play').mockRestore();\n    jest.spyOn(animationManager, 'isPlaying').mockRestore();\n    animationManager.reset();\n  });\n\n  // TODO MX/OF (16.02.23): we couldn't get it to work with jest's .toThrow, should revisit this in the future\n  const expectAsyncThrows = async (throwingMethod: () => Promise<void>): Promise<unknown | null> => {\n    try {\n      await throwingMethod();\n    } catch (error) {\n      return error;\n    }\n    return null;\n  };\n\n  const endTestAnimation = (page: SpecPage, className?: string) => {\n    const element = getHTMLElement(page.root?.querySelector(elementSelector));\n    if (!endAnimation(element, className || '')) {\n      throw new Error('Test animation element was not found');\n    }\n  };\n\n  it(\"Throws an error if wasn't initialized\", async () => {\n    animationManager.register(testSequence.sequenceIdentifier, testSequence.animationSequence);\n\n    const expectedError = await expectAsyncThrows(async () => {\n      await animationManager.play(testSequence.sequenceIdentifier);\n    });\n\n    expect(expectedError).toHaveProperty('message', 'No root element present');\n  });\n\n  it('Should not throw an error when playing after initializing', async () => {\n    animationManager.register(testSequence.sequenceIdentifier, testSequence.animationSequence);\n    const page = await newSpecPage({\n      components: [],\n      template: () => (\n        <div>\n          <div id={elementSelector.replace('#', '')} />\n        </div>\n      )\n    });\n\n    if (page.root) loadRootElement(page.root);\n\n    const expectedError = await expectAsyncThrows(async () => {\n      const animationPromise = animationManager.play(testSequence.sequenceIdentifier);\n      endTestAnimation(page);\n      await animationPromise;\n    });\n\n    expect(expectedError).toBeNull();\n  });\n\n  it('Should throw error if not registered sequence is played', async () => {\n    const expectedError = await expectAsyncThrows(async () => {\n      await animationManager.play(testSequence.sequenceIdentifier);\n    });\n\n    expect(expectedError).toHaveProperty(\n      'message',\n      `Sequence ${testSequence.sequenceIdentifier} has not been registered`\n    );\n  });\n\n  it('Should call onStart and onEnd callbacks', async () => {\n    const onStartMock = jest.fn(() => Promise.resolve());\n    const onEndMock = jest.fn(() => Promise.resolve());\n    let cleanUpBeforeAnimationResolve!: () => void;\n    const cleanUpBeforeAnimationPromise = new Promise<void>((resolve) => (cleanUpBeforeAnimationResolve = resolve));\n\n    const sequenceWithStartCallback: SequenceRegisterParams = {\n      ...testSequence,\n      animationSequence: {\n        ...testSequence.animationSequence,\n        steps: [\n          [\n            {\n              ...testSequence.animationSequence.steps[0][0],\n              animation: {\n                ...testSequence.animationSequence.steps[0][0].animation,\n                cleanUpBeforeAnimation: () => cleanUpBeforeAnimationResolve()\n              },\n              onStart: onStartMock,\n              onEnd: onEndMock\n            }\n          ]\n        ]\n      }\n    };\n\n    animationManager.register(\n      sequenceWithStartCallback.sequenceIdentifier,\n      sequenceWithStartCallback.animationSequence\n    );\n\n    const page = await newSpecPage({\n      components: [],\n      template: () => (\n        <div>\n          <div id={elementSelector.replace('#', '')} />\n        </div>\n      )\n    });\n\n    if (page.root) loadRootElement(page.root);\n\n    const animationPromise = animationManager.play(sequenceWithStartCallback.sequenceIdentifier);\n    await cleanUpBeforeAnimationPromise;\n    endTestAnimation(page);\n    await animationPromise;\n\n    expect(onStartMock).toHaveBeenCalledTimes(1);\n    expect(onEndMock).toHaveBeenCalledTimes(1);\n  });\n\n  xit('Should call two animations simultaneously', async () => {\n    const onStartMock = jest.fn(() => Promise.resolve());\n    const onEndMock = jest.fn(() => Promise.resolve());\n    const cleanUpBeforeAnimationResolves: (() => void)[] = [];\n    const cleanUpBeforeAnimationPromises = [\n      new Promise<void>((resolve) => cleanUpBeforeAnimationResolves.push(resolve)),\n      new Promise<void>((resolve) => cleanUpBeforeAnimationResolves.push(resolve))\n    ];\n\n    const testSequence: SequenceRegisterParams = {\n      sequenceIdentifier: 'abcdef',\n      animationSequence: makeSequence([\n        [\n          {\n            elementSelector,\n            animation: { className: 'growElement', cleanUpBeforeAnimation: () => cleanUpBeforeAnimationResolves[0]() },\n            onStart: onStartMock\n          },\n          {\n            elementSelector,\n            animation: {\n              className: 'slideOutToRightRelative',\n              cleanUpBeforeAnimation: () => cleanUpBeforeAnimationResolves[1]()\n            },\n            onEnd: onEndMock\n          }\n        ]\n      ])\n    };\n\n    animationManager.register(testSequence.sequenceIdentifier, testSequence.animationSequence);\n\n    const page = await newSpecPage({\n      components: [],\n      template: () => (\n        <div>\n          <div id={elementSelector.replace('#', '')} />\n        </div>\n      )\n    });\n\n    if (page.root) loadRootElement(page.root);\n\n    const animationPromise = animationManager.play(testSequence.sequenceIdentifier);\n    await Promise.all(cleanUpBeforeAnimationPromises);\n    endTestAnimation(page, '');\n    endTestAnimation(page);\n    await animationPromise;\n\n    expect(onStartMock).toHaveBeenCalledTimes(1);\n    expect(onEndMock).toHaveBeenCalledTimes(1);\n\n    const animatedStyle = page.root?.querySelector(elementSelector)?.getAttribute('style');\n\n    expect(animatedStyle).toContain('width: 100%;');\n    expect(animatedStyle).toContain('right: calc(-100%);');\n    expect(animatedStyle).toContain('position: relative;');\n  });\n\n  it('Should call two animation steps', async () => {\n    const cleanUpBeforeAnimationResolves: (() => void)[] = [];\n    const cleanUpBeforeAnimationPromises = [\n      new Promise<void>((resolve) => cleanUpBeforeAnimationResolves.push(resolve)),\n      new Promise<void>((resolve) => cleanUpBeforeAnimationResolves.push(resolve))\n    ];\n\n    const sequenceWithStartCallback: SequenceRegisterParams = {\n      ...testSequence,\n      animationSequence: {\n        ...testSequence.animationSequence,\n        steps: [\n          [\n            {\n              ...testSequence.animationSequence.steps[0][0],\n              animation: {\n                ...testSequence.animationSequence.steps[0][0].animation,\n                cleanUpBeforeAnimation: () => cleanUpBeforeAnimationResolves[0]()\n              }\n            }\n          ],\n          [\n            {\n              elementSelector,\n              animation: {\n                className: 'slideOutToRightRelative',\n                cleanUpBeforeAnimation: () => cleanUpBeforeAnimationResolves[1]()\n              }\n            }\n          ]\n        ]\n      }\n    };\n\n    animationManager.register(\n      sequenceWithStartCallback.sequenceIdentifier,\n      sequenceWithStartCallback.animationSequence\n    );\n\n    const page = await newSpecPage({\n      components: [],\n      template: () => (\n        <div>\n          <div id={elementSelector.replace('#', '')} />\n        </div>\n      )\n    });\n\n    if (page.root) loadRootElement(page.root);\n\n    const playPromise = animationManager.play(sequenceWithStartCallback.sequenceIdentifier);\n\n    await cleanUpBeforeAnimationPromises[0];\n\n    const animatedElement = page.root?.querySelector(elementSelector);\n    expect(animatedElement?.getAttribute('class')).toContain(\n      sequenceWithStartCallback.animationSequence.steps[0][0].animation.className\n    );\n\n    endTestAnimation(page);\n\n    await cleanUpBeforeAnimationPromises[1];\n\n    expect(animatedElement?.getAttribute('class')).toContain(\n      sequenceWithStartCallback.animationSequence.steps[1][0].animation.className\n    );\n\n    endTestAnimation(page);\n    await playPromise;\n  });\n\n  it('Should return true from isPlaying while sequence is playing', async () => {\n    const resolvers: Record<string, (value: void) => void> = {};\n    const promise = new Promise((resolve) => {\n      resolvers['onEndLockPromiseResolver'] = resolve;\n    });\n    const onEndMock = jest.fn(() => {\n      resolvers['onEndLockPromiseResolver']();\n      return new Promise<void>((resolve) => {\n        resolvers['onEndResolver'] = resolve;\n      });\n    });\n\n    const sequenceWithStartCallback: SequenceRegisterParams = {\n      ...testSequence,\n      animationSequence: {\n        ...testSequence.animationSequence,\n        steps: [\n          [\n            {\n              ...testSequence.animationSequence.steps[0][0],\n              onEnd: onEndMock\n            }\n          ]\n        ]\n      }\n    };\n\n    animationManager.register(\n      sequenceWithStartCallback.sequenceIdentifier,\n      sequenceWithStartCallback.animationSequence\n    );\n\n    const page = await newSpecPage({\n      components: [],\n      template: () => (\n        <div>\n          <div id={elementSelector.replace('#', '')} />\n        </div>\n      )\n    });\n\n    if (page.root) loadRootElement(page.root);\n\n    const playPromise = animationManager.play(sequenceWithStartCallback.sequenceIdentifier);\n    endTestAnimation(page);\n    await promise;\n\n    expect(animationManager.isPlaying(sequenceWithStartCallback.sequenceIdentifier)).toBeTruthy();\n\n    resolvers['onEndResolver']?.();\n\n    await playPromise;\n\n    expect(animationManager.isPlaying(sequenceWithStartCallback.sequenceIdentifier)).toBeFalsy();\n  });\n});\n"]}