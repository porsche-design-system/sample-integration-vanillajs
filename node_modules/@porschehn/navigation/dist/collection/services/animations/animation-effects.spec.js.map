{"version":3,"file":"animation-effects.spec.js","sourceRoot":"","sources":["../../../../src/services/animations/animation-effects.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { AnimationGeneratorType, animationPromiseGenerator, EffectType } from './animation-effects';\n\ndescribe('Animation effects', () => {\n  const testElementSelector = '#animate';\n  const testAnimation: AnimationGeneratorType & EffectType = {\n    name: 'growElement',\n    cleanUpAfterAnimation: false,\n    duration: 5,\n    timingFunction: 'cubicBezierStart'\n  };\n\n  it('Should not clean up animation using default method when cleanup prop is false', async () => {\n    const page = await newSpecPage({\n      components: [],\n      template: () => <div id={testElementSelector.replace('#', '')} />\n    });\n\n    let promise: Promise<void> | null = null;\n    if (page.root) {\n      promise = animationPromiseGenerator(page.root, testAnimation);\n    }\n\n    expect(promise).not.toBeNull();\n\n    await promise;\n\n    expect(page.root?.getAttribute('style')).toEqual('width: 100%;');\n  });\n\n  it('Should clean up animation using default method when cleanup prop is true', async () => {\n    const page = await newSpecPage({\n      components: [],\n      template: () => <div id={testElementSelector.replace('#', '')} />\n    });\n\n    let promise: Promise<void> | null = null;\n    if (page.root) {\n      promise = animationPromiseGenerator(page.root, { ...testAnimation, cleanUpAfterAnimation: true });\n    }\n\n    expect(promise).not.toBeNull();\n\n    await promise;\n\n    expect(page.root?.getAttribute('style')).toBeNull();\n  });\n\n  it('Should clean up animation using async custom function when given', async () => {\n    const cleanupMock = jest.fn().mockReturnValue(new Promise<void>((resolve) => resolve()));\n\n    const page = await newSpecPage({\n      components: [],\n      template: () => <div id={testElementSelector.replace('#', '')} />\n    });\n\n    let promise: Promise<void> | null = null;\n    if (page.root) {\n      promise = animationPromiseGenerator(page.root, { ...testAnimation, cleanUpAfterAnimation: cleanupMock });\n    }\n\n    expect(promise).not.toBeNull();\n\n    await promise;\n\n    expect(cleanupMock).toBeCalledTimes(1);\n  });\n\n  it('should clean up animation when timeout interrupts animation', async () => {\n    const cleanupMock = jest.fn().mockReturnValue(new Promise<void>((resolve) => resolve()));\n\n    const page = await newSpecPage({\n      components: [],\n      template: () => <div id={testElementSelector.replace('#', '')} />\n    });\n\n    jest.useFakeTimers();\n\n    let promise: Promise<void> | null = null;\n    if (page.root) {\n      promise = animationPromiseGenerator(page.root, {\n        ...testAnimation,\n        cleanUpAfterAnimation: cleanupMock\n      });\n    }\n\n    jest.runAllTimers();\n\n    expect(promise).not.toBeNull();\n\n    await promise;\n\n    expect(cleanupMock).toBeCalledTimes(1);\n\n    jest.useRealTimers();\n  });\n});\n"]}