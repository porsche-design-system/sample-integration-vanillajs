{"version":3,"file":"feature-toggles.spec.js","sourceRoot":"","sources":["../../../src/services/feature-toggles.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { Environments } from '../entities/environment';\nimport { FeatureToggles } from './feature-toggles';\nimport featureTogglesJson from '../feature-toggles.json';\n\ndescribe('feature toggles', () => {\n  const FEATURE_FEATURE1 = 'homenav_feature1';\n\n  it('should return false if features not set', () => {\n    const featureToggles = new FeatureToggles(Environments.TEST, {});\n\n    const isEnabled = featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '');\n\n    expect(isEnabled).toBeFalsy();\n  });\n\n  describe('isFeatureEnabled', () => {\n    it('should return true if feature feature1 is enabled in the env test', () => {\n      const featureToggles = new FeatureToggles(Environments.TEST, {\n        test: { homenav_feature1: { enabled: true } },\n        preview: { homenav_feature1: { enabled: false } }\n      });\n\n      const isEnabled = featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '');\n\n      expect(isEnabled).toBeTruthy();\n    });\n\n    it('should return false if feature feature1 is disabled in the env test', () => {\n      const featureToggles = new FeatureToggles(Environments.TEST, {\n        test: { homenav_feature1: { enabled: false } },\n        preview: { homenav_feature1: { enabled: true } }\n      });\n\n      const isEnabled = featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '');\n\n      expect(isEnabled).toBeFalsy();\n    });\n\n    it('should return true if feature feature1 is enabled in the env passed', () => {\n      const featureToggles = new FeatureToggles(Environments.PREVIEW, {\n        test: { homenav_feature1: { enabled: false } },\n        preview: { homenav_feature1: { enabled: true } }\n      });\n\n      const isEnabled = featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '');\n\n      expect(isEnabled).toBeTruthy();\n    });\n\n    it('should return false if feature feature1 is enabled in the env passed', () => {\n      const featureToggles = new FeatureToggles(Environments.PREVIEW, {\n        test: { homenav_feature1: { enabled: true } },\n        preview: { homenav_feature1: { enabled: false } }\n      });\n\n      const isEnabled = featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '');\n\n      expect(isEnabled).toBeFalsy();\n    });\n\n    it('should return false if feature doesnt exist', () => {\n      const featureToggles = new FeatureToggles(Environments.PREVIEW, {\n        test: { homenav_feature1: { enabled: true } },\n        preview: { homenav_feature1: { enabled: true } }\n      });\n\n      const isEnabled = featureToggles.isFeatureEnabled('homenav_feature2', '');\n\n      expect(isEnabled).toBe(false);\n    });\n\n    it('should return false if on PROD environment and feature is included on security layer', () => {\n      const featureToggles = new FeatureToggles(Environments.PRODUCTION, {\n        prod: { one_ui: { enabled: true } },\n        preview: { one_ui: { enabled: true } }\n      });\n\n      const isEnabled = featureToggles.isFeatureEnabled('one_ui', '');\n\n      expect(isEnabled).toBe(false);\n    });\n\n    it('should return true if on non PROD environment and feature is included on security layer', () => {\n      const featureToggles = new FeatureToggles(Environments.PREVIEW, {\n        prod: { one_ui: { enabled: true } },\n        preview: { one_ui: { enabled: true } }\n      });\n\n      const isEnabled = featureToggles.isFeatureEnabled('one_ui', '');\n\n      expect(isEnabled).toBe(true);\n    });\n\n    describe('overrideValue', () => {\n      it('should return false override value if feature override is enabled in the env', () => {\n        const featureToggles = new FeatureToggles(Environments.TEST, {\n          test: { homenav_feature1: { enabled: true }, featureOverrideEnabled: { enabled: true } },\n          preview: { homenav_feature1: { enabled: false }, featureOverrideEnabled: { enabled: false } }\n        });\n\n        const isEnabled = featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '?homenav_feature1=false');\n\n        expect(isEnabled).toBeFalsy();\n      });\n\n      it('should return true override value if feature override is enabled in the env', () => {\n        const featureToggles = new FeatureToggles(Environments.TEST, {\n          test: { homenav_feature1: { enabled: false }, featureOverrideEnabled: { enabled: true } },\n          preview: { homenav_feature1: { enabled: false }, featureOverrideEnabled: { enabled: false } }\n        });\n\n        const isEnabled = featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '?homenav_feature1=true');\n\n        expect(isEnabled).toBeTruthy();\n      });\n\n      it('should return feature value if override is enabled and query string is not available in the env', () => {\n        const featureToggles = new FeatureToggles(Environments.TEST, {\n          test: { homenav_feature1: { enabled: true }, featureOverrideEnabled: { enabled: true } },\n          preview: { homenav_feature1: { enabled: false }, featureOverrideEnabled: { enabled: false } }\n        });\n\n        const isEnabled = featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '');\n\n        expect(isEnabled).toBeTruthy();\n      });\n\n      it('should return feature value if override is enabled and query string does not have feature', () => {\n        const featureToggles = new FeatureToggles(Environments.TEST, {\n          test: { homenav_feature1: { enabled: true }, featureOverrideEnabled: { enabled: true } },\n          preview: { homenav_feature1: { enabled: false }, featureOverrideEnabled: { enabled: false } }\n        });\n\n        const isEnabled = featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '?homenav_feature2=false');\n\n        expect(isEnabled).toBeTruthy();\n      });\n\n      it('should return feature value if override is enabled and query string feature value is not boolean', () => {\n        const featureToggles = new FeatureToggles(Environments.TEST, {\n          test: { homenav_feature1: { enabled: true }, featureOverrideEnabled: { enabled: true } },\n          preview: { homenav_feature1: { enabled: false }, featureOverrideEnabled: { enabled: false } }\n        });\n\n        const isEnabled = featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '?homenav_feature1=notBooleanValue');\n\n        expect(isEnabled).toBeTruthy();\n      });\n\n      it('should return feature value if feature override is disabled in the env', () => {\n        const featureToggles = new FeatureToggles(Environments.PREVIEW, {\n          test: { homenav_feature1: { enabled: false }, featureOverrideEnabled: { enabled: true } },\n          preview: { homenav_feature1: { enabled: true }, featureOverrideEnabled: { enabled: false } }\n        });\n\n        const isEnabled = featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '?homenav_feature1=false');\n\n        expect(isEnabled).toBeTruthy();\n      });\n\n      it('validates \"production\" local feature toggles', () => {\n        const featureToggles = new FeatureToggles(Environments.PRODUCTION, featureTogglesJson);\n\n        expect(featureToggles.isFeatureEnabled('navi_3', '')).toBeTruthy();\n        expect(featureToggles.isFeatureEnabled('featureOverrideEnabled', '')).toBeFalsy();\n        expect(featureToggles.isFeatureEnabled('homenav_1723', '')).toBeFalsy();\n        expect(featureToggles.isFeatureEnabled('porsche_75_years_logo', '')).toBeFalsy();\n        expect(featureToggles.isFeatureEnabled('shop', '')).toBeFalsy();\n        expect(featureToggles.isFeatureEnabled('pcom_search', '')).toBeFalsy();\n      });\n\n      it('should return default values if remote toggle fails', async () => {\n        jest.spyOn(global, 'fetch').mockImplementation(() => Promise.reject(null));\n        const featureToggles = new FeatureToggles(Environments.LOCAL, featureTogglesJson);\n        await featureToggles.setFeatures(Environments.LOCAL);\n\n        expect(featureToggles.isFeatureEnabled('navi_3', '')).toBeFalsy();\n        expect(featureToggles.isFeatureEnabled('featureOverrideEnabled', '')).toBeTruthy();\n        expect(featureToggles.isFeatureEnabled('homenav_1723', '')).toBeTruthy();\n        expect(featureToggles.isFeatureEnabled('porsche_75_years_logo', '')).toBeFalsy();\n        expect(featureToggles.isFeatureEnabled('shop', '')).toBeFalsy();\n        expect(featureToggles.isFeatureEnabled('pcom_search', '')).toBeFalsy();\n      });\n\n      it('should return feature toggles from lambda ', async () => {\n        jest.spyOn(global, 'fetch').mockImplementation(\n          async () =>\n            ({\n              json: async () => ({\n                featureOverrideEnabled: { enabled: true },\n                navi_3: {\n                  enabled: true\n                },\n                porsche_75_years_logo: {\n                  enabled: true\n                },\n                shop: {\n                  enabled: true\n                },\n                pcom_search: {\n                  enabled: true\n                }\n              }),\n              ok: true\n            } as Response)\n        );\n\n        const featureToggles = new FeatureToggles(Environments.LOCAL, featureTogglesJson);\n        await featureToggles.setFeatures(Environments.LOCAL);\n\n        expect(featureToggles.isFeatureEnabled('navi_3', '')).toBe(true);\n        expect(featureToggles.isFeatureEnabled('porsche_75_years_logo', '')).toBe(true);\n        expect(featureToggles.isFeatureEnabled('shop', '')).toBe(true);\n        expect(featureToggles.isFeatureEnabled('pcom_search', '')).toBe(true);\n      });\n\n      it('should load local env variables if remote feature response is not ok ', async () => {\n        jest.spyOn(global, 'fetch').mockImplementation(\n          async () =>\n            ({\n              ok: false\n            } as Response)\n        );\n\n        const featureToggles = new FeatureToggles(Environments.LOCAL, featureTogglesJson);\n        await featureToggles.setFeatures(Environments.LOCAL);\n\n        expect(featureToggles.isFeatureEnabled('navi_3', '')).toBeFalsy();\n        expect(featureToggles.isFeatureEnabled('featureOverrideEnabled', '')).toBeTruthy();\n        expect(featureToggles.isFeatureEnabled('homenav_1723', '')).toBeTruthy();\n        expect(featureToggles.isFeatureEnabled('porsche_75_years_logo', '')).toBeFalsy();\n        expect(featureToggles.isFeatureEnabled('shop', '')).toBeFalsy();\n        expect(featureToggles.isFeatureEnabled('pcom_search', '')).toBeFalsy();\n      });\n\n      it('should return true when local storage override is set to true and featureOverride is enabled', () => {\n        const featureToggles = new FeatureToggles(Environments.TEST, {\n          test: { homenav_feature1: { enabled: false }, featureOverrideEnabled: { enabled: true } },\n          preview: { homenav_feature1: { enabled: false }, featureOverrideEnabled: { enabled: false } }\n        });\n        localStorage.setItem(`phn.${FEATURE_FEATURE1}`, 'true');\n\n        expect(featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '')).toBeTruthy();\n      });\n\n      it('should return correct value featureOverride is enabled', () => {\n        const featureToggles = new FeatureToggles(Environments.TEST, {\n          test: { homenav_feature1: { enabled: true }, featureOverrideEnabled: { enabled: true } },\n          preview: { homenav_feature1: { enabled: false }, featureOverrideEnabled: { enabled: false } }\n        });\n        localStorage.setItem(`phn.${FEATURE_FEATURE1}`, 'false');\n\n        expect(featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '')).toBeFalsy();\n      });\n\n      it('should return default feature toggle value when local storage override has invalid value and featureOverride is enabled', () => {\n        const featureToggles = new FeatureToggles(Environments.TEST, {\n          test: { homenav_feature1: { enabled: true }, featureOverrideEnabled: { enabled: true } },\n          preview: { homenav_feature1: { enabled: false }, featureOverrideEnabled: { enabled: false } }\n        });\n        localStorage.setItem(`phn.${FEATURE_FEATURE1}`, 'iAmAnInvalidValue');\n\n        expect(featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '')).toBeTruthy();\n      });\n\n      it('should return default feature toggle value when local storage override is set and featureOverride is disabled in the given environment', () => {\n        const featureToggles = new FeatureToggles(Environments.PREVIEW, {\n          test: { homenav_feature1: { enabled: true }, featureOverrideEnabled: { enabled: true } },\n          preview: { homenav_feature1: { enabled: true }, featureOverrideEnabled: { enabled: false } }\n        });\n        localStorage.setItem(`phn.${FEATURE_FEATURE1}`, 'false');\n\n        expect(featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '')).toBeTruthy();\n      });\n\n      it('should give url override precedence over local storage override when local storage override and url override are given and featureOverride is enabled', () => {\n        const featureToggles = new FeatureToggles(Environments.TEST, {\n          test: { homenav_feature1: { enabled: false }, featureOverrideEnabled: { enabled: true } },\n          preview: { homenav_feature1: { enabled: false }, featureOverrideEnabled: { enabled: false } }\n        });\n        localStorage.setItem(`phn.${FEATURE_FEATURE1}`, 'false');\n\n        expect(featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '?homenav_feature1=true')).toBeTruthy();\n      });\n\n      it('should return correct values when multiple local storage overrides are defined and featureOverride is enabled', () => {\n        const FEATURE_FEATURE2 = 'homenav_feature2';\n        const featureToggles = new FeatureToggles(Environments.TEST, {\n          test: {\n            homenav_feature1: { enabled: false },\n            homenav_feature2: { enabled: true },\n            featureOverrideEnabled: { enabled: true }\n          },\n          preview: { homenav_feature1: { enabled: false }, featureOverrideEnabled: { enabled: false } }\n        });\n        localStorage.setItem(`phn.${FEATURE_FEATURE1}`, 'true');\n        localStorage.setItem(`phn.${FEATURE_FEATURE2}`, 'false');\n\n        expect(featureToggles.isFeatureEnabled(FEATURE_FEATURE1, '')).toBeTruthy();\n        expect(featureToggles.isFeatureEnabled(FEATURE_FEATURE2, '')).toBeFalsy();\n      });\n    });\n  });\n});\n"]}