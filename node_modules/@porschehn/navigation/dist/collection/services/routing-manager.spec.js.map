{"version":3,"file":"routing-manager.spec.js","sourceRoot":"","sources":["../../../src/services/routing-manager.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EACL,QAAQ,EACR,IAAI,EACJ,gBAAgB,EAChB,eAAe,EACf,IAAI,EACJ,WAAW,EACX,mBAAmB,EACnB,kBAAkB,EAClB,QAAQ,EACR,SAAS,EACT,qBAAqB,EACrB,QAAQ,EACR,SAAS,EACT,GAAG,EACH,KAAK,EACL,cAAc,EACd,aAAa,EACd,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAAE,kBAAkB,EAAE,WAAW,EAAE,MAAM,yBAAyB,CAAC;AAC1E,OAAO,KAAK,MAAM,MAAM,mBAAmB,CAAC;AAC5C,OAAO,KAAK,+BAA+B,MAAM,8DAA8D,CAAC;AAChH,OAAO,EAAE,wBAAwB,EAAE,MAAM,sCAAsC,CAAC;AAChF,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAElD,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;EAC/B,UAAU,CAAC,GAAG,EAAE;IACd,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACrE,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;EAC1C,CAAC,CAAC,CAAC;EACH,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;MACzC,MAAM,YAAY,GAAG,eAAe,EAAE,CAAC;MAEvC,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE;MACjE,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,EAAE,CAAC;MACzC,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MAExC,MAAM,YAAY,GAAG,eAAe,EAAE,CAAC;MAEvC,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iEAAiE,EAAE,GAAG,EAAE;MACzE,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;MAEzC,MAAM,YAAY,GAAG,eAAe,EAAE,CAAC;MAEvC,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,EAAE,CAAC,qEAAqE,EAAE,GAAG,EAAE;MAC7E,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MACvC,MAAM,aAAa,GAAG,gBAAgB,EAAE,CAAC;MACzC,MAAM,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE;MACjE,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,EAAE,CAAC;MACzC,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;MAExC,MAAM,aAAa,GAAG,gBAAgB,EAAE,CAAC;MACzC,MAAM,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0EAA0E,EAAE,GAAG,EAAE;MAClF,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;MACrE,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MAEvC,MAAM,aAAa,GAAG,gBAAgB,EAAE,CAAC;MACzC,MAAM,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;IACpB,EAAE,CAAC,0EAA0E,EAAE,GAAG,EAAE;MAClF,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;MAEnC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;MAChG,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE;MAC3D,IAAI,EAAE,CAAC;MAEP,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;MAClE,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4DAA4D,EAAE,GAAG,EAAE;MACpE,IAAI,CAAC,QAAQ,CAAC,CAAC;MAEf,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;MAC5E,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,EAAE,CAAC,2DAA2D,EAAE,GAAG,EAAE;MACnE,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;MAEzB,MAAM,MAAM,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;MACxC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE,GAAG,EAAE;MAC9D,IAAI,CAAC,QAAQ,CAAC,CAAC;MAEf,MAAM,MAAM,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;MACxC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kEAAkE,EAAE,GAAG,EAAE;MAC1E,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;MAEzB,MAAM,MAAM,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;MACxC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,EAAE,CAAC,+DAA+D,EAAE,GAAG,EAAE;MACvE,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MAExC,aAAa,EAAE,CAAC;MAEhB,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kEAAkE,EAAE,GAAG,EAAE;MAC1E,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MAExC,aAAa,EAAE,CAAC;MAEhB,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,EAAE,CAAC,oGAAoG,EAAE,GAAG,EAAE;MAC5G,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;MACzC,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MAEvC,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;MAE3B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE,GAAG,EAAE;MAC9D,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MAEvC,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;MAE3B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0DAA0D,EAAE,GAAG,EAAE;MAClE,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;MACzC,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;MAExC,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;MAE3B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,EAAE,CAAC,oFAAoF,EAAE,GAAG,EAAE;MAC5F,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,kBAAkB,CAAC,UAAU,CAAC;MACpE,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,kBAAkB,CAAC,UAAU,CAAC;MAEnE,MAAM,MAAM,GAAG,QAAQ,EAAE,CAAC;MAE1B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,GAAG,EAAE;MACtE,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,kBAAkB,CAAC,UAAU,CAAC;MAEnE,MAAM,MAAM,GAAG,QAAQ,EAAE,CAAC;MAE1B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6DAA6D,EAAE,GAAG,EAAE;MACrE,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,kBAAkB,CAAC,UAAU,CAAC;MACpE,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MAEvC,MAAM,MAAM,GAAG,QAAQ,EAAE,CAAC;MAE1B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;MACzD,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MAEvC,MAAM,MAAM,GAAG,QAAQ,EAAE,CAAC;MAE1B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;MACjD,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MAEvC,MAAM,MAAM,GAAG,QAAQ,EAAE,CAAC;MAE1B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,EAAE,CAAC,sHAAsH,EAAE,GAAG,EAAE;MAC9H,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MAExC,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;MAE3B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4GAA4G,EAAE,GAAG,EAAE;MACpH,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MACvC,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MAExC,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;MAE3B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE,GAAG,EAAE;MACnE,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MACvC,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;MAEzC,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;MAE3B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,EAAE,CAAC,yEAAyE,EAAE,GAAG,EAAE;MACjF,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MAEvC,MAAM,MAAM,GAAG,mBAAmB,EAAE,CAAC;MAErC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6EAA6E,EAAE,GAAG,EAAE;MACrF,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MAEvC,MAAM,MAAM,GAAG,mBAAmB,EAAE,CAAC;MAErC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yEAAyE,EAAE,GAAG,EAAE;MACjF,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MAEvC,MAAM,MAAM,GAAG,mBAAmB,EAAE,CAAC;MAErC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,4EAA4E,EAAE,GAAG,EAAE;MACpF,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MAEvC,MAAM,MAAM,GAAG,kBAAkB,EAAE,CAAC;MAEpC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0EAA0E,EAAE,GAAG,EAAE;MAClF,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MAEvC,MAAM,MAAM,GAAG,kBAAkB,EAAE,CAAC;MAEpC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yEAAyE,EAAE,GAAG,EAAE;MACjF,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MAEvC,MAAM,MAAM,GAAG,kBAAkB,EAAE,CAAC;MAEpC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,EAAE,CAAC,4EAA4E,EAAE,GAAG,EAAE;MACpF,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MAEvC,MAAM,MAAM,GAAG,WAAW,EAAE,CAAC;MAE7B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yEAAyE,EAAE,GAAG,EAAE;MACjF,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC;MAEvC,MAAM,MAAM,GAAG,WAAW,EAAE,CAAC;MAE7B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;MAC5D,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;MAErE,MAAM,MAAM,GAAG,qBAAqB,EAAE,CAAC;MAEvC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC1B,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;MAC5D,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;MAE3D,MAAM,MAAM,GAAG,qBAAqB,EAAE,CAAC;MAEvC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;MAC3B,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0DAA0D,EAAE,GAAG,EAAE;MAClE,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;MAE3D,MAAM,MAAM,GAAG,qBAAqB,EAAE,CAAC;MAEvC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;MAC3B,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;IACrB,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;MAC5C,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MAExC,KAAK,EAAE,CAAC;MAER,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,IAAI,gBAAkC,CAAC;IAEvC,UAAU,CAAC,GAAG,EAAE;MACd,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC,eAAe,EAAE,CAAC;IAC3E,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;MACb,gBAAgB,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;MAChE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;MACtD,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,WAAW,CAAC,CAAC;MAEpD,QAAQ,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;MAE/B,MAAM,CAAC,gBAAgB,CAAC,CAAC,oBAAoB,CAAC,YAAY,EAAE,qBAAqB,EAAE;QACjF,OAAO,EAAE,IAAI;QACb,UAAU,EAAE,KAAK;QACjB,MAAM,EAAE,CAAC,eAAe,CAAC;OAC1B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,GAAG,EAAE;MAC7D,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;MACvD,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,WAAW,CAAC,CAAC;MAEpD,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;MAErB,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;MACpD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE;IACnB,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;MAChE,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;MAErE,GAAG,EAAE,CAAC;MAEN,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gEAAgE,EAAE,GAAG,EAAE;MACxE,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;MAE3D,GAAG,EAAE,CAAC;MAEN,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;IACpB,IAAI,iCAAmD,CAAC;IAExD,UAAU,CAAC,GAAG,EAAE;MACd,iCAAiC,GAAG,IAAI,CAAC,KAAK,CAAC,+BAA+B,EAAE,gCAAgC,CAAC,CAAC;IACpH,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,kFAAkF,EAAE,GAAG,EAAE;MAC1F,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,iCAAiC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;MAEzD,IAAI,EAAE,CAAC;MAEP,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kFAAkF,EAAE,GAAG,EAAE;MAC1F,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,iCAAiC,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;MAExD,IAAI,EAAE,CAAC;MAEP,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gFAAgF,EAAE,GAAG,EAAE;MACxF,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC;MACxC,WAAW,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,aAAa,EAAE,yBAAyB,CAAC,CAAC;MAC1G,wBAAwB,CAAC,KAAK,CAAC,iBAAiB,GAAG;QACjD,EAAE,EAAE,aAAa,CAAC,EAAE;QACpB,SAAS,EAAE,aAAa,CAAC,WAAW,CAAC,SAAS;QAC9C,QAAQ,EAAE,aAAa,CAAC,WAAW,CAAC,QAAQ;OAC7C,CAAC;MAEF,iCAAiC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;MAEzD,IAAI,EAAE,CAAC;MAEP,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;MACpD,MAAM,CAAC,wBAAwB,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { routerStore } from '../state/router-store';\nimport {\n  addRoute,\n  back,\n  getAnimatedRoute,\n  getCurrentRoute,\n  goTo,\n  isAnimating,\n  isAnimatingBackward,\n  isAnimatingForward,\n  isClosed,\n  isClosing,\n  isNavigatingBackwards,\n  isOpened,\n  isOpening,\n  pop,\n  reset,\n  showBackButton,\n  syncAnimation\n} from './routing-manager';\nimport { RoutingKeyPointers, RoutingKeys } from '../entities/routing-key';\nimport * as helper from '../utility/helper';\nimport * as singleDrawerAnimationController from '../components/single-drawer/animations/animations-controller';\nimport { dealerSearchResultsStore } from '../state/dealer-search-results-store';\nimport { mockPPNDealer } from '../test/test-data';\n\ndescribe('Routing Manager', () => {\n  beforeEach(() => {\n    routerStore.state.routingKeyHistory = ['route1', 'route2', 'route3'];\n    routerStore.state.routingKeyPointer = 1;\n  });\n  describe('Get Current Route', () => {\n    it('should return the current route', () => {\n      const currentRoute = getCurrentRoute();\n\n      expect(currentRoute).toBe('route2');\n    });\n\n    it('should return an empty string when the history is empty', () => {\n      routerStore.state.routingKeyHistory = [];\n      routerStore.state.routingKeyPointer = 0;\n\n      const currentRoute = getCurrentRoute();\n\n      expect(currentRoute).toBe('');\n    });\n\n    it('should return an empty string when the pointer is out of bounds', () => {\n      routerStore.state.routingKeyPointer = -1;\n\n      const currentRoute = getCurrentRoute();\n\n      expect(currentRoute).toBe('');\n    });\n  });\n\n  describe('getAnimatedRoute', () => {\n    it('should return the animated route when the animatingPointer is valid', () => {\n      routerStore.state.animatingPointer = 1;\n      const animatedRoute = getAnimatedRoute();\n      expect(animatedRoute).toBe('route2');\n    });\n\n    it('should return an empty string when the history is empty', () => {\n      routerStore.state.routingKeyHistory = [];\n      routerStore.state.animatingPointer = -1;\n\n      const animatedRoute = getAnimatedRoute();\n      expect(animatedRoute).toBe('');\n    });\n\n    it('should return an empty string when the animatingPointer is out of bounds', () => {\n      routerStore.state.routingKeyHistory = ['route1', 'route2', 'route3'];\n      routerStore.state.animatingPointer = 3;\n\n      const animatedRoute = getAnimatedRoute();\n      expect(animatedRoute).toBe('');\n    });\n  });\n\n  describe('goTo', () => {\n    it('should update routingKeyHistory and routingKeyPointer when adding routes', () => {\n      goTo('route1', 'route2', 'route3');\n\n      expect(routerStore.state.routingKeyHistory).toEqual(['mainmenu', 'route1', 'route2', 'route3']);\n      expect(routerStore.state.routingKeyPointer).toBe(3);\n    });\n\n    it('should point to main menu if no route is provided', () => {\n      goTo();\n\n      expect(routerStore.state.routingKeyHistory).toEqual(['mainmenu']);\n      expect(routerStore.state.routingKeyPointer).toBe(0);\n    });\n\n    it('should update routingKeyHistory when adding a single route', () => {\n      goTo('route1');\n\n      expect(routerStore.state.routingKeyHistory).toEqual(['mainmenu', 'route1']);\n      expect(routerStore.state.routingKeyPointer).toBe(1);\n    });\n  });\n\n  describe('showBackButton', () => {\n    it('should return true when section is at or beyond LEVEL_TWO', () => {\n      goTo('route1', 'route2');\n\n      const result = showBackButton('route1');\n      expect(result).toBe(true);\n    });\n\n    it('should return false when section is before LEVEL_TWO', () => {\n      goTo('route1');\n\n      const result = showBackButton('route1');\n      expect(result).toBe(true);\n    });\n\n    it('should return false when section is not in the routingKeyHistory', () => {\n      goTo('route1', 'route2');\n\n      const result = showBackButton('route3');\n      expect(result).toBe(false);\n    });\n  });\n\n  describe('syncAnimation', () => {\n    it('should set animatingPointer to the value of routingKeyPointer', () => {\n      routerStore.state.routingKeyPointer = 2;\n\n      syncAnimation();\n\n      expect(routerStore.state.animatingPointer).toBe(2);\n    });\n\n    it('should maintain the same value if routingKeyPointer is unchanged', () => {\n      routerStore.state.routingKeyPointer = 1;\n\n      syncAnimation();\n\n      expect(routerStore.state.animatingPointer).toBe(1);\n    });\n  });\n\n  describe('isClosing', () => {\n    it('should return true when routingKeyPointer is -1 and animatingPointer is greater than or equal to 0', () => {\n      routerStore.state.routingKeyPointer = -1;\n      routerStore.state.animatingPointer = 2;\n\n      const result = isClosing();\n\n      expect(result).toBe(true);\n    });\n\n    it('should return false when routingKeyPointer is not -1', () => {\n      routerStore.state.routingKeyPointer = 1;\n      routerStore.state.animatingPointer = 0;\n\n      const result = isClosing();\n\n      expect(result).toBe(false);\n    });\n\n    it('should return false when animatingPointer is less than 0', () => {\n      routerStore.state.routingKeyPointer = -1;\n      routerStore.state.animatingPointer = -1;\n\n      const result = isClosing();\n\n      expect(result).toBe(false);\n    });\n  });\n\n  describe('isClosed', () => {\n    it('should return true when both routingKeyPointer and animatingPointer are LEVEL_ZERO', () => {\n      routerStore.state.routingKeyPointer = RoutingKeyPointers.LEVEL_ZERO;\n      routerStore.state.animatingPointer = RoutingKeyPointers.LEVEL_ZERO;\n\n      const result = isClosed();\n\n      expect(result).toBe(true);\n    });\n\n    it('should return false when routingKeyPointer is not LEVEL_ZERO', () => {\n      routerStore.state.routingKeyPointer = 1;\n      routerStore.state.animatingPointer = RoutingKeyPointers.LEVEL_ZERO;\n\n      const result = isClosed();\n\n      expect(result).toBe(false);\n    });\n\n    it('should return false when animatingPointer is not LEVEL_ZERO', () => {\n      routerStore.state.routingKeyPointer = RoutingKeyPointers.LEVEL_ZERO;\n      routerStore.state.animatingPointer = 1;\n\n      const result = isClosed();\n\n      expect(result).toBe(false);\n    });\n  });\n\n  describe('isOpened', () => {\n    it('should return true when routing is opened state', () => {\n      routerStore.state.routingKeyPointer = 1;\n      routerStore.state.animatingPointer = 1;\n\n      const result = isOpened();\n\n      expect(result).toBe(true);\n    });\n\n    it('should return true when is on main menu', () => {\n      routerStore.state.routingKeyPointer = 0;\n      routerStore.state.animatingPointer = 0;\n\n      const result = isOpened();\n\n      expect(result).toBe(true);\n    });\n  });\n\n  describe('isOpening', () => {\n    it('should return true when animatingPointer comes from level 0 (-1) and routingKeyPointer is greater than or equal to 0', () => {\n      routerStore.state.animatingPointer = -1;\n      routerStore.state.routingKeyPointer = 2;\n\n      const result = isOpening();\n\n      expect(result).toBe(true);\n    });\n\n    it('should return false when animatingPointer is not LEVEL_ZERO, that means that is animating, but not opening', () => {\n      routerStore.state.animatingPointer = 1;\n      routerStore.state.routingKeyPointer = 0;\n\n      const result = isOpening();\n\n      expect(result).toBe(false);\n    });\n\n    it('should return false when routingKeyPointer is less than 0', () => {\n      routerStore.state.animatingPointer = 0;\n      routerStore.state.routingKeyPointer = -1;\n\n      const result = isOpening();\n\n      expect(result).toBe(false);\n    });\n  });\n\n  describe('isAnimatingBackward', () => {\n    it('should return true when routingKeyPointer is less than animatingPointer', () => {\n      routerStore.state.routingKeyPointer = 2;\n      routerStore.state.animatingPointer = 3;\n\n      const result = isAnimatingBackward();\n\n      expect(result).toBe(true);\n    });\n\n    it('should return false when routingKeyPointer is greater than animatingPointer', () => {\n      routerStore.state.routingKeyPointer = 3;\n      routerStore.state.animatingPointer = 2;\n\n      const result = isAnimatingBackward();\n\n      expect(result).toBe(false);\n    });\n\n    it('should return false when routingKeyPointer is equal to animatingPointer', () => {\n      routerStore.state.routingKeyPointer = 2;\n      routerStore.state.animatingPointer = 2;\n\n      const result = isAnimatingBackward();\n\n      expect(result).toBe(false);\n    });\n  });\n\n  describe('isAnimatingForward', () => {\n    it('should return true when routingKeyPointer is greater than animatingPointer', () => {\n      routerStore.state.routingKeyPointer = 3;\n      routerStore.state.animatingPointer = 2;\n\n      const result = isAnimatingForward();\n\n      expect(result).toBe(true);\n    });\n\n    it('should return false when routingKeyPointer is less than animatingPointer', () => {\n      routerStore.state.routingKeyPointer = 2;\n      routerStore.state.animatingPointer = 3;\n\n      const result = isAnimatingForward();\n\n      expect(result).toBe(false);\n    });\n\n    it('should return false when routingKeyPointer is equal to animatingPointer', () => {\n      routerStore.state.routingKeyPointer = 2;\n      routerStore.state.animatingPointer = 2;\n\n      const result = isAnimatingForward();\n\n      expect(result).toBe(false);\n    });\n  });\n\n  describe('isAnimating', () => {\n    it('should return true when routingKeyPointer is not equal to animatingPointer', () => {\n      routerStore.state.routingKeyPointer = 3;\n      routerStore.state.animatingPointer = 2;\n\n      const result = isAnimating();\n\n      expect(result).toBe(true);\n    });\n\n    it('should return false when routingKeyPointer is equal to animatingPointer', () => {\n      routerStore.state.routingKeyPointer = 2;\n      routerStore.state.animatingPointer = 2;\n\n      const result = isAnimating();\n\n      expect(result).toBe(false);\n    });\n  });\n\n  describe('isNavigatingBackwards', () => {\n    it('should return true when points to a previous route', () => {\n      routerStore.state.routingKeyPointer = 1;\n      routerStore.state.routingKeyHistory = ['route1', 'route2', 'route3'];\n\n      const result = isNavigatingBackwards();\n\n      expect(result).toBe(true);\n      expect(getCurrentRoute()).toBe('route2');\n    });\n\n    it('should return false when points to the last route ', () => {\n      routerStore.state.routingKeyPointer = 1;\n      routerStore.state.routingKeyHistory = ['route1', 'route2'];\n\n      const result = isNavigatingBackwards();\n\n      expect(result).toBe(false);\n      expect(getCurrentRoute()).toBe('route2');\n    });\n\n    it('should return false when points to an non existing route', () => {\n      routerStore.state.routingKeyPointer = 2;\n      routerStore.state.routingKeyHistory = ['route1', 'route2'];\n\n      const result = isNavigatingBackwards();\n\n      expect(result).toBe(false);\n      expect(getCurrentRoute()).toBe('');\n    });\n  });\n\n  describe('reset', () => {\n    it('should set routingKeyPointer to -1', () => {\n      routerStore.state.routingKeyPointer = 2;\n\n      reset();\n\n      expect(routerStore.state.routingKeyPointer).toBe(-1);\n    });\n  });\n\n  describe('addRoute', () => {\n    let dispatchEventSpy: jest.SpyInstance;\n\n    beforeEach(() => {\n      dispatchEventSpy = jest.spyOn(helper, 'dispatchEvent').mockReturnValue();\n    });\n\n    afterEach(() => {\n      dispatchEventSpy.mockClear();\n    });\n\n    it('should dispatch an event for changing route on desktop', () => {\n      jest.spyOn(helper, 'isDesktop').mockReturnValue(true);\n      routerStore.state.routingKeyPointer = 1;\n      routerStore.state.routingKeyHistory = ['main_menu'];\n\n      addRoute(['route2', 'route3']);\n\n      expect(dispatchEventSpy).toHaveBeenCalledWith('phn-router', 'mobileMenuItemClick', {\n        bubbles: true,\n        cancelable: false,\n        detail: ['route2/route3']\n      });\n    });\n\n    it('should add a route to history when not on a desktop', () => {\n      jest.spyOn(helper, 'isDesktop').mockReturnValue(false);\n      routerStore.state.routingKeyPointer = 1;\n      routerStore.state.routingKeyHistory = ['main_menu'];\n\n      addRoute(['route2']);\n\n      expect(routerStore.state.routingKeyPointer).toBe(1);\n      expect(routerStore.state.routingKeyHistory).toEqual(['main_menu', 'route2']);\n    });\n  });\n\n  describe('pop', () => {\n    it('should remove the last route when navigating backwards', () => {\n      routerStore.state.routingKeyPointer = 1;\n      routerStore.state.routingKeyHistory = ['route1', 'route2', 'route3'];\n\n      pop();\n\n      expect(routerStore.state.routingKeyHistory).toEqual(['route1', 'route2']);\n    });\n\n    it('should not remove the last route when not navigating backwards', () => {\n      routerStore.state.routingKeyPointer = 1;\n      routerStore.state.routingKeyHistory = ['route1', 'route2'];\n\n      pop();\n\n      expect(routerStore.state.routingKeyHistory).toEqual(['route1', 'route2']);\n    });\n  });\n\n  describe('back', () => {\n    let isPlayingSingleDrawerAnimationSpy: jest.SpyInstance;\n\n    beforeEach(() => {\n      isPlayingSingleDrawerAnimationSpy = jest.spyOn(singleDrawerAnimationController, 'isPlayingSingleDrawerAnimation');\n    });\n    it('should decrease the routingKeyPointer when not playing a single drawer animation', () => {\n      routerStore.state.routingKeyPointer = 2;\n      isPlayingSingleDrawerAnimationSpy.mockReturnValue(false);\n\n      back();\n\n      expect(routerStore.state.routingKeyPointer).toBe(1);\n    });\n\n    it('should not decrease the routingKeyPointer when playing a single drawer animation', () => {\n      routerStore.state.routingKeyPointer = 2;\n      isPlayingSingleDrawerAnimationSpy.mockReturnValue(true);\n\n      back();\n\n      expect(routerStore.state.routingKeyPointer).toBe(2);\n    });\n\n    it('should clear the savedDealerCookie when going back from a dealer details route', () => {\n      routerStore.state.routingKeyPointer = 2;\n      routerStore.state.routingKeyHistory = ['main_menu', RoutingKeys.DEALER_SEARCH, 'find_a_dealer/dealer-id'];\n      dealerSearchResultsStore.state.savedDealerCookie = {\n        id: mockPPNDealer.id,\n        longitude: mockPPNDealer.coordinates.longitude,\n        latitude: mockPPNDealer.coordinates.latitude\n      };\n\n      isPlayingSingleDrawerAnimationSpy.mockReturnValue(false);\n\n      back();\n\n      expect(routerStore.state.routingKeyPointer).toBe(1);\n      expect(dealerSearchResultsStore.state.savedDealerCookie).toBe(null);\n    });\n  });\n});\n"]}