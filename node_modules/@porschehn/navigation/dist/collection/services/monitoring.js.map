{"version":3,"file":"monitoring.js","sourceRoot":"","sources":["../../../src/services/monitoring.ts"],"names":[],"mappings":"AAAA,0BAA0B;AAC1B,0EAA0E;AAC1E,4DAA4D;AAC5D,gEAAgE;AAChE,kDAAkD;AAClD,gDAAgD;AAChD,kDAAkD;AAElD,MAAM,UAAU,oBAAoB;EAClC,0CAA0C;EAC1C,iBAAiB;EACjB,yBAAyB;EACzB,wBAAwB;EACxB,yDAAyD;EACzD,2BAA2B;EAC3B,uEAAuE;EACvE,+DAA+D;EAC/D,qBAAqB;EACrB,QAAQ;EACR,QAAQ;EACR,IAAI;AACN,CAAC;AAED,kHAAkH;AAClH,0BAA0B;AAC1B,YAAY;AACZ,iBAAiB;AACjB,4BAA4B;AAC5B,iDAAiD;AACjD,gDAAgD;AAChD,MAAM;AACN,MAAM;AACN,IAAI","sourcesContent":["/* istanbul ignore file */\n// import { captureException, init as SentryInit } from '@sentry/browser';\n// import { navStateStore } from '../state/nav-state-store';\n// import { ErrorEvent, Event, EventHint } from '@sentry/types';\n// import featureToggles from './feature-toggles';\n// import windowService from './window-service';\n// import { VERSION } from '../utility/constants';\n\nexport function initMonitoringSystem(): void {\n  // if (featureToggles.isSentryEnabled()) {\n  //   SentryInit({\n  //     dsn: 'SENTRY_DNS',\n  //     release: VERSION,\n  //     environment: navStateStore.state.env || undefined,\n  //     tracesSampleRate: 0,\n  //     beforeSend: (event: ErrorEvent, _: EventHint): Event | null => {\n  //       if (event.tags?.origin === 'PHN_HEADER') return event;\n  //       return null;\n  //     }\n  //   });\n  // }\n}\n\n// export function captureNaviException(err: Error, extras: { breakpoint: number; locale: string | null }): void {\n// captureException(err, {\n//   tags: {\n//     ...extras,\n//     origin: 'PHN_HEADER',\n//     hostname: windowService.location.hostname,\n//     pathname: windowService.location.pathname\n//   }\n// });\n// }\n"]}