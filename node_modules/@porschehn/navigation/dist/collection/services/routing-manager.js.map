{"version":3,"file":"routing-manager.js","sourceRoot":"","sources":["../../../src/services/routing-manager.ts"],"names":[],"mappings":"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","sourcesContent":["import { routerStore } from '../state/router-store';\nimport { constructRoutingKey, findTopLevelRoutingKey, RoutingKeyPointers, RoutingKeys } from '../entities/routing-key';\nimport { dispatchEvent, isDesktop } from '../utility/helper';\nimport windowService from './window-service';\nimport { dealerSearchResultsStore } from '../state/dealer-search-results-store';\nimport { isPlayingSingleDrawerAnimation } from '../components/single-drawer/animations/animations-controller';\n\nexport const getCurrentRoute = (): string => {\n  const { routingKeyHistory, routingKeyPointer } = routerStore.state;\n  return routingKeyHistory[routingKeyPointer] || '';\n};\n\nexport const getAnimatedRoute = (): string => {\n  const { routingKeyHistory, animatingPointer } = routerStore.state;\n  return routingKeyHistory[animatingPointer] || '';\n};\n\nexport const goTo = (...routes: string[]): void => {\n  const newHistory = [RoutingKeys.MAIN_MENU, ...routes];\n  routerStore.state.routingKeyPointer = routes.length;\n  routerStore.state.routingKeyHistory = newHistory;\n};\n\nexport const back = (): void => {\n  if (!isPlayingSingleDrawerAnimation()) {\n    if (findTopLevelRoutingKey(getCurrentRoute()) === RoutingKeys.DEALER_SEARCH) {\n      dealerSearchResultsStore.state.savedDealerCookie = null;\n    }\n    routerStore.state.routingKeyPointer = routerStore.state.routingKeyPointer - 1;\n  }\n};\n\nexport const pop = (): void => {\n  if (isNavigatingBackwards()) routerStore.state.routingKeyHistory.pop();\n};\n\nexport const addRoute = (newRoute: string[]): void => {\n  if (isDesktop(windowService.getBreakpoint())) {\n    dispatchEvent('phn-router', 'mobileMenuItemClick', {\n      bubbles: true,\n      cancelable: false,\n      detail: [constructRoutingKey(getCurrentRoute(), ...newRoute)]\n    });\n  } else {\n    const newHistory = [...routerStore.state.routingKeyHistory, constructRoutingKey(getCurrentRoute(), ...newRoute)];\n    routerStore.state.routingKeyPointer = newHistory.length - 1;\n    routerStore.state.routingKeyHistory = newHistory;\n  }\n};\n\nexport const reset = (): void => {\n  routerStore.state.routingKeyPointer = -1;\n};\n\nexport const isNavigatingBackwards = (): boolean => {\n  return routerStore.state.routingKeyPointer < routerStore.state.routingKeyHistory.length - 1;\n};\n\nexport const isAnimating = (): boolean => {\n  const { routingKeyPointer, animatingPointer } = routerStore.state;\n  return routingKeyPointer !== animatingPointer;\n};\n\n//____________ANIMATIONS______________//\n\nexport const isAnimatingForward = (): boolean => {\n  return routerStore.state.routingKeyPointer > routerStore.state.animatingPointer;\n};\n\nexport const isAnimatingBackward = (): boolean => {\n  return routerStore.state.routingKeyPointer < routerStore.state.animatingPointer;\n};\n\nexport const isOpening = (): boolean => {\n  return (\n    routerStore.state.animatingPointer === RoutingKeyPointers.LEVEL_ZERO && routerStore.state.routingKeyPointer >= 0\n  );\n};\n\nexport const isOpened = (): boolean => {\n  return !isClosed();\n};\n\nexport const isClosed = (): boolean => {\n  return (\n    routerStore.state.routingKeyPointer === RoutingKeyPointers.LEVEL_ZERO &&\n    routerStore.state.animatingPointer === RoutingKeyPointers.LEVEL_ZERO\n  );\n};\nexport const isClosing = (): boolean => {\n  return routerStore.state.routingKeyPointer === -1 && routerStore.state.animatingPointer >= 0;\n};\n\nexport const syncAnimation = () => {\n  routerStore.state.animatingPointer = routerStore.state.routingKeyPointer;\n};\n\nexport const showBackButton = (section: string): boolean => {\n  const sectionKey = routerStore.state.routingKeyHistory.indexOf(section);\n\n  return sectionKey >= RoutingKeyPointers.LEVEL_TWO;\n};\n"]}