import { Environments } from "../entities/environment";
import { VERSION } from "../utility/constants";
import { NaviError, NaviErrorTypes } from "../utility/navi-error";
import windowService from "./window-service";
// import { captureNaviException } from './monitoring';
import { navStateStore } from "../state/nav-state-store";
export const LOGGING_ENDPOINT = 'https://logs.nav.porsche.com';
class Logger {
  constructor() {
    this.version = VERSION;
    this.breakpoint = 0;
    this.locale = null;
  }
  init(_, locale) {
    this.breakpoint = windowService.getBreakpoint();
    this.locale = locale;
  }
  log(logName, level, id, message, errorType) {
    const { env } = navStateStore.state;
    if (env === Environments.TEST) {
      return;
    }
    try {
      const log = JSON.stringify({
        name: logName,
        level: level,
        env: env,
        breakpoint: this.breakpoint,
        locale: this.locale,
        version: this.version,
        hostname: windowService.location.hostname,
        pathname: windowService.location.pathname,
        id,
        errorType: errorType || '',
        message
      });
      if (env !== Environments.PRODUCTION) {
        // eslint-disable-next-line no-console
        console[level](log);
      }
      // eslint-disable-next-line no-empty
    }
    catch (err) { }
  }
  info(id, message = '') {
    this.log('PHN_HEADER_LOG_ENTRY', "info" /* LogLevel.INFO */, id, message);
  }
  error(id, err) {
    const errorType = err instanceof NaviError ? err.type : NaviErrorTypes.GENERAL;
    this.log('PHN_HEADER_LOG_ENTRY', "error" /* LogLevel.ERROR */, id, err.message, errorType);
    // captureNaviException(err, { breakpoint: this.breakpoint, locale: this.locale });
  }
}
export default new Logger();
//# sourceMappingURL=logger.js.map
