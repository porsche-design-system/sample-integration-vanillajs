import { Environments } from "../entities/environment";
import { VERSION } from "../utility/constants";
import { NaviError, NaviErrorTypes } from "../utility/navi-error";
import windowService from "./window-service";
export const LOGGING_ENDPOINT = 'https://logs.nav.porsche.com';
class Logger {
  constructor() {
    this.env = null;
    this.version = VERSION;
    this.breakpoint = 0;
    this.locale = null;
  }
  init(env, breakpoint, locale) {
    this.env = env;
    this.breakpoint = breakpoint;
    this.locale = locale;
  }
  log(logName, level, id, message, errorType) {
    if (this.env === Environments.TEST) {
      return;
    }
    try {
      const log = JSON.stringify({
        name: logName,
        level: level,
        env: this.env,
        breakpoint: this.breakpoint,
        locale: this.locale,
        version: this.version,
        hostname: windowService.location.hostname,
        pathname: windowService.location.pathname,
        id,
        errorType: errorType || '',
        message
      });
      if (this.env === Environments.PRODUCTION) {
        if (level !== "debug" /* LogLevel.DEBUG */) {
          fetch(LOGGING_ENDPOINT, {
            method: 'POST',
            body: log,
            mode: 'no-cors'
          });
        }
      }
      else {
        // eslint-disable-next-line no-console
        console[level](log);
      }
    }
    catch (err) {
      // throw the error away
    }
  }
  info(id, message = '') {
    this.log('PHN_HEADER_LOG_ENTRY', "info" /* LogLevel.INFO */, id, message);
  }
  error(id, err) {
    const errorType = err instanceof NaviError ? err.type : NaviErrorTypes.GENERAL;
    this.log('PHN_HEADER_LOG_ENTRY', "error" /* LogLevel.ERROR */, id, err.message, errorType);
  }
}
export default new Logger();
//# sourceMappingURL=logger.js.map
