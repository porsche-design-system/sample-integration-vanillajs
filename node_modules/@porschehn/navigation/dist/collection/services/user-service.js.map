{"version":3,"file":"user-service.js","sourceRoot":"","sources":["../../../src/services/user-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { Config } from '../entities/config';\nimport { RegionLocales, splitLocale } from '../entities/locale';\nimport { navStateStore } from '../state/nav-state-store';\nimport {\n  DEFAULT_UNREAD_MESSAGES_COUNT,\n  IFRAME_ID,\n  LOGGED_IN_USER_NO_NAME_STATUS,\n  LOGGED_OUT_USER_STATUS\n} from '../utility/constants';\nimport { constructCacheKey, IsLoggedIn, getQueryString, getString, isString } from '../utility/helper';\nimport { NaviError, NaviErrorTypes } from '../utility/navi-error';\nimport globalDataLayerService from './analytics/global-data-layer-service';\nimport windowService from './window-service';\nimport { getUserInformation } from './user-information-service';\nimport { finderStateStore } from '../state/finder-state-store';\n\ntype UserData = {\n  firstName?: string;\n  lastName?: string;\n  porscheId?: string;\n};\n\nexport function getUserNameFromUserData(userData: UserData): string {\n  let status = '';\n\n  const firstName = getString(userData.firstName);\n  const lastName = getString(userData.lastName);\n\n  if (isString(firstName)) {\n    status = firstName;\n\n    if (isString(lastName)) {\n      status += ` ${lastName}`;\n    }\n  } else {\n    if (isString(lastName)) {\n      status = lastName;\n    }\n  }\n  return status;\n}\n\nexport async function getUserIdFromUserData(userData: UserData): Promise<string> {\n  return await windowService.hashString(getString(userData.porscheId));\n}\n\nexport const userDataCache = new Map<string, UserData>();\n\nasync function getUserData(accessToken: string, locale: string, config: Config): Promise<UserData> {\n  const cacheKey = constructCacheKey(accessToken, locale, config.PROFILE_API_URL);\n\n  const cachedUserData = userDataCache.get(cacheKey);\n  if (cachedUserData !== undefined) {\n    return cachedUserData;\n  }\n\n  let userProfileResponse: Response;\n\n  const { language, country } = splitLocale(locale);\n\n  const init = {\n    method: 'GET',\n    headers: {\n      'Accept-Language': `${language}_${country}`,\n      'x-trace-id': uuidv4(),\n      apikey: getString(config.CLIENT_ID),\n      Authorization: `Bearer ${accessToken}`,\n      Accept: 'application/json'\n    }\n  };\n\n  const query = country !== RegionLocales.INTERNATIONAL ? `?country=${country}` : '';\n\n  try {\n    userProfileResponse = await fetch(`${getString(config.PROFILE_API_URL)}${query}`, init);\n  } catch (err) {\n    const errorMessage = `Exception occurred while fetching user info: ${JSON.stringify((err as Error).message)}`;\n    throw new NaviError(errorMessage, NaviErrorTypes.GENERAL);\n  }\n\n  if (userProfileResponse.status === 401) {\n    throw new NaviError('AccessToken has expired', NaviErrorTypes.UNAUTHORIZED);\n  }\n\n  if (!userProfileResponse.ok) {\n    const errorMessage = `Error occurred: ${userProfileResponse.status} ${userProfileResponse.statusText}`;\n    throw new NaviError(errorMessage, NaviErrorTypes.GENERAL);\n  }\n\n  let userData: UserData;\n\n  try {\n    userData = await userProfileResponse.json();\n  } catch (err) {\n    throw new NaviError(`Could not extract json from user profile response: ${err}`, NaviErrorTypes.GENERAL);\n  }\n\n  if (typeof userData !== 'object' || userData === null) {\n    throw new NaviError('Invalid user data object extracted from user profile response', NaviErrorTypes.NO_RESULTS);\n  }\n\n  userDataCache.set(cacheKey, userData);\n\n  return userData;\n}\n\nexport async function initializeUserData(accessToken: string, locale: string, config: Config): Promise<void> {\n  let loggedInState = LOGGED_OUT_USER_STATUS;\n  let userId: string;\n\n  try {\n    const userData = await getUserData(accessToken, locale, config);\n    loggedInState = getUserNameFromUserData(userData) || LOGGED_IN_USER_NO_NAME_STATUS;\n    userId = await getUserIdFromUserData(userData);\n  } catch (err) {\n    if (!(err instanceof NaviError) || err.type !== NaviErrorTypes.UNAUTHORIZED) {\n      loggedInState = LOGGED_IN_USER_NO_NAME_STATUS;\n    }\n\n    navStateStore.state.unreadMessagesCount = DEFAULT_UNREAD_MESSAGES_COUNT;\n    navStateStore.state.loggedInState = loggedInState;\n    throw err;\n  }\n\n  navStateStore.state.loggedInState = loggedInState;\n  globalDataLayerService.setUser(userId, IsLoggedIn(loggedInState));\n\n  const { savedSearches, savedVehicles, unreadMessages } = await getUserInformation(accessToken, locale);\n\n  finderStateStore.state.savedSearchesCount = savedSearches;\n  finderStateStore.state.savedVehiclesCount = savedVehicles;\n  navStateStore.state.unreadMessagesCount = unreadMessages;\n}\n\nexport function initAuthIframe(config: Config): void {\n  const queryString = getQueryString({\n    domain: config.IDENTITY_PROVIDER_URL,\n    clientId: config.IDENTITY_CLIENT_ID,\n    redirect_uri: config.LOGIN_REDIRECT_URL,\n    audience: config.IDENTITY_AUDIENCE\n  });\n\n  windowService.removeElement(IFRAME_ID);\n  windowService.createIframe(IFRAME_ID, `${config.LOGIN_REDIRECT_URL}?${queryString}`);\n}\n"]}