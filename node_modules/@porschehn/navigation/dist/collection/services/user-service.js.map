{"version":3,"file":"user-service.js","sourceRoot":"","sources":["../../../src/services/user-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Config } from '../entities/config';\nimport { navStateStore } from '../state/nav-state-store';\nimport {\n  DEFAULT_UNREAD_MESSAGES_COUNT,\n  IFRAME_ID,\n  LOGGED_IN_USER_NO_NAME_STATUS,\n  LOGGED_OUT_USER_STATUS\n} from '../utility/constants';\nimport { getQueryString, getString, IsLoggedIn, isString } from '../utility/helper';\nimport { NaviError, NaviErrorTypes } from '../utility/navi-error';\nimport globalDataLayerService from './analytics/global-data-layer-service';\nimport windowService from './window-service';\nimport { getUserInformation } from './user-information-service';\nimport { finderStateStore } from '../state/finder-state-store';\nimport { UserData } from '../entities/user-information';\n\nexport function getUserNameFromUserData(userData: UserData): string {\n  let status = '';\n\n  const firstName = getString(userData.firstName);\n  const lastName = getString(userData.lastName);\n\n  if (isString(firstName)) {\n    status = firstName;\n\n    if (isString(lastName)) {\n      status += ` ${lastName}`;\n    }\n  } else {\n    if (isString(lastName)) {\n      status = lastName;\n    }\n  }\n  return status;\n}\n\nexport async function initializeUserData(accessToken: string, locale: string): Promise<void> {\n  let loggedInState = LOGGED_OUT_USER_STATUS;\n  let userId: string;\n\n  try {\n    const bffData = await getUserInformation(accessToken, locale);\n\n    if (bffData === undefined || bffData === null) {\n      throw new NaviError(`Invalid user data object extracted from user profile response`, NaviErrorTypes.NO_RESULTS);\n    }\n\n    finderStateStore.state.savedSearchesCount = bffData.savedSearches;\n    finderStateStore.state.savedVehiclesCount = bffData.savedVehicles;\n    navStateStore.state.unreadMessagesCount = bffData.unreadMessages;\n    const userData = bffData.userData;\n\n    loggedInState = getUserNameFromUserData(userData) || LOGGED_IN_USER_NO_NAME_STATUS;\n    userId = bffData.userData.userId || '';\n  } catch (err) {\n    if (!(err instanceof NaviError) || err.type !== NaviErrorTypes.UNAUTHORIZED) {\n      loggedInState = LOGGED_IN_USER_NO_NAME_STATUS;\n    }\n\n    navStateStore.state.unreadMessagesCount = DEFAULT_UNREAD_MESSAGES_COUNT;\n    navStateStore.state.loggedInState = loggedInState;\n    throw err;\n  }\n\n  navStateStore.state.loggedInState = loggedInState;\n  globalDataLayerService.setUser(userId, IsLoggedIn(loggedInState));\n}\n\nexport function initAuthIframe(config: Config): void {\n  const queryString = getQueryString({\n    domain: config.IDENTITY_PROVIDER_URL,\n    clientId: config.IDENTITY_CLIENT_ID,\n    redirect_uri: config.LOGIN_REDIRECT_URL,\n    audience: config.IDENTITY_AUDIENCE,\n    scope: config.IDENTITY_USER_SCOPES\n  });\n\n  windowService.removeElement(IFRAME_ID);\n  windowService.createIframe(IFRAME_ID, `${config.LOGIN_REDIRECT_URL}?${queryString}`);\n}\n"]}