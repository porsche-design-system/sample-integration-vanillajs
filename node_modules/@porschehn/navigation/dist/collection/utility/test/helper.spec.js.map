{"version":3,"file":"helper.spec.js","sourceRoot":"","sources":["../../../../src/utility/test/helper.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,6CAA6C,CAAC;AAEzE,OAAO,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAC1F,OAAO,EAAE,cAAc,EAAsB,eAAe,EAAuB,MAAM,cAAc,CAAC;AACxG,OAAO,EACL,mBAAmB,EACnB,qCAAqC,EACrC,mBAAmB,EACnB,aAAa,EACb,eAAe,EACf,2BAA2B,EAC5B,MAAM,WAAW,CAAC;AACnB,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AAEzC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;EACtB,MAAM,WAAW,GAAG,QAAQ,CAAC;EAC7B,MAAM,cAAc,GAAG,YAAY,CAAC;EACpC,MAAM,aAAa,GAAG,WAAW,CAAC;EAClC,MAAM,qBAAqB,GAAG,mBAAmB,CAAC;EAClD,MAAM,oBAAoB,GAAG,kBAAkB,CAAC;EAEhD,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;MAC3B,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;QACpD,MAAM,UAAU,GAAG,mBAAmB,CAAC,SAA0C,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;QAC1G,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;MAC1C,CAAC,CAAC,CAAC;MAEH,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;QACzD,MAAM,UAAU,GAAG,mBAAmB,CAAC,SAA0C,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;QAC1G,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;MAC1C,CAAC,CAAC,CAAC;MAEH,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAClD,MAAM,eAAe,GAAG,mBAAmB,CAAC,cAAc,CAAC,MAAM,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;QAC1F,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAE7C,MAAM,cAAc,GAAG,mBAAmB,CAAC,cAAc,CAAC,MAAM,EAAE,eAAe,CAAC,IAAI,CAAC,CAAC;QACxF,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;MAC9C,CAAC,CAAC,CAAC;MAEH,EAAE,CAAC,gCAAgC,EAAE,GAAG,EAAE;QACxC,MAAM,eAAe,GAAG,mBAAmB,CAAC,cAAc,CAAC,WAAW,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;QAC/F,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;QAEvD,MAAM,2BAA2B,GAAG,mBAAmB,CACrD,cAAc,CAAC,WAAW,EAC1B,SAA2C,CAC5C,CAAC;QACF,MAAM,CAAC,2BAA2B,CAAC,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;QAEnE,MAAM,cAAc,GAAG,mBAAmB,CAAC,cAAc,CAAC,WAAW,EAAE,eAAe,CAAC,IAAI,CAAC,CAAC;QAC7F,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;MACvD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;MACzB,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;QACzD,MAAM,UAAU,GAAG,mBAAmB,CAAC,cAAc,CAAC,IAAI,EAAE,SAA2C,CAAC,CAAC;QACzG,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;MAC7C,CAAC,CAAC,CAAC;MAEH,EAAE,CAAC,sDAAsD,EAAE,GAAG,EAAE;QAC9D,MAAM,UAAU,GAAG,mBAAmB,CAAC,cAAc,CAAC,IAAI,EAAE,UAA4C,CAAC,CAAC;QAC1G,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;MAC7C,CAAC,CAAC,CAAC;MAEH,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;QAC5D,MAAM,UAAU,GAAG,mBAAmB,CAAC,cAAc,CAAC,IAAI,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;QACnF,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;MAC7C,CAAC,CAAC,CAAC;MAEH,EAAE,CAAC,kDAAkD,EAAE,GAAG,EAAE;QAC1D,MAAM,UAAU,GAAG,mBAAmB,CAAC,cAAc,CAAC,IAAI,EAAE,eAAe,CAAC,IAAI,CAAC,CAAC;QAClF,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;MAC5C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,EAAE,CAAC,kEAAkE,EAAE,GAAG,EAAE;MAC1E,MAAM,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC;MACnC,MAAM,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC;MAEjC,MAAM,MAAM,GAAG,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MAE1C,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uEAAuE,EAAE,GAAG,EAAE;MAC/E,MAAM,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC;MACnC,MAAM,IAAI,GAAG,cAAc,CAAC,MAAM,CAAC;MAEnC,MAAM,MAAM,GAAG,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MAE1C,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oEAAoE,EAAE,GAAG,EAAE;MAC5E,MAAM,KAAK,GAAG,eAAe,CAAC,KAAK,CAAC;MACpC,MAAM,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC;MAEjC,MAAM,MAAM,GAAG,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MAE1C,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wEAAwE,EAAE,GAAG,EAAE;MAChF,MAAM,KAAK,GAAG,eAAe,CAAC,KAAK,CAAC;MACpC,MAAM,IAAI,GAAG,cAAc,CAAC,WAAW,CAAC;MAExC,MAAM,MAAM,GAAG,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MAE1C,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wEAAwE,EAAE,GAAG,EAAE;MAChF,MAAM,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC;MACnC,MAAM,IAAI,GAAG,cAAc,CAAC,WAAW,CAAC;MAExC,MAAM,MAAM,GAAG,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MAE1C,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,EAAE,CAAC,2EAA2E,EAAE,GAAG,EAAE;MACnF,MAAM,mBAAmB,GAAG,8CAA8C,CAAC;MAC3E,MAAM,MAAM,GAAG,mBAAmB,CAAC,mBAAmB,EAAE,EAAE,cAAc,EAAE,mBAAmB,EAAE,CAAC,CAAC;MAEjG,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,+EAA+E,CAAC,CAAC;IAC1G,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8FAA8F,EAAE,GAAG,EAAE;MACtG,MAAM,sBAAsB,GAAG,sBAAsB,CAAC;MACtD,MAAM,MAAM,GAAG,mBAAmB,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,CAAC;MAEpF,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;IAC3C,MAAM,WAAW,GAAG,EAAE,iBAAiB,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC;IAEjE,EAAE,CAAC,uDAAuD,EAAE,GAAG,EAAE;MAC/D,MAAM,qBAAqB,GAAG,WAAW,CAAC,IAAI,CAAC;MAC/C,MAAM,MAAM,GAAG,2BAA2B,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;MAEtE,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE,GAAG,EAAE;MACvE,MAAM,qBAAqB,GAAG,WAAW,CAAC,IAAI,CAAC;MAC/C,MAAM,MAAM,GAAG,2BAA2B,CAAC,qBAAqB,EAAE;QAChE,oBAAoB;QACpB,4BAA4B;OAC7B,CAAC,CAAC;MAEH,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0EAA0E,EAAE,GAAG,EAAE;MAClF,MAAM,QAAQ,GAAG,CAAC,+BAA+B,EAAE,6BAA6B,CAAC,CAAC;MAClF,MAAM,qBAAqB,GAAG,WAAW,CAAC,IAAI,CAAC;MAC/C,MAAM,MAAM,GAAG,2BAA2B,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;MAE5E,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sFAAsF,EAAE,GAAG,EAAE;MAC9F,MAAM,QAAQ,GAAG,CAAC,+BAA+B,EAAE,kBAAkB,CAAC,CAAC;MACvE,MAAM,qBAAqB,GAAG,WAAW,CAAC,IAAI,CAAC;MAC/C,MAAM,MAAM,GAAG,2BAA2B,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;MAE5E,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,EAAE,CAAC,2EAA2E,EAAE,GAAG,EAAE;MACnF,MAAM,kBAAkB,GAAG,UAAU,CAAC;MACtC,MAAM,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;MACxC,MAAM,eAAe,GAAiB,eAAe,CAAC,OAAO,EAAE,kBAAmC,CAAC,CAAC;MAEpG,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC;QAC9B,QAAQ,EAAE;UACR;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,uCAAuC;YAC3C,IAAI,EAAE,wDAAwD;YAC9D,IAAI,EAAE,4BAA4B;WACnC;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,8BAA8B;YAClC,IAAI,EAAE,8DAA8D;YACpE,IAAI,EAAE,kCAAkC;WACzC;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,uCAAuC;YAC3C,IAAI,EAAE,wEAAwE;YAC9E,IAAI,EAAE,4CAA4C;WACnD;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,qCAAqC;YACzC,IAAI,EAAE,qEAAqE;YAC3E,IAAI,EAAE,0CAA0C;WACjD;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,4BAA4B;YAChC,IAAI,EAAE,0DAA0D;YAChE,IAAI,EAAE,sCAAsC;WAC7C;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,iCAAiC;YACrC,IAAI,EAAE,kEAAkE;YACxE,IAAI,EAAE,uBAAuB;WAC9B;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,2BAA2B;YAC/B,IAAI,EAAE,2DAA2D;YACjE,IAAI,EAAE,2BAA2B;WAClC;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,gCAAgC;YACpC,IAAI,EAAE,qEAAqE;YAC3E,IAAI,EAAE,iBAAiB;WACxB;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,iCAAiC;YACrC,IAAI,EAAE,qCAAqC;YAC3C,IAAI,EAAE,mBAAmB;WAC1B;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,wCAAwC;YAC5C,IAAI,EAAE,iFAAiF;YACvF,IAAI,EAAE,4BAA4B;WACnC;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,mCAAmC;YACvC,IAAI,EAAE,0DAA0D;YAChE,IAAI,EAAE,mBAAmB;WAC1B;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,gCAAgC;YACpC,IAAI,EAAE,wFAAwF;YAC9F,IAAI,EAAE,eAAe;WACtB;SACF;QACD,EAAE,EAAE,mBAAmB;QACvB,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,UAAU;OACjB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qFAAqF,EAAE,GAAG,EAAE;MAC7F,MAAM,kBAAkB,GAAG,iBAAiB,CAAC;MAC7C,MAAM,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;MACxC,MAAM,eAAe,GAAiB,eAAe,CAAC,OAAO,EAAE,kBAAmC,CAAC,CAAC;MAEpG,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC;QAC9B,QAAQ,EAAE;UACR;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,2CAA2C;YAC/C,IAAI,EAAE,2CAA2C;YACjD,IAAI,EAAE,sBAAsB;WAC7B;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,oCAAoC;YACxC,IAAI,EAAE,2CAA2C;YACjD,IAAI,EAAE,WAAW;WAClB;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,kCAAkC;YACtC,IAAI,EAAE,2CAA2C;YACjD,IAAI,EAAE,SAAS;WAChB;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,mCAAmC;YACvC,IAAI,EAAE,2CAA2C;YACjD,IAAI,EAAE,sCAAsC;WAC7C;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,wCAAwC;YAC5C,IAAI,EAAE,2CAA2C;YACjD,IAAI,EAAE,qBAAqB;WAC5B;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,oCAAoC;YACxC,IAAI,EAAE,2CAA2C;YACjD,IAAI,EAAE,4CAA4C;WACnD;SACF;QACD,EAAE,EAAE,0BAA0B;QAC9B,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,kBAAkB;OACzB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mEAAmE,EAAE,GAAG,EAAE;MAC3E,MAAM,kBAAkB,GAAG,MAAM,CAAC;MAClC,MAAM,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;MACxC,MAAM,eAAe,GAAiB,eAAe,CAAC,OAAO,EAAE,kBAAmC,CAAC,CAAC;MAEpG,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+EAA+E,EAAE,GAAG,EAAE;MACvF,MAAM,kBAAkB,GAAG,YAAY,CAAC;MACxC,MAAM,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;MACxC,MAAM,eAAe,GAAiB,eAAe,CAAC,OAAO,EAAE,kBAAmC,CAAC,CAAC;MAEpG,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC;QAC9B,QAAQ,EAAE;UACR;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,iCAAiC;YACrC,IAAI,EAAE,yCAAyC;YAC/C,IAAI,EAAE,+BAA+B;WACtC;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,4BAA4B;YAChC,IAAI,EAAE,yEAAyE;YAC/E,IAAI,EAAE,uBAAuB;WAC9B;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,gCAAgC;YACpC,IAAI,EAAE,4DAA4D;YAClE,IAAI,EAAE,kDAAkD;WACzD;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,gCAAgC;YACpC,IAAI,EAAE,+EAA+E;YACrF,IAAI,EAAE,gBAAgB;WACvB;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,qCAAqC;YACzC,IAAI,EAAE,0EAA0E;YAChF,IAAI,EAAE,oCAAoC;WAC3C;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,gCAAgC;YACpC,IAAI,EAAE,4DAA4D;YAClE,IAAI,EAAE,YAAY;WACnB;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,kCAAkC;YACtC,IAAI,EAAE,8DAA8D;YACpE,IAAI,EAAE,eAAe;WACtB;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,+BAA+B;YACnC,IAAI,EAAE,iEAAiE;YACvE,IAAI,EAAE,aAAa;WACpB;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,mCAAmC;YACvC,IAAI,EAAE,gEAAgE;YACtE,IAAI,EAAE,sCAAsC;WAC7C;UACD;YACE,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,iCAAiC;YACrC,IAAI,EAAE,wDAAwD;YAC9D,IAAI,EAAE,0BAA0B;WACjC;SACF;QACD,EAAE,EAAE,qBAAqB;QACzB,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,YAAY;OACnB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iGAAiG,EAAE,GAAG,EAAE;MACzG,MAAM,kBAAkB,GAAG,gBAAgB,CAAC;MAC5C,MAAM,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;MACxC,MAAM,eAAe,GAAiB,eAAe,CAAC,OAAO,EAAE,kBAAmC,CAAC,CAAC;MAEpG,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,uCAAuC,EAAE,GAAG,EAAE;IACrD,EAAE,CAAC,gHAAgH,EAAE,GAAG,EAAE;MACxH,MAAM,kBAAkB,GAAG,MAAM,CAAC;MAClC,MAAM,aAAa,GAAG,CAAC,4BAA4B,EAAE,8CAA8C,CAAC,CAAC;MACrG,MAAM,iBAAiB,GAAG,qCAAqC,CAAC,CAAC,kBAAkB,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC;MAExG,MAAM,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC;QAChC,MAAM;QACN,iCAAiC;QACjC,8EAA8E;OAC/E,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;MAC3C,MAAM,QAAQ,GAAG;QACf,EAAE,UAAU,EAAE,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE;QAC1C,EAAE,UAAU,EAAE,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;QACzC,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;QACxC,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;QACxC,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE;QACvC,EAAE,UAAU,EAAE,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE;QACxC,EAAE,UAAU,EAAE,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE;OAC3C,CAAC;MAEF,KAAK,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,QAAQ,EAAE;QAC3C,MAAM,MAAM,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;QACxC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;OAC9B;IACH,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { breakpoint } from '@porsche-design-system/components-js/styles';\nimport { Content, TMenu } from '../../entities/content';\nimport { mockLocaleContent, mockNewContent, mockShopContent } from '../../test/test-data';\nimport { NavigationMode, NavigationModeType, NavigationTheme, NavigationThemeType } from '../constants';\nimport {\n  addQueryParamsToUrl,\n  buildRoutingKeyHistoryFromContentPath,\n  constructThemeClass,\n  getRightTheme,\n  getRootMenuItem,\n  getValidContentPathSegments\n} from '../helper';\nimport { getImageSize } from '../helper';\n\ndescribe('helper', () => {\n  const navbarClass = 'navbar';\n  const heroLightClass = 'hero_light';\n  const heroDarkClass = 'hero_dark';\n  const transparentLightClass = 'transparent_light';\n  const transparentDarkClass = 'transparent_dark';\n\n  describe('constructThemeClass', () => {\n    describe('mode navbar', () => {\n      it('should return navbar when no mode is given', () => {\n        const themeClass = constructThemeClass(undefined as unknown as NavigationModeType, NavigationTheme.light);\n        expect(themeClass).toEqual(navbarClass);\n      });\n\n      it('should return navbar when invalid mode is given', () => {\n        const themeClass = constructThemeClass('abdefgh' as unknown as NavigationModeType, NavigationTheme.light);\n        expect(themeClass).toEqual(navbarClass);\n      });\n\n      it('should return navbar when mode is navbar', () => {\n        const lightThemeClass = constructThemeClass(NavigationMode.navbar, NavigationTheme.light);\n        expect(lightThemeClass).toEqual(navbarClass);\n\n        const darkThemeClass = constructThemeClass(NavigationMode.navbar, NavigationTheme.dark);\n        expect(darkThemeClass).toEqual(navbarClass);\n      });\n\n      it('should return transparent mode', () => {\n        const lightThemeClass = constructThemeClass(NavigationMode.transparent, NavigationTheme.light);\n        expect(lightThemeClass).toEqual(transparentLightClass);\n\n        const lightThemeClassWithoutTheme = constructThemeClass(\n          NavigationMode.transparent,\n          undefined as unknown as NavigationThemeType\n        );\n        expect(lightThemeClassWithoutTheme).toEqual(transparentLightClass);\n\n        const darkThemeClass = constructThemeClass(NavigationMode.transparent, NavigationTheme.dark);\n        expect(darkThemeClass).toEqual(transparentDarkClass);\n      });\n    });\n\n    describe('mode hero', () => {\n      it('should return hero light when no theme is given', () => {\n        const themeClass = constructThemeClass(NavigationMode.hero, undefined as unknown as NavigationThemeType);\n        expect(themeClass).toEqual(heroLightClass);\n      });\n\n      it('should return hero light when invalid theme is given', () => {\n        const themeClass = constructThemeClass(NavigationMode.hero, 'abcdefgh' as unknown as NavigationThemeType);\n        expect(themeClass).toEqual(heroLightClass);\n      });\n\n      it('should return hero light when light theme is given', () => {\n        const themeClass = constructThemeClass(NavigationMode.hero, NavigationTheme.light);\n        expect(themeClass).toEqual(heroLightClass);\n      });\n\n      it('should return hero dark when dark theme is given', () => {\n        const themeClass = constructThemeClass(NavigationMode.hero, NavigationTheme.dark);\n        expect(themeClass).toEqual(heroDarkClass);\n      });\n    });\n  });\n\n  describe('get right theme', () => {\n    it('getRightTheme returns \"dark\" when theme is dark and mode is hero', () => {\n      const theme = NavigationTheme.dark;\n      const mode = NavigationMode.hero;\n\n      const result = getRightTheme(theme, mode);\n\n      expect(result).toBe('dark');\n    });\n\n    it('getRightTheme returns \"light\" when theme is dark and mode is not hero', () => {\n      const theme = NavigationTheme.dark;\n      const mode = NavigationMode.navbar;\n\n      const result = getRightTheme(theme, mode);\n\n      expect(result).toBe('light');\n    });\n\n    it('getRightTheme returns \"light\" when theme is light and mode is hero', () => {\n      const theme = NavigationTheme.light;\n      const mode = NavigationMode.hero;\n\n      const result = getRightTheme(theme, mode);\n\n      expect(result).toBe('light');\n    });\n\n    it('getRightTheme returns \"light\" when theme is light and mode is not hero', () => {\n      const theme = NavigationTheme.light;\n      const mode = NavigationMode.transparent;\n\n      const result = getRightTheme(theme, mode);\n\n      expect(result).toBe('light');\n    });\n\n    it('getRightTheme returns \"light\" when theme is light and mode is not hero', () => {\n      const theme = NavigationTheme.dark;\n      const mode = NavigationMode.transparent;\n\n      const result = getRightTheme(theme, mode);\n\n      expect(result).toBe('dark');\n    });\n  });\n\n  describe('addQueryParamsToUrl', () => {\n    it('should return correctly formatted url when given a URL which contains a ?', () => {\n      const urlWithQuestionMark = 'https://a.b.com/test?othertest=differenttest';\n      const actual = addQueryParamsToUrl(urlWithQuestionMark, { yetanothertest: 'yetadifferenttest' });\n\n      expect(actual).toEqual('https://a.b.com/test?othertest=differenttest&yetanothertest=yetadifferenttest');\n    });\n\n    it('should return correctly formatted url when given a URL that does not contain a question mark', () => {\n      const urlWithoutQuestionmark = 'https://a.b.com/test';\n      const actual = addQueryParamsToUrl(urlWithoutQuestionmark, { test: 'anothertest' });\n\n      expect(actual).toEqual('https://a.b.com/test?test=anothertest');\n    });\n  });\n\n  describe('getValidContentPathSegments', () => {\n    const testContent = { mockLocaleContent, shop: mockShopContent };\n\n    it('should return an empty array if no segments are given', () => {\n      const shopRootLevelMenuItem = testContent.shop;\n      const actual = getValidContentPathSegments(shopRootLevelMenuItem, []);\n\n      expect(actual).toEqual([]);\n    });\n\n    it(\"should return an empty array if the first segment isn't valid\", () => {\n      const shopRootLevelMenuItem = testContent.shop;\n      const actual = getValidContentPathSegments(shopRootLevelMenuItem, [\n        'incorrectContentId',\n        'unimportantSecondContentId'\n      ]);\n\n      expect(actual).toEqual([]);\n    });\n\n    it('should return an array containing all segments if all segments are valid', () => {\n      const segments = ['mainmenu.services.accessories', 'mainmenu.service.tequipment'];\n      const shopRootLevelMenuItem = testContent.shop;\n      const actual = getValidContentPathSegments(shopRootLevelMenuItem, segments);\n\n      expect(actual).toEqual(segments);\n    });\n\n    it('should return an array containing only valid segments if the last segment is invalid', () => {\n      const segments = ['mainmenu.services.accessories', 'invalidContentId'];\n      const shopRootLevelMenuItem = testContent.shop;\n      const actual = getValidContentPathSegments(shopRootLevelMenuItem, segments);\n\n      expect(actual).toEqual([segments[0]]);\n    });\n  });\n\n  describe('getRootMenuItem', () => {\n    it('should return the menuItem Services if the topLevelRoutingKey is services', () => {\n      const topLevelRoutingKey = 'services';\n      const content = mockNewContent['de-CH'];\n      const rootContentItem: TMenu | null = getRootMenuItem(content, topLevelRoutingKey as keyof Content);\n\n      expect(rootContentItem).toEqual({\n        children: [\n          {\n            children: [],\n            id: 'mainmenu.vehiclepurchase.eperformance',\n            link: 'https://www.porsche.com/uk/aboutporsche/e-performance/',\n            text: 'E-Mobility & E-Performance'\n          },\n          {\n            children: [],\n            id: 'mainmenu.services.tequipment',\n            link: 'https://www.porsche.com/uk/accessoriesandservice/tequipment/',\n            text: 'Tequipment – Genuine Accessories'\n          },\n          {\n            children: [],\n            id: 'mainmenu.services.exclusivemanufaktur',\n            link: 'https://www.porsche.com/uk/accessoriesandservice/exclusive-manufaktur/',\n            text: 'Exclusive Manufaktur – Individual Vehicles'\n          },\n          {\n            children: [],\n            id: 'mainmenu.services.financialservices',\n            link: 'https://www.porsche.com/uk/accessoriesandservice/financialservices/',\n            text: 'Financial Services – Leasing & Financing'\n          },\n          {\n            children: [],\n            id: 'mainmenu.services.approved',\n            link: 'https://www.porsche.com/uk/approvedused/porscheapproved/',\n            text: 'Approved – Pre-Owned Cars & Warranty'\n          },\n          {\n            children: [],\n            id: 'mainmenu.services.garageservice',\n            link: 'https://www.porsche.com/uk/accessoriesandservice/porscheservice/',\n            text: 'Service & Maintenance'\n          },\n          {\n            children: [],\n            id: 'mainmenu.services.classic',\n            link: 'https://www.porsche.com/uk/accessoriesandservice/classic/',\n            text: 'Classic – Service & Parts'\n          },\n          {\n            children: [],\n            id: 'mainmenu.services.buyingowning',\n            link: 'https://www.porsche.com/uk/accessoriesandservice/owningyourporsche/',\n            text: 'Buying & Owning'\n          },\n          {\n            children: [],\n            id: 'mainmenu.services.autoinsurance',\n            link: 'https://www.insurewithporsche.co.uk',\n            text: 'Vehicle Insurance'\n          },\n          {\n            children: [],\n            id: 'mainmenu.services.serviceforbusinesses',\n            link: 'https://www.porsche.com/uk/accessoriesandservice/financialservices-contacthire/',\n            text: 'Contract hire for business'\n          },\n          {\n            children: [],\n            id: 'mainmenu.services.sellyourporsche',\n            link: 'https://www.porsche.com/uk/approvedused/sellyourporsche/',\n            text: 'Sell your Porsche'\n          },\n          {\n            children: [],\n            id: 'mainmenu.services.recallsearch',\n            link: 'https://recall.porsche.com/prod/pag/vinrecalllookup_V3.nsf/VIN?ReadForm&c=greatbritain',\n            text: 'Recall Search'\n          }\n        ],\n        id: 'mainmenu.services',\n        link: '',\n        text: 'Services'\n      });\n    });\n\n    it('should return the menuItem VehiclePurschase if topLevelRoutingKeyis vehiclePurchase', () => {\n      const topLevelRoutingKey = 'vehiclePurchase';\n      const content = mockNewContent['de-CH'];\n      const rootContentItem: TMenu | null = getRootMenuItem(content, topLevelRoutingKey as keyof Content);\n\n      expect(rootContentItem).toEqual({\n        children: [\n          {\n            children: [],\n            id: 'mainmenu.vehiclepurchase.newusedinventory',\n            link: 'http://www.porsche.com/gb/en-GB/test-shop',\n            text: 'New & Used Inventory'\n          },\n          {\n            children: [],\n            id: 'mainmenu.vehiclepurchase.configure',\n            link: 'http://www.porsche.com/gb/en-GB/test-shop',\n            text: 'Configure'\n          },\n          {\n            children: [],\n            id: 'mainmenu.vehiclepurchase.compare',\n            link: 'http://www.porsche.com/gb/en-GB/test-shop',\n            text: 'Compare'\n          },\n          {\n            children: [],\n            id: 'mainmenu.vehiclepurchase.approved',\n            link: 'http://www.porsche.com/gb/en-GB/test-shop',\n            text: 'Approved - Pre-owned Cars & Warranty'\n          },\n          {\n            children: [],\n            id: 'mainmenu.vehiclepurchase.onlinepayment',\n            link: 'http://www.porsche.com/gb/en-GB/test-shop',\n            text: 'Online Bill Payment'\n          },\n          {\n            children: [],\n            id: 'mainmenu.vehiclepurchase.exclusive',\n            link: 'http://www.porsche.com/gb/en-GB/test-shop',\n            text: 'Exclusive Manufactur - Individual Vehicles'\n          }\n        ],\n        id: 'mainmenu.vehiclepurchase',\n        link: '',\n        text: 'Vehicle Purchase'\n      });\n    });\n\n    it('should return the menuItem Shop if the topLevelRoutingKey is shop', () => {\n      const topLevelRoutingKey = 'shop';\n      const content = mockNewContent['de-CH'];\n      const rootContentItem: TMenu | null = getRootMenuItem(content, topLevelRoutingKey as keyof Content);\n\n      expect(rootContentItem).toEqual(mockNewContent['de-CH'].shop);\n    });\n\n    it('should return the menuItem Experience if the topLevelRoutingKey is experience', () => {\n      const topLevelRoutingKey = 'experience';\n      const content = mockNewContent['de-CH'];\n      const rootContentItem: TMenu | null = getRootMenuItem(content, topLevelRoutingKey as keyof Content);\n\n      expect(rootContentItem).toEqual({\n        children: [\n          {\n            children: [],\n            id: 'mainmenu.experience.silverstone',\n            link: 'https://www.porsche.com/silverstone/en/',\n            text: 'Experience Centre Silverstone'\n          },\n          {\n            children: [],\n            id: 'mainmenu.experience.events',\n            link: 'https://www.porsche.com/uk/motorsportandevents/events-and-partnerships/',\n            text: 'Events & Partnerships'\n          },\n          {\n            children: [],\n            id: 'mainmenu.experience.experience',\n            link: 'https://www.porsche.com/uk/motorsportandevents/experience/',\n            text: 'Porsche Experience – Driving & Track Experiences'\n          },\n          {\n            children: [],\n            id: 'mainmenu.experience.carreracup',\n            link: 'https://www.porsche.com/uk/motorsportandevents/porschecarreracupgreatbritain/',\n            text: 'Carrera Cup GB'\n          },\n          {\n            children: [],\n            id: 'mainmenu.experience.sprintchallenge',\n            link: 'https://www.porsche.com/uk/motorsportandevents/porschesprintchallengegb/',\n            text: 'Cayman Islands Sprint Challenge GB'\n          },\n          {\n            children: [],\n            id: 'mainmenu.experience.motorsport',\n            link: 'https://www.porsche.com/uk/motorsportandevents/motorsport/',\n            text: 'Motorsport'\n          },\n          {\n            children: [],\n            id: 'mainmenu.experience.porscheclubs',\n            link: 'https://www.porsche.com/uk/motorsportandevents/porscheclubs/',\n            text: 'Porsche Clubs'\n          },\n          {\n            children: [],\n            id: 'mainmenu.experience.golfsport',\n            link: 'https://www.porsche.com/international/motorsportandevents/golf/',\n            text: 'Golf Sports'\n          },\n          {\n            children: [],\n            id: 'mainmenu.experience.christophorus',\n            link: 'https://www.porsche.com/uk/aboutporsche/christophorusmagazine/',\n            text: 'Christophorus – The Porsche Magazine'\n          },\n          {\n            children: [],\n            id: 'mainmenu.experience.visitmuseum',\n            link: 'https://www.porsche.com/uk/aboutporsche/porschemuseum/',\n            text: 'Visit the Porsche Museum'\n          }\n        ],\n        id: 'mainmenu.experience',\n        link: '',\n        text: 'Experience'\n      });\n    });\n\n    it('should return null if the topLevelRoutingKey is not experience, shop, vehiclePurchase, srevices', () => {\n      const topLevelRoutingKey = 'NoneOfTheAbove';\n      const content = mockNewContent['de-CH'];\n      const rootContentItem: TMenu | null = getRootMenuItem(content, topLevelRoutingKey as keyof Content);\n\n      expect(rootContentItem).toEqual(null);\n    });\n  });\n\n  describe('buildRoutingKeyHistoryFromContentPath', () => {\n    it('should return routing history for shop>mainmenu.shops.accessories>mainmenu.shops.accessories.preownedinventory', () => {\n      const topLevelRoutingKey = 'shop';\n      const validSegments = ['mainmenu.shops.accessories', 'mainmenu.shops.accessories.preownedinventory'];\n      const routingKeyHistory = buildRoutingKeyHistoryFromContentPath([topLevelRoutingKey, ...validSegments]);\n\n      expect(routingKeyHistory).toEqual([\n        'shop',\n        'shop/mainmenu.shops.accessories',\n        'shop/mainmenu.shops.accessories/mainmenu.shops.accessories.preownedinventory'\n      ]);\n    });\n  });\n\n  describe('getImageSize', () => {\n    it('should return correct image sizes', () => {\n      const expected = [\n        { breakpoint: breakpoint.xxl, size: 1920 },\n        { breakpoint: breakpoint.xl, size: 1920 },\n        { breakpoint: breakpoint.l, size: 1360 },\n        { breakpoint: breakpoint.m, size: 1024 },\n        { breakpoint: breakpoint.s, size: 760 },\n        { breakpoint: breakpoint.xs, size: 390 },\n        { breakpoint: breakpoint.base, size: 320 }\n      ];\n\n      for (const { breakpoint, size } of expected) {\n        const actual = getImageSize(breakpoint);\n        expect(actual).toEqual(size);\n      }\n    });\n  });\n});\n"]}