{"version":3,"file":"single-drawer.js","sourceRoot":"","sources":["../../../../src/components/single-drawer/single-drawer.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, h, Host, Listen, Prop } from '@stencil/core';\nimport { RoutingKeys } from '../../entities/routing-key';\nimport { focusOnElement, getHTMLElement, isString } from '../../utility/helper';\nimport { Timeout } from '../../utility/timeout';\nimport DrawerContent from './drawer-content';\nimport { getAllFocusableElements } from '../double-drawer/helper';\nimport { getCurrentRoute, isAnimatingForward } from '../../services/routing-manager';\nimport { routerStore } from '../../state/router-store';\nimport { handleAnimationRouting } from './animations/animations-controller';\nimport registerSingleDrawerAnimationSequences from './animations/animations-register';\n\n@Component({\n  tag: 'phn-single-drawer',\n  scoped: true,\n  styleUrl: 'single-drawer.scss'\n})\nexport class SingleDrawer {\n  @Prop() breakpoint!: number;\n  @Prop() locale!: string;\n  @Prop() usingKeyboard = false;\n  @Prop() receivedContent = false;\n\n  @Element() el!: HTMLPhnSingleDrawerElement;\n\n  private focusTimeout = new Timeout(0);\n\n  @Listen('keydown', { passive: false })\n  handleKeyDown(e: KeyboardEvent): void {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    const targetElement = getHTMLElement(e.target);\n    if (targetElement === null) {\n      return;\n    }\n\n    let focusableDrawerElements = getAllFocusableElements(this.el.querySelector('.active'));\n    if (focusableDrawerElements.length === 0) {\n      return;\n    }\n\n    if (getCurrentRoute().startsWith(RoutingKeys.DEALER_SEARCH)) {\n      focusableDrawerElements = focusableDrawerElements.filter(\n        (element) => element.nodeName !== 'BUTTON' && element.nodeName !== 'A'\n      );\n    }\n\n    const firstFocusableDrawerElement = focusableDrawerElements[0];\n    const lastFocusableDrawerElement = focusableDrawerElements[focusableDrawerElements.length - 1];\n\n    if (targetElement === firstFocusableDrawerElement && e.shiftKey) {\n      e.preventDefault();\n\n      if (lastFocusableDrawerElement !== null) {\n        focusOnElement(lastFocusableDrawerElement);\n      }\n\n      return;\n    }\n\n    if (targetElement === lastFocusableDrawerElement && !e.shiftKey) {\n      e.preventDefault();\n\n      if (firstFocusableDrawerElement !== null) {\n        focusOnElement(firstFocusableDrawerElement);\n      }\n\n      return;\n    }\n  }\n\n  componentWillLoad(): void {\n    registerSingleDrawerAnimationSequences();\n  }\n\n  disconnectedCallback(): void {\n    this.focusTimeout.cancel();\n    routerStore.reset();\n  }\n\n  render(): HTMLPhnSingleDrawerElement {\n    const { nextRoute, currentRoute } = handleAnimationRouting();\n\n    return (\n      <Host>\n        {isString(currentRoute) ? (\n          <div class=\"drawer active\" key={currentRoute}>\n            <span class=\"first-focus\" tabIndex={-1} aria-hidden=\"true\" />\n            <DrawerContent\n              routingKey={currentRoute}\n              breakpoint={this.breakpoint}\n              locale={this.locale}\n              receivedContent={this.receivedContent}\n            />\n          </div>\n        ) : null}\n\n        {isString(nextRoute) ? (\n          <div class={`drawer animating`} style={isAnimatingForward() ? { left: '100%' } : {}} key={nextRoute}>\n            <DrawerContent\n              routingKey={nextRoute}\n              breakpoint={this.breakpoint}\n              locale={this.locale}\n              receivedContent={this.receivedContent}\n            />\n          </div>\n        ) : null}\n      </Host>\n    );\n  }\n}\n"]}