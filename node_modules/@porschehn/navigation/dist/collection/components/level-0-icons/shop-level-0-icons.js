import { Fragment, h } from "@stencil/core";
import { handleFilledIcon, isShopAvailable } from "../../utility/helpers/shop-helper";
import animationManager from "../../services/animations/animation-manager";
import { getRightTheme } from "../../utility/helper";
import { navContentStore } from "../../state/nav-content-store";
import { pureButtonSkeleton } from "../../utility/skeleton";
import { EventActions } from "../../utility/constants";
import { shopStateStore } from "../../state/shop-state-store";
import globalDataLayerService from "../../services/analytics/global-data-layer-service";
export default function shopIcons({ locale, app, mode, theme, isNavigationLoaded, isDesktop }) {
  var _a, _b, _c;
  const { shopInformation } = shopStateStore.state;
  const shopCartLink = ((_a = navContentStore.state.shop) === null || _a === void 0 ? void 0 : _a.cart) || '';
  const shopWishlistLink = ((_c = (_b = navContentStore.state.shop) === null || _b === void 0 ? void 0 : _b.wishlist) === null || _c === void 0 ? void 0 : _c.link) || '';
  function getAriaLabelForShoppingBag() {
    return `My shopping bag, ${shopInformation.numberOfShoppingItems} items, estimated subtotal ${shopInformation.subTotal}`;
  }
  function getAriaLabelForWishlist() {
    return `My wishlist, ${shopInformation.wishlistItemsNumber} items`;
  }
  return {
    leftIcons: isShopAvailable(locale, app) ? (h("div", { class: "icon" }, h("phn-p-button-pure", { icon: "search", "hide-label": "true", stretch: "true", aria: "{ 'aria-haspopup': 'dialog', 'aria-label' : 'open the shop search field' }", "data-test-id": "search-button", onClick: () => {
        animationManager.play('openContextualDrawer');
        sendDataLayerEventContextualDrawer();
      }, style: isNavigationLoaded ? {} : { display: 'none' }, theme: getRightTheme(theme, mode) }), !isNavigationLoaded ? pureButtonSkeleton() : null)) : null,
    rightIcons: isShopAvailable(locale, app) ? (h(Fragment, null, isDesktop ? (h("div", { class: "icon" }, h("phn-p-link-pure", { target: '_self', "hide-label": "true", icon: "none", theme: getRightTheme(theme, mode), style: isNavigationLoaded ? {} : { display: 'none' }, className: "wishlist-link", "data-test-id": "wishlist-link", onClick: () => {
        sendDataLayerEventShoppingCart(shopWishlistLink, 'mainmenu.shop.wishlist', 'Wishlist');
      } }, h("a", { href: shopWishlistLink, "aria-label": getAriaLabelForWishlist() }, h("div", { class: "icon-flex" }, h(BadgeCount, { numberOfItems: shopInformation.wishlistItemsNumber, theme: theme, mode: mode }), h("phn-p-icon", { theme: getRightTheme(theme, mode), name: handleFilledIcon('heart', shopInformation.wishlistItemsNumber), "data-test-id": "wishlist-link-icon" })))))) : null, !isNavigationLoaded && isDesktop ? pureButtonSkeleton() : null, h("div", { class: "icon" }, h("phn-p-link-pure", { target: '_self', "hide-label": "true", icon: "none", theme: getRightTheme(theme, mode), style: isNavigationLoaded ? {} : { display: 'none' }, class: "shopping-cart-link", "data-test-id": "shopping-cart-link", onClick: () => {
        sendDataLayerEventShoppingCart(shopCartLink, 'mainmenu.shop.shoppingbag', 'Shopping cart');
      } }, h("a", { href: shopCartLink, "aria-label": getAriaLabelForShoppingBag() }, h("div", { class: "icon-flex" }, h(BadgeCount, { numberOfItems: shopInformation.numberOfShoppingItems, theme: theme, mode: mode }), h("phn-p-icon", { theme: getRightTheme(theme, mode), name: handleFilledIcon('shopping-bag', shopInformation.numberOfShoppingItems), "data-test-id": "shopping-cart-link-icon" })))), !isNavigationLoaded ? pureButtonSkeleton() : null))) : null
  };
}
const BadgeCount = ({ numberOfItems = 0, theme, mode }) => {
  const shoppingItemCountOver99 = '99+';
  const displayedCount = numberOfItems < 99 ? numberOfItems : shoppingItemCountOver99;
  if (numberOfItems <= 0)
    return '';
  return (h("span", { class: `shopping-item-count ${numberOfItems < 10 ? '' : 'pill'} ${getRightTheme(theme, mode)}` }, displayedCount));
};
function sendDataLayerEventContextualDrawer() {
  globalDataLayerService.pushDataLayerEvent(EventActions.CONTEXTUAL_BUTTON_CLICK, {
    componentClick: {
      clickElementId: 'mainmenu.shop.search',
      clickElementName: 'Shop search'
    }
  });
}
function sendDataLayerEventShoppingCart(url, elementId, elementName) {
  globalDataLayerService.pushDataLayerEvent(EventActions.CONTEXTUAL_BUTTON_CLICK, {
    componentClick: {
      clickElementId: elementId,
      clickElementName: elementName,
      targetUrl: url
    }
  });
}
//# sourceMappingURL=shop-level-0-icons.js.map
