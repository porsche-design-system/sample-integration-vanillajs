import { h } from "@stencil/core";
import { RoutingKeys } from "../../entities/routing-key";
import { NavigationMode, NavigationTheme } from "../../utility/constants";
import { IsKeyboardClick } from "../../utility/helper";
import { breakpoint } from "@porsche-design-system/components-js/styles";
import pcomIcons from "./pcom-level-0-icons";
import shopIcons from "./shop-level-0-icons";
import { Application } from "../../utility/constants/app";
import { burgerButtonSkeleton, pureButtonSkeleton } from "../../utility/skeleton";
import { isPcomSearchAvailable } from "../../utility/pcom-search-helper";
import { isShopAvailable } from "../../utility/helpers/shop-helper";
import { navContentStore } from "../../state/nav-content-store";
export class Level0Icons {
  constructor() {
    this.locale = undefined;
    this.theme = NavigationTheme.light;
    this.mode = NavigationMode.navbar;
    this.app = Application.default;
    this.breakpoint = undefined;
    this.isLoading = undefined;
    this.isNavigationLoaded = undefined;
  }
  render() {
    const contextualIconsProps = {
      locale: this.locale,
      app: this.app,
      mode: this.mode,
      theme: this.theme,
      isNavigationLoaded: this.isNavigationLoaded
    };
    const IconsStrategies = {
      pcom: () => pcomIcons(contextualIconsProps),
      shop: () => shopIcons(contextualIconsProps),
      default: () => ({ leftIcons: null, rightIcons: null })
    };
    const iconsStrategy = IconsStrategies[this.app];
    const contextualIcons = iconsStrategy();
    const hasMarketPorscheID = navContentStore.state.myPorsche;
    return (h("div", { class: "contextual-icons" }, h("div", { class: "left-icons" }, h("phn-burger-button", { theme: this.theme, mode: this.mode, hideLabel: isPcomSearchAvailable(this.locale, this.app) || isShopAvailable(this.locale, this.app)
        ? this.breakpoint <= breakpoint.xs
        : this.breakpoint < breakpoint.xs, alignLabel: 'right', isLoading: this.isLoading, onClick: (e) => {
        this.openDrawer.emit({ initialRoutingKey: '', isKeyboardClick: IsKeyboardClick(e) });
      }, style: this.isNavigationLoaded ? {} : { display: 'none' } }), !this.isNavigationLoaded ? burgerButtonSkeleton() : null, this.breakpoint <= breakpoint.xs ? contextualIcons.leftIcons : null), h("slot", null), h("div", { class: "right-icons" }, this.breakpoint > breakpoint.xs ? contextualIcons.leftIcons : null, contextualIcons.rightIcons, hasMarketPorscheID ? (h("div", { class: "icon" }, h("phn-my-porsche-icon-button", { mode: this.mode, theme: this.theme, onClick: (e) => {
        this.openDrawer.emit({
          initialRoutingKey: RoutingKeys.MY_PORSCHE,
          isKeyboardClick: IsKeyboardClick(e)
        });
      }, style: this.isNavigationLoaded ? {} : { display: 'none' } }), !this.isNavigationLoaded ? pureButtonSkeleton() : null)) : null)));
  }
  static get is() { return "phn-level-0-icons"; }
  static get encapsulation() { return "scoped"; }
  static get originalStyleUrls() {
    return {
      "$": ["level-0-icons.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["level-0-icons.css"]
    };
  }
  static get properties() {
    return {
      "locale": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "locale",
        "reflect": false
      },
      "theme": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "NavigationThemeType",
          "resolved": "\"dark\" | \"light\"",
          "references": {
            "NavigationThemeType": {
              "location": "import",
              "path": "../../components",
              "id": "src/components.d.ts::NavigationThemeType"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "theme",
        "reflect": false,
        "defaultValue": "NavigationTheme.light"
      },
      "mode": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "NavigationModeType",
          "resolved": "\"hero\" | \"navbar\" | \"transparent\"",
          "references": {
            "NavigationModeType": {
              "location": "import",
              "path": "../../utility/constants",
              "id": "src/utility/constants/index.ts::NavigationModeType"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "mode",
        "reflect": false,
        "defaultValue": "NavigationMode.navbar"
      },
      "app": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "ApplicationType",
          "resolved": "\"default\" | \"pcom\" | \"shop\"",
          "references": {
            "ApplicationType": {
              "location": "import",
              "path": "../../utility/constants/app",
              "id": "src/utility/constants/app.ts::ApplicationType"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "app",
        "reflect": false,
        "defaultValue": "Application.default"
      },
      "breakpoint": {
        "type": "number",
        "mutable": false,
        "complexType": {
          "original": "number",
          "resolved": "number",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "breakpoint",
        "reflect": false
      },
      "isLoading": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "is-loading",
        "reflect": false
      },
      "isNavigationLoaded": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "is-navigation-loaded",
        "reflect": false
      }
    };
  }
  static get events() {
    return [{
        "method": "openDrawer",
        "name": "openDrawer",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "RoutingKeyWithClick",
          "resolved": "RoutingKeyWithClick",
          "references": {
            "RoutingKeyWithClick": {
              "location": "import",
              "path": "../../entities/routing-key",
              "id": "src/entities/routing-key.ts::RoutingKeyWithClick"
            }
          }
        }
      }];
  }
}
//# sourceMappingURL=level-0-icons.js.map
