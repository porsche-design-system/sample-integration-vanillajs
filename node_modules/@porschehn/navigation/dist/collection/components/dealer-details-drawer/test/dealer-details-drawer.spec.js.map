{"version":3,"file":"dealer-details-drawer.spec.js","sourceRoot":"","sources":["../../../../../src/components/dealer-details-drawer/test/dealer-details-drawer.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { Address } from '../../../entities/dealer-response';\nimport { dealerSearchResultsStore } from '../../../state/dealer-search-results-store';\nimport {\n  mockDealerContent,\n  mockDealerDetailsOpeningHours,\n  mockErrorContent,\n  mockPPNDealer,\n  mockPPNDealerSearchResultsWithLocalizedAddress,\n  mockPPNDistance\n} from '../../../test/test-data';\nimport { ClickElementTypes, EventActions } from '../../../utility/constants';\nimport { DealerDetailsDrawer } from '../dealer-details-drawer';\nimport globalDataLayerService from '../../../services/analytics/global-data-layer-service';\nimport { getHTMLElement } from '../../../utility/helper';\nimport { breakpoint } from '@porsche-design-system/components-js/styles';\nimport { MenuItemCard } from '../../menu-item-card/menu-item-card';\nimport { navContentStore } from '../../../state/nav-content-store';\nimport featureToggles from '../../../services/feature-toggles';\n\ndescribe('dealer-details-drawer', () => {\n  const defaultProps = {\n    locale: 'xx-YY',\n    errorContent: mockErrorContent,\n    showBackButton: false,\n    breakpoint: breakpoint.m\n  };\n\n  it('should show dealer details', async () => {\n    jest.spyOn(featureToggles, 'isDealerSearchOpeningHoursEnabled').mockReturnValue(true);\n\n    dealerSearchResultsStore.state.ppnDealers = {\n      [mockPPNDealer.id]: mockPPNDealerSearchResultsWithLocalizedAddress[0]\n    };\n    navContentStore.set('dealer', mockDealerContent);\n    const page = await newSpecPage({\n      components: [DealerDetailsDrawer, MenuItemCard],\n      template: () => <phn-dealer-details-drawer {...defaultProps} dealerId={mockPPNDealer.id} />\n    });\n\n    expect(page.root).toMatchInlineSnapshot(`\n      <phn-dealer-details-drawer>\n        <phn-p-heading data-test-id=\"dealer-headline\" size=\"large\" tag=\"h3\">\n          localized Porsche Zentrum Stuttgart\n        </phn-p-heading>\n        <phn-menu-item-card data-test-id=\"dealer-address\" tabindex=\"0\" variant=\"dealer-details-variant\">\n          <!---->\n          <a class=\"card-link\" href=\"https://www.google.com/maps/search/?api=1&amp;query=localized%20Porscheplatz%209%2C70435%2Clocalized%20Stuttgart\" tabindex=\"-1\" target=\"_blank\">\n            <div class=\"texts\">\n              <div class=\"phn-align-center phn-flex-row phn-justify-between title-container\">\n                <phn-p-heading size=\"medium\" tag=\"h3\">\n                  localized Porscheplatz 9, 70435 localized Stuttgart\n                </phn-p-heading>\n                <phn-p-icon name=\"pin\"></phn-p-icon>\n              </div>\n            </div>\n          </a>\n        </phn-menu-item-card>\n        <phn-menu-item-card data-test-id=\"dealer-opening-hours\" tabindex=\"0\" variant=\"dealer-details-variant\">\n          <!---->\n          <button tabindex=\"-1\">\n            <div class=\"texts\">\n              <div class=\"phn-align-center phn-flex-row phn-justify-between title-container\">\n                <phn-p-heading size=\"medium\" tag=\"h3\">\n                  Mon: 09:00 - 19:00\n                </phn-p-heading>\n                <phn-p-icon name=\"clock\"></phn-p-icon>\n              </div>\n            </div>\n          </button>\n        </phn-menu-item-card>\n        <phn-menu-item-card data-test-id=\"dealer-phonenumber\" tabindex=\"0\" variant=\"dealer-details-variant\">\n          <!---->\n          <a class=\"card-link\" href=\"tel:+49 711 91126220\" tabindex=\"-1\" target=\"_self\">\n            <div class=\"texts\">\n              <div class=\"phn-align-center phn-flex-row phn-justify-between title-container\">\n                <phn-p-heading size=\"medium\" tag=\"h3\">\n                  +49 711 91126220\n                </phn-p-heading>\n                <phn-p-icon name=\"phone\"></phn-p-icon>\n              </div>\n            </div>\n          </a>\n        </phn-menu-item-card>\n        <phn-menu-item-card data-test-id=\"dealer-email\" tabindex=\"0\" variant=\"dealer-details-variant\">\n          <!---->\n          <a class=\"card-link\" href=\"mailto:info@porsche-stuttgart.de\" tabindex=\"-1\" target=\"_self\">\n            <div class=\"texts\">\n              <div class=\"phn-align-center phn-flex-row phn-justify-between title-container\">\n                <phn-p-heading size=\"medium\" tag=\"h3\">\n                  info@porsche-stuttgart.de\n                </phn-p-heading>\n                <phn-p-icon name=\"email\"></phn-p-icon>\n              </div>\n            </div>\n          </a>\n        </phn-menu-item-card>\n        <phn-menu-item-card data-test-id=\"dealer-homepage\" tabindex=\"0\" variant=\"dealer-details-variant\">\n          <!---->\n          <a class=\"card-link\" href=\"https://www.iamalsoahome.page\" tabindex=\"-1\" target=\"_blank\">\n            <div class=\"texts\">\n              <div class=\"phn-align-center phn-flex-row phn-justify-between title-container\">\n                <phn-p-heading size=\"medium\" tag=\"h3\">\n                  www.iamalsoahome.page\n                </phn-p-heading>\n                <phn-p-icon name=\"globe\"></phn-p-icon>\n              </div>\n            </div>\n          </a>\n        </phn-menu-item-card>\n        <phn-menu-item-card data-test-id=\"dealer-finder-cars\" tabindex=\"0\" variant=\"dealer-details-variant\">\n          <!---->\n          <a class=\"card-link\" href=\"http://www.porsche.com/gb/en_GB/test-finder?dealership=12716\" tabindex=\"-1\" target=\"_self\">\n            <div class=\"texts\">\n              <div class=\"phn-align-center phn-flex-row phn-justify-between title-container\">\n                <phn-p-heading size=\"medium\" tag=\"h3\">\n                  Finder cars\n                </phn-p-heading>\n                <phn-p-icon name=\"car\"></phn-p-icon>\n              </div>\n            </div>\n          </a>\n        </phn-menu-item-card>\n        <phn-menu-item-card data-test-id=\"dealer-book-service\" tabindex=\"0\" variant=\"dealer-details-variant\">\n          <!---->\n          <a class=\"card-link\" href=\"http://www.porsche.com/gb/en_GB/test-service?dealer=4500248\" tabindex=\"-1\" target=\"_self\">\n            <div class=\"texts\">\n              <div class=\"phn-align-center phn-flex-row phn-justify-between title-container\">\n                <phn-p-heading size=\"medium\" tag=\"h3\">\n                  Service\n                </phn-p-heading>\n                <phn-p-icon name=\"wrench\"></phn-p-icon>\n              </div>\n            </div>\n          </a>\n        </phn-menu-item-card>\n        <phn-menu-item-card data-test-id=\"dealer-book-testdrive\" tabindex=\"0\" variant=\"dealer-details-variant\">\n          <!---->\n          <a class=\"card-link\" href=\"http://contact.porsche.com/china/en/test-drive/\" tabindex=\"-1\" target=\"_self\">\n            <div class=\"texts\">\n              <div class=\"phn-align-center phn-flex-row phn-justify-between title-container\">\n                <phn-p-heading size=\"medium\" tag=\"h3\">\n                  Testdrive\n                </phn-p-heading>\n                <phn-p-icon name=\"steering-wheel\"></phn-p-icon>\n              </div>\n            </div>\n          </a>\n        </phn-menu-item-card>\n      </phn-dealer-details-drawer>\n    `);\n  });\n\n  it('should show headline on desktop if dealer name is available', async () => {\n    const dodgeyMockDealer = {\n      ppnDealer: {\n        ...mockPPNDealer\n      },\n      distance: mockPPNDistance\n    };\n\n    dealerSearchResultsStore.state.ppnDealers = { [dodgeyMockDealer.ppnDealer.id]: dodgeyMockDealer };\n\n    const page = await newSpecPage({\n      components: [DealerDetailsDrawer],\n      template: () => (\n        <phn-dealer-details-drawer\n          {...defaultProps}\n          breakpoint={breakpoint.l}\n          dealerId={dodgeyMockDealer.ppnDealer.id}\n        />\n      )\n    });\n\n    const headline = page.root?.querySelector('phn-p-heading[data-test-id=dealer-headline]');\n    expect(headline?.textContent).toEqual('localized Porsche Zentrum Berlin');\n  });\n\n  it('should not show heading when there is no dealer name available', async () => {\n    const dodgeyMockDealer = {\n      ppnDealer: {\n        ...mockPPNDealer,\n        name: '',\n        nameLocalized: ''\n      },\n      distance: mockPPNDistance\n    };\n\n    dealerSearchResultsStore.state.ppnDealers = { [dodgeyMockDealer.ppnDealer.id]: dodgeyMockDealer };\n\n    const page = await newSpecPage({\n      components: [DealerDetailsDrawer],\n      template: () => <phn-dealer-details-drawer {...defaultProps} dealerId={dodgeyMockDealer.ppnDealer.id} />\n    });\n\n    const heading = page.root?.querySelector('[data-test-id=dealer-headline]');\n    expect(heading).toBeNull();\n  });\n\n  it('should not show heading on mobile', async () => {\n    const dodgeyMockDealer = {\n      ppnDealer: {\n        ...mockPPNDealer\n      },\n      distance: mockPPNDistance\n    };\n\n    dealerSearchResultsStore.state.ppnDealers = { [dodgeyMockDealer.ppnDealer.id]: dodgeyMockDealer };\n\n    const page = await newSpecPage({\n      components: [DealerDetailsDrawer],\n      template: () => (\n        <phn-dealer-details-drawer\n          {...defaultProps}\n          breakpoint={breakpoint.base}\n          dealerId={dodgeyMockDealer.ppnDealer.id}\n        />\n      )\n    });\n\n    const heading = page.root?.querySelector('[data-test-id=dealer-headline]');\n    expect(heading).toBeNull();\n  });\n\n  it('should not show dealer address', async () => {\n    const dodgeyMockDealer = {\n      ppnDealer: { ...mockPPNDealer, address: {} as Address },\n      distance: mockPPNDistance\n    };\n\n    dealerSearchResultsStore.state.ppnDealers = { [dodgeyMockDealer.ppnDealer.id]: dodgeyMockDealer };\n\n    const page = await newSpecPage({\n      components: [DealerDetailsDrawer],\n      template: () => <phn-dealer-details-drawer {...defaultProps} dealerId={dodgeyMockDealer.ppnDealer.id} />\n    });\n\n    const address = page.root?.querySelector('[data-test-id=dealer-address]');\n    expect(address).toBeNull();\n  });\n\n  it('should not show dealer phone number', async () => {\n    const dodgeyMockDealer = {\n      ppnDealer: {\n        ...mockPPNDealer,\n        contactDetails: { ...mockPPNDealer.contactDetails, phoneNumber: '' }\n      },\n      distance: mockPPNDistance\n    };\n\n    dealerSearchResultsStore.state.ppnDealers = { [dodgeyMockDealer.ppnDealer.id]: dodgeyMockDealer };\n\n    const page = await newSpecPage({\n      components: [DealerDetailsDrawer],\n      template: () => <phn-dealer-details-drawer {...defaultProps} dealerId={dodgeyMockDealer.ppnDealer.id} />\n    });\n\n    const phoneNumber = page.root?.querySelector('[data-test-id=dealer-phonenumber]');\n    expect(phoneNumber).toBeNull();\n  });\n\n  it('should not show dealer email', async () => {\n    const dodgeyMockDealer = {\n      ppnDealer: {\n        ...mockPPNDealer,\n        contactDetails: { ...mockPPNDealer.contactDetails, emailAddress: '' }\n      },\n      distance: mockPPNDistance\n    };\n\n    dealerSearchResultsStore.state.ppnDealers = { [dodgeyMockDealer.ppnDealer.id]: dodgeyMockDealer };\n\n    const page = await newSpecPage({\n      components: [DealerDetailsDrawer],\n      template: () => <phn-dealer-details-drawer {...defaultProps} dealerId={dodgeyMockDealer.ppnDealer.id} />\n    });\n\n    const email = page.root?.querySelector('[data-test-id=dealer-email]');\n    expect(email).toBeNull();\n  });\n\n  it('should not show dealer homepage', async () => {\n    const dodgeyMockDealer = {\n      ppnDealer: {\n        ...mockPPNDealer,\n        contactDetails: { ...mockPPNDealer.contactDetails, homepage: '' }\n      },\n      distance: mockPPNDistance\n    };\n\n    dealerSearchResultsStore.state.ppnDealers = { [dodgeyMockDealer.ppnDealer.id]: dodgeyMockDealer };\n\n    const page = await newSpecPage({\n      components: [DealerDetailsDrawer],\n      template: () => <phn-dealer-details-drawer {...defaultProps} dealerId={dodgeyMockDealer.ppnDealer.id} />\n    });\n\n    const email = page.root?.querySelector('[data-test-id=dealer-homepage]');\n    expect(email).toBeNull();\n  });\n\n  it('should not show finderCars', async () => {\n    dealerSearchResultsStore.state.ppnDealers = {\n      [mockPPNDealer.id]: mockPPNDealerSearchResultsWithLocalizedAddress[0]\n    };\n\n    const page = await newSpecPage({\n      components: [DealerDetailsDrawer],\n      template: () => (\n        <phn-dealer-details-drawer\n          {...defaultProps}\n          dealerId={mockPPNDealerSearchResultsWithLocalizedAddress[0].ppnDealer.id}\n        />\n      )\n    });\n\n    expect(page.root?.querySelector('[data-test-id=dealer-finder-cars]')).toBeNull();\n  });\n\n  it('should not show bookService', async () => {\n    dealerSearchResultsStore.state.ppnDealers = {\n      [mockPPNDealer.id]: mockPPNDealerSearchResultsWithLocalizedAddress[0]\n    };\n\n    const page = await newSpecPage({\n      components: [DealerDetailsDrawer],\n      template: () => <phn-dealer-details-drawer {...defaultProps} dealerId={mockPPNDealer.id} />\n    });\n\n    expect(page.root?.querySelector('[data-test-id=dealer-book-service]')?.getAttribute('text')).toBe('');\n  });\n\n  it('should show book a test drive in China', async () => {\n    dealerSearchResultsStore.set('ppnDealers', {\n      [mockPPNDealer.id]: mockPPNDealerSearchResultsWithLocalizedAddress[0]\n    });\n\n    navContentStore.set('dealer', mockDealerContent);\n\n    const page = await newSpecPage({\n      components: [DealerDetailsDrawer],\n      template: () => <phn-dealer-details-drawer {...defaultProps} locale=\"en-CN\" dealerId={mockPPNDealer.id} />\n    });\n\n    expect(page.root?.querySelector('[data-test-id=dealer-book-testdrive]')).toBeTruthy();\n  });\n\n  it('should not show book a test drive', async () => {\n    dealerSearchResultsStore.state.ppnDealers = {\n      [mockPPNDealer.id]: mockPPNDealerSearchResultsWithLocalizedAddress[0]\n    };\n\n    const page = await newSpecPage({\n      components: [DealerDetailsDrawer],\n      template: () => <phn-dealer-details-drawer {...defaultProps} dealerId={mockPPNDealer.id} />\n    });\n\n    expect(page.root?.querySelector('[data-test-id=dealer-book-testdrive]')).toBeNull();\n  });\n\n  it('should call global data layer service after component did load ', async () => {\n    const searchTerm = 'Montpellier';\n    dealerSearchResultsStore.state.searchTerm = searchTerm;\n    const mockPPNDealer = mockPPNDealerSearchResultsWithLocalizedAddress[0].ppnDealer;\n    dealerSearchResultsStore.state.ppnDealers = {\n      [mockPPNDealer.id]: mockPPNDealerSearchResultsWithLocalizedAddress[0]\n    };\n\n    const page = await newSpecPage({\n      components: [DealerDetailsDrawer],\n      template: () => (\n        <phn-dealer-details-drawer\n          {...defaultProps}\n          dealerId={mockPPNDealerSearchResultsWithLocalizedAddress[0].ppnDealer.id}\n        />\n      )\n    });\n\n    await page.waitForChanges();\n\n    expect(globalDataLayerService.gdl.DataLayerStore).toHaveLength(1);\n\n    const event = globalDataLayerService.gdl.DataLayerStore[0];\n\n    expect(event.context?.eventAction).toEqual(EventActions.DEALER_DETAILS_SCREEN_LOAD);\n    expect(event.componentSearch).toEqual({ searchTerm });\n    expect(event.partner).toEqual({\n      companyName: mockPPNDealer.name,\n      companyId: mockPPNDealer.porschePartnerNo\n    });\n  });\n\n  it('should call data layer service with custom data layer properties if menu item is clicked', async () => {\n    const searchTerm = 'Montpellier';\n    const mockDealer = mockPPNDealerSearchResultsWithLocalizedAddress[0];\n    const { ppnDealer: mockPPNDealer } = mockDealer;\n    dealerSearchResultsStore.state.searchTerm = searchTerm;\n    dealerSearchResultsStore.state.ppnDealers = {\n      [mockPPNDealer.id]: mockPPNDealerSearchResultsWithLocalizedAddress[0]\n    };\n\n    const page = await newSpecPage({\n      components: [DealerDetailsDrawer, MenuItemCard],\n      template: () => (\n        <phn-dealer-details-drawer\n          {...defaultProps}\n          dealerId={mockPPNDealerSearchResultsWithLocalizedAddress[0].ppnDealer.id}\n        />\n      )\n    });\n\n    getHTMLElement(page.root?.querySelector('a.card-link'))?.click();\n\n    expect(globalDataLayerService.gdl.DataLayerStore).toHaveLength(2);\n\n    const event = globalDataLayerService.gdl.DataLayerStore[1];\n\n    expect(event.context?.eventAction).toEqual(EventActions.DEALER_CONTACT_CLICK);\n    expect(event.componentSearch).toEqual({ searchTerm });\n    expect(event.partner).toEqual({\n      companyName: mockPPNDealer.nameLocalized,\n      companyId: mockPPNDealer.porschePartnerNo\n    });\n    expect(event.componentClick).toEqual({\n      clickElementId: 'mainmenu.finddealer.map',\n      clickElementName: `${mockPPNDealer.addressLocalized.street}, ${mockPPNDealer.address.postalCode} ${mockPPNDealer.addressLocalized.city}`,\n      clickElementType: ClickElementTypes.Link,\n      targetUrl: `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(\n        `${mockPPNDealer.addressLocalized.street},${mockPPNDealer.address.postalCode},${mockPPNDealer.addressLocalized.city}`\n      )}`\n    });\n  });\n\n  describe('Opening hours', () => {\n    const { monday, tuesday, wednesday, thursday, friday } = mockDealerDetailsOpeningHours;\n\n    const getPage = async () => {\n      navContentStore.set('dealer', mockDealerContent);\n\n      return await newSpecPage({\n        components: [DealerDetailsDrawer, MenuItemCard],\n        template: () => <phn-dealer-details-drawer {...defaultProps} dealerId={mockPPNDealer.id} />\n      });\n    };\n\n    beforeEach(() => {\n      jest.spyOn(featureToggles, 'isDealerSearchOpeningHoursEnabled').mockReturnValue(true);\n      navContentStore.set('dealer', mockDealerContent);\n    });\n\n    it('should should opening hours', async () => {\n      const contactOpeningHours = [monday, tuesday, wednesday, thursday, friday];\n\n      const dealerInfo = mockPPNDealerSearchResultsWithLocalizedAddress[0];\n      dealerInfo.ppnDealer.contactDetails.contactOpeningHours = contactOpeningHours;\n\n      dealerSearchResultsStore.state.ppnDealers = {\n        [mockPPNDealer.id]: dealerInfo\n      };\n\n      const page = await getPage();\n\n      const openingHoursText = page.root?.querySelector('phn-menu-item-card[data-test-id=dealer-opening-hours]');\n      expect(openingHoursText?.textContent).toEqual('Mon - Fri: 09:00 - 19:00');\n    });\n\n    it('should not show opening hours if dealers doesnt has this information', async () => {\n      const dealerInfo = mockPPNDealerSearchResultsWithLocalizedAddress[0];\n      dealerInfo.ppnDealer.contactDetails.contactOpeningHours = [];\n\n      dealerSearchResultsStore.state.ppnDealers = {\n        [mockPPNDealer.id]: dealerInfo\n      };\n\n      const page = await getPage();\n\n      const openingHoursText = page.root?.querySelector('phn-menu-item-card[data-test-id=dealer-opening-hours]');\n      expect(openingHoursText).toBeFalsy();\n    });\n  });\n});\n"]}