import { h, Host } from "@stencil/core";
import analyticsManager from "../../services/analytics/analytics-manager";
import globalDataLayerService from "../../services/analytics/global-data-layer-service";
import windowService from "../../services/window-service";
import { ClickElementTypes, DisplayElementTypes, ElementTypes, EventActions } from "../../utility/constants";
export class Backdrop {
  constructor() {
    this.activeRoutingKey = undefined;
  }
  handleClick() {
    this.sendDataAnalyticsEvent();
    this.clickDrawerHeaderClose.emit();
  }
  sendDataAnalyticsEvent() {
    analyticsManager.setDrawerType(DisplayElementTypes.DoubleDrawer);
    globalDataLayerService.pushDataLayerEvent(EventActions.MENU_CLOSE_CLICK, {
      componentClick: {
        clickElementId: 'mainmenu.drawer.close',
        clickElementName: 'backdrop',
        clickElementType: ClickElementTypes.Button,
        targetElement: 'level-0'
      },
      componentDisplay: {
        displayElementType: analyticsManager.calculateDisplayElementType(this.activeRoutingKey, ElementTypes.backdrop),
        displayElementId: analyticsManager.calculateDisplayElementId(),
        displayElementName: 'Double Drawer'
      }
    });
  }
  componentWillLoad() {
    if (windowService.hasScrollbar()) {
      windowService.lockScroll();
    }
  }
  disconnectedCallback() {
    if (windowService.hasScrollbar()) {
      windowService.unlockScroll();
    }
  }
  render() {
    return h(Host, null);
  }
  static get is() { return "phn-backdrop"; }
  static get encapsulation() { return "scoped"; }
  static get originalStyleUrls() {
    return {
      "$": ["backdrop.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["backdrop.css"]
    };
  }
  static get properties() {
    return {
      "activeRoutingKey": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "active-routing-key",
        "reflect": false
      }
    };
  }
  static get events() {
    return [{
        "method": "clickDrawerHeaderClose",
        "name": "clickDrawerHeaderClose",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "void",
          "resolved": "void",
          "references": {}
        }
      }, {
        "method": "backdropClosed",
        "name": "backdropClosed",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "void",
          "resolved": "void",
          "references": {}
        }
      }];
  }
  static get elementRef() { return "el"; }
  static get listeners() {
    return [{
        "name": "click",
        "method": "handleClick",
        "target": undefined,
        "capture": false,
        "passive": true
      }];
  }
}
//# sourceMappingURL=backdrop.js.map
