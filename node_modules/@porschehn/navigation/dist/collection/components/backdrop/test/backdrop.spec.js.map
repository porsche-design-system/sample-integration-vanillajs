{"version":3,"file":"backdrop.spec.js","sourceRoot":"","sources":["../../../../../src/components/backdrop/test/backdrop.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { Backdrop } from '../backdrop';\nimport windowService from '../../../services/window-service';\nimport globalDataLayerService from '../../../services/analytics/global-data-layer-service';\nimport { EventActions } from '../../../utility/constants';\nimport { routerStore } from '../../../state/router-store';\n\ndescribe('backdrop', () => {\n  it('should render with darken class by default', async () => {\n    const page = await newSpecPage({\n      components: [Backdrop],\n      template: () => <phn-backdrop activeRoutingKey=\"mainmenu\" />\n    });\n\n    expect(page.root).toMatchInlineSnapshot(`<phn-backdrop></phn-backdrop>`);\n  });\n\n  it('should emit clickDrawerHeaderClose event on click', async () => {\n    const page = await newSpecPage({\n      components: [Backdrop],\n      template: () => <phn-backdrop activeRoutingKey=\"mainmenu\" />\n    });\n\n    const eventSpy = jest.spyOn(page.rootInstance.clickDrawerHeaderClose, 'emit');\n    page.root?.click();\n\n    expect(eventSpy).toHaveBeenCalledTimes(1);\n  });\n\n  it('should unlock scrolling when disconnected', async () => {\n    const page = await newSpecPage({\n      components: [Backdrop],\n      template: () => <phn-backdrop activeRoutingKey=\"mainmenu\" />\n    });\n\n    jest.spyOn(windowService, 'hasScrollbar').mockReturnValue(true);\n\n    const unlockScrollSpy = jest.spyOn(windowService, 'unlockScroll');\n\n    page.rootInstance.disconnectedCallback();\n\n    expect(unlockScrollSpy).toHaveBeenCalled();\n  });\n\n  it('should send data event MENU_CLOSE_CLICK after backdrop is clicked', async () => {\n    routerStore.state.routingKeyHistory = ['mainmenu', 'models'];\n    routerStore.state.routingKeyPointer = 1;\n    const page = await newSpecPage({\n      components: [Backdrop],\n      template: () => <phn-backdrop activeRoutingKey=\"models\" />\n    });\n\n    page.root?.click();\n\n    const event = globalDataLayerService.gdl.DataLayerStore[0];\n\n    expect(event.context?.eventAction).toEqual(EventActions.MENU_CLOSE_CLICK);\n    expect(event.componentDisplay).toEqual({\n      displayElementType: 'level2_backdrop',\n      displayElementId: 'level1-mainmenu_level2-models',\n      displayElementName: 'Double Drawer'\n    });\n  });\n});\n"]}