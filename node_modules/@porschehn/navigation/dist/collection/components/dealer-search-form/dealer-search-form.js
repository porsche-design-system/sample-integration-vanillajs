/* eslint-disable jsx-a11y/label-has-associated-control */
import { h, Host } from "@stencil/core";
import { showDealerSearchDropdown } from "../../utility/helpers/dealer-search-helper";
import { splitLocale } from "../../entities/locale";
import { navContentStore } from "../../state/nav-content-store";
export class DealerSearchForm {
  constructor() {
    this.dealer = undefined;
    this.locale = undefined;
    this.showHeadline = true;
    this.breakpoint = undefined;
    this.showOverlay = false;
    this.formErrorMessage = null;
    this.showSkeleton = true;
    this.animateResults = false;
  }
  toggleOverlay(e) {
    this.showOverlay = e.detail;
  }
  loadedAutoCompleteListener(_event) {
    this.showSkeleton = false;
  }
  getDealerFormStrategy() {
    const { dealer } = navContentStore.state;
    if (dealer.numberOfDealers <= 5) {
      return 'byNumberOfDealers';
    }
    if (showDealerSearchDropdown(splitLocale(this.locale).country))
      return 'dropdown';
    return 'geolocation';
  }
  formComponent() {
    const dealerSearchFormStrategies = {
      geolocation: () => h("phn-dealer-search-form-geolocation", { locale: this.locale }),
      dropdown: () => h("phn-dealer-search-form-dropdown", { locale: this.locale, breakpoint: this.breakpoint }),
      byNumberOfDealers: () => h("phn-dealer-search-by-number-of-dealers", { locale: this.locale })
    };
    const formStrategy = this.getDealerFormStrategy();
    return dealerSearchFormStrategies[formStrategy]();
  }
  render() {
    return (h(Host, { class: this.showSkeleton ? 'skeleton' : '' }, this.formComponent(), h("phn-dealer-search-results", { locale: this.locale, breakpoint: this.breakpoint, showOverlay: this.showOverlay })));
  }
  static get is() { return "phn-dealer-search-form"; }
  static get encapsulation() { return "scoped"; }
  static get originalStyleUrls() {
    return {
      "$": ["dealer-search-form.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["dealer-search-form.css"]
    };
  }
  static get assetsDirs() { return ["./assets"]; }
  static get properties() {
    return {
      "dealer": {
        "type": "unknown",
        "mutable": false,
        "complexType": {
          "original": "Dealer",
          "resolved": "{ id: string; text: string; numberOfDealers: number; search: { id: string; text: string; form: { inputPlaceholder: string; inputDescription: string; }; clear: TButton; or: string; geolocation: TButton; dropdown: { province: string; city: string; selectAProvince: string; selectACity: string; }; load: string; map: TLink; outboundLink: TLink | null; }; details: { id: string; finder: TLink | null; bookService: TLink | null; testDrive: TLink | null; backToSearch: string; }; openingHours: OpeningHours | null; }",
          "references": {
            "Dealer": {
              "location": "import",
              "path": "../../entities/content",
              "id": "src/entities/content.ts::Dealer"
            }
          }
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        }
      },
      "locale": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "locale",
        "reflect": false
      },
      "showHeadline": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "show-headline",
        "reflect": false,
        "defaultValue": "true"
      },
      "breakpoint": {
        "type": "number",
        "mutable": false,
        "complexType": {
          "original": "number",
          "resolved": "number",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "breakpoint",
        "reflect": false
      }
    };
  }
  static get states() {
    return {
      "showOverlay": {},
      "formErrorMessage": {},
      "showSkeleton": {},
      "animateResults": {}
    };
  }
  static get elementRef() { return "el"; }
  static get listeners() {
    return [{
        "name": "predictionsToggle",
        "method": "toggleOverlay",
        "target": undefined,
        "capture": false,
        "passive": false
      }, {
        "name": "removeSkeletonOnDealerSearchForm",
        "method": "loadedAutoCompleteListener",
        "target": undefined,
        "capture": false,
        "passive": false
      }];
  }
}
//# sourceMappingURL=dealer-search-form.js.map
