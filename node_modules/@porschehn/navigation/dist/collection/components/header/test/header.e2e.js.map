{"version":3,"file":"header.e2e.js","sourceRoot":"","sources":["../../../../../src/components/header/test/header.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\ndescribe('Header', () => {\n  it('should render', async () => {\n    const page = await newE2EPage();\n\n    await page.setContent('<phn-header />');\n    const element = await page.find('phn-header');\n    await page.waitForChanges();\n    expect(element).toHaveClass('hydrated');\n  });\n\n  describe('Drawer overlay behaviour', () => {\n    it('should set the body to be unscrollable when the menu overlay is open and set it back to initial value when closed', async () => {\n      const page = await newE2EPage();\n\n      await page.setContent('<body style=\"overflow:auto\"><phn-header /></body>');\n\n      const body = await page.find('body');\n\n      // menu open\n      const burgerButton = await page.find('phn-header >>> phn-burger-button');\n      await burgerButton.click();\n      const bodyStyle = await body.getComputedStyle();\n      expect(bodyStyle.overflow).toEqual('hidden');\n      expect(bodyStyle.paddingRight).toEqual('15px');\n\n      // menu close\n      const closeButton = await page.find('phn-header >>> .close-button');\n      await closeButton.click();\n\n      const bodyStyleChanged = await body.getComputedStyle();\n      expect(bodyStyleChanged.overflow).toEqual('auto');\n      expect(bodyStyleChanged.paddingRight).toEqual('0px');\n    });\n\n    it('should set the body to be unscrollable with calculated padding when the menu overlay is open and set it back to initial value when closed', async () => {\n      const page = await newE2EPage();\n\n      await page.setContent('<body style=\"overflow:auto; padding-right:10px\"><phn-header /></body>');\n\n      const body = await page.find('body');\n\n      // menu open\n      const burgerButton = await page.find('phn-header >>> phn-burger-button');\n      await burgerButton.click();\n      const bodyStyle = await body.getComputedStyle();\n      expect(bodyStyle.overflow).toEqual('hidden');\n      expect(bodyStyle.paddingRight).toEqual('25px');\n\n      // menu close\n      const closeButton = await page.find('phn-header >>> .close-button');\n      await closeButton.click();\n\n      const bodyStyleChanged = await body.getComputedStyle();\n      expect(bodyStyleChanged.overflow).toEqual('auto');\n      expect(bodyStyleChanged.paddingRight).toEqual('10px');\n    });\n  });\n});\n"]}