{"version":3,"file":"header.spec.js","sourceRoot":"","sources":["../../../../../src/components/header/test/header.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage, SpecPage } from '@stencil/core/testing';\nimport { Environments } from '../../../entities/environment';\nimport globalDataLayerService from '../../../services/analytics/global-data-layer-service';\nimport * as contentService from '../../../services/content-service';\nimport * as dealerService from '../../../services/dealer-service';\nimport windowService from '../../../services/window-service';\nimport { dealerSearchResultsStore } from '../../../state/dealer-search-results-store';\nimport { navContentStore } from '../../../state/nav-content-store';\nimport { navStateStore } from '../../../state/nav-state-store';\nimport { shopStateStore } from '../../../state/shop-state-store';\nimport {\n  firstAccessToken,\n  mockNewContent,\n  mockPPNDealer,\n  mockPPNDealerSearchResultsWithLocalizedAddress,\n  mockUserInformation\n} from '../../../test/test-data';\nimport { DATA_LAYER_APPLICATION_NAME, EventActions, IFRAME_ID, NavigationMode } from '../../../utility/constants';\nimport { getConfig } from '../../../utility/helper';\nimport { NaviError, NaviErrorTypes } from '../../../utility/navi-error';\nimport { Header } from '../header';\nimport * as abTestingService from '../../../services/ab-testing/ab-testing-constructor-service';\n\ndescribe('header', () => {\n  const initABTestingMock = jest.fn().mockResolvedValue(true);\n  const executeABTestingMock = jest.fn().mockResolvedValue(true);\n  const loadContentGeneratorExperiments = jest.fn().mockReturnValue(true);\n\n  beforeEach(() => {\n    jest.spyOn(abTestingService, 'default').mockReturnValue({\n      init: initABTestingMock,\n      execute: executeABTestingMock,\n      executeContentChange: executeABTestingMock,\n      loadContentGeneratorExperiments: loadContentGeneratorExperiments\n    });\n  });\n\n  describe('AB testing', () => {\n    it('should call initABTesting', async function () {\n      await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale=\"it-CH\" env={Environments.TEST} />\n      });\n\n      expect(initABTestingMock).toHaveBeenCalledTimes(1);\n      expect(loadContentGeneratorExperiments).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  it('renders header', async () => {\n    const page = await newSpecPage({\n      components: [Header],\n      template: () => <phn-header locale=\"it-CH\" env={Environments.TEST} />\n    });\n\n    expect(page.root).toMatchInlineSnapshot(`\n      <phn-header>\n        <mock:shadow-root>\n          <div class=\"header\">\n            <phn-wrapper app=\"default\" breakpoint=\"0\" locale=\"it-CH\" mode=\"navbar\" receivedcontent=\"\" theme=\"light\"></phn-wrapper>\n          </div>\n        </mock:shadow-root>\n      </phn-header>\n    `);\n  });\n\n  it('renders header with search drawer', async () => {\n    const page = await newSpecPage({\n      components: [Header],\n      template: () => <phn-header locale=\"sv-SE\" env={Environments.TEST} app=\"shop\" />\n    });\n\n    expect(page.root).toMatchInlineSnapshot(`\n      <phn-header>\n        <mock:shadow-root>\n          <div class=\"header\">\n            <phn-wrapper app=\"shop\" breakpoint=\"0\" locale=\"sv-SE\" mode=\"navbar\" receivedcontent=\"\" theme=\"light\">\n              <div slot=\"contextual_drawer_header\">\n                <slot name=\"contextual_drawer_header\"></slot>\n              </div>\n            </phn-wrapper>\n          </div>\n        </mock:shadow-root>\n      </phn-header>\n    `);\n  });\n\n  it('renders header with default app', async () => {\n    const page = await newSpecPage({\n      components: [Header],\n      template: () => <phn-header locale=\"it-CH\" env={Environments.TEST} />\n    });\n\n    expect(page.root).toMatchInlineSnapshot(`\n      <phn-header>\n        <mock:shadow-root>\n          <div class=\"header\">\n            <phn-wrapper app=\"default\" breakpoint=\"0\" locale=\"it-CH\" mode=\"navbar\" receivedcontent=\"\" theme=\"light\"></phn-wrapper>\n          </div>\n        </mock:shadow-root>\n      </phn-header>\n    `);\n  });\n\n  it('should set header version on window', async () => {\n    const page = await newSpecPage({\n      components: [Header],\n      template: () => <phn-header locale=\"it-CH\" env={Environments.TEST} />\n    });\n\n    expect((page.win as Window & { PHN_HEADER_VERSION: string }).PHN_HEADER_VERSION).toEqual('VERSION_STRING');\n  });\n\n  it('should emit a navigationDidLoad event if receives a navigationLoaded event', async () => {\n    const page = await newSpecPage({\n      components: [Header],\n      template: () => <phn-header locale=\"it-CH\" env={Environments.TEST} />\n    });\n\n    const navigationDidLoadSpy = jest.spyOn(page.rootInstance.navigationDidLoad, 'emit');\n\n    page.rootInstance.navigationLoadedHandler({ detail: true });\n\n    expect(navigationDidLoadSpy).toHaveBeenCalled();\n  });\n\n  describe('data analytics', () => {\n    it('should call the global data layer service to configure the global data layer instance and push the load event', async () => {\n      const page = await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale=\"it-CH\" env={Environments.TEST} page-name=\"local\" />\n      });\n\n      await page.rootInstance.newAuthMessageReceived({\n        origin: getConfig(Environments.TEST).LOGIN_REDIRECT_URL,\n        data: { token: firstAccessToken }\n      });\n\n      // @ts-expect-error waiting for gdl module to update its types\n      const defaultProperties = globalDataLayerService.gdl.getDefaultProperties(globalDataLayerService.homeNavEventId);\n      const { timestamp, server, ...context } = defaultProperties?.context || {};\n\n      expect(context).toEqual({\n        applicationId: 'nav',\n        country: 'CH',\n        language: 'it',\n        applicationName: DATA_LAYER_APPLICATION_NAME,\n        environment: 'K'\n      });\n      expect(defaultProperties?.visitor?.loginStatus).toEqual(true);\n      expect(defaultProperties?.ids?.userId).toEqual(mockUserInformation.userData.userId);\n      expect(defaultProperties?.pageExperience?.pageName).toEqual('local');\n\n      expect(globalDataLayerService.gdl.DataLayerStore).toHaveLength(1);\n\n      const event = globalDataLayerService.gdl.DataLayerStore[0];\n\n      expect(event.context?.eventAction).toEqual(EventActions.GENERAL_LOAD);\n    });\n\n    it('should call the global data layer service after page-name property changes', async () => {\n      const page = await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale=\"it-CH\" env={Environments.TEST} page-name=\"local\" />\n      });\n\n      page.root?.setAttribute('page-name', 'other');\n      await page.waitForChanges();\n\n      // @ts-expect-error waiting for gdl module to update its types\n      const defaultProperties = globalDataLayerService.gdl.getDefaultProperties(globalDataLayerService.homeNavEventId);\n\n      expect(defaultProperties?.pageExperience?.pageName).toEqual('other');\n    });\n\n    it('should call the global data layer service after locale property changes', async () => {\n      const page = await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale=\"it-CH\" env={Environments.TEST} page-name=\"local\" />\n      });\n\n      page.root?.setAttribute('locale', 'de-CH');\n      await page.waitForChanges();\n\n      // @ts-expect-error waiting for gdl module to update its types\n      const defaultProperties = globalDataLayerService.gdl.getDefaultProperties(globalDataLayerService.homeNavEventId);\n      const { country, language } = defaultProperties?.context || {};\n\n      expect(country).toEqual('CH');\n      expect(language).toEqual('de');\n    });\n  });\n\n  describe('nav content store', () => {\n    it('Nothing should happen if no props are passed', async () => {\n      const startState = navContentStore.state;\n\n      await newSpecPage({\n        components: [Header],\n        template: () => <phn-header />\n      });\n\n      expect(navContentStore.state).toEqual(startState);\n    });\n\n    it('should not fetch content when env is set but locale is not', async () => {\n      const startState = navContentStore.state;\n\n      await newSpecPage({\n        components: [Header],\n        template: () => <phn-header env={Environments.TEST} />\n      });\n\n      expect(navContentStore.state).toEqual(startState);\n    });\n\n    it('should be reset with new locale when prop changes', async () => {\n      const page = await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale=\"de-CH\" env={Environments.TEST} />\n      });\n\n      expect(navContentStore.state).toEqual(mockNewContent['de-CH']);\n\n      page.root?.setAttribute('locale', 'it-CH');\n\n      await page.waitForChanges();\n\n      expect(navContentStore.state).toEqual(mockNewContent['it-CH']);\n    });\n\n    it('should not set content when locale is updated while the fetch is taking place', async () => {\n      const page = await newSpecPage({\n        components: [Header],\n        template: () => <phn-header env={Environments.TEST} locale=\"de-CH\" />\n      });\n\n      expect(navContentStore.state).toEqual(mockNewContent['de-CH']);\n\n      let resolverCH: (value?: unknown) => void;\n      let resolverGB: (value?: unknown) => void;\n\n      jest.spyOn(contentService, 'fetchContent').mockImplementation(async (locale) => {\n        await new Promise((resolve) => {\n          if (resolverCH === undefined) {\n            resolverCH = resolve;\n          } else {\n            resolverGB = resolve;\n          }\n        });\n\n        return mockNewContent[locale];\n      });\n\n      page.root?.setAttribute('locale', 'it-CH');\n\n      await page.waitForChanges();\n\n      page.root?.setAttribute('locale', 'en-GB');\n\n      await page.waitForChanges();\n\n      // @ts-expect-error the function is definitely defined by this point :)\n      resolverGB();\n\n      await page.waitForChanges();\n\n      expect(navContentStore.state).toEqual(mockNewContent['en-GB']);\n\n      // @ts-expect-error the function is definitely defined by this point :)\n      resolverCH();\n\n      await page.waitForChanges();\n\n      expect(navContentStore.state).toEqual(mockNewContent['en-GB']);\n    });\n\n    it('should use default content when locale provided does not exist', async () => {\n      const startState = navContentStore.state;\n\n      await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale=\"missing-locale\" env={Environments.TEST} />\n      });\n\n      expect(navContentStore.state).toEqual(startState);\n    });\n\n    it('should not try to fetch content when locale provided is not valid', async () => {\n      const startState = navContentStore.state;\n\n      await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale=\"super wrong\" env={Environments.TEST} />\n      });\n\n      expect(navContentStore.state).toEqual(startState);\n    });\n  });\n\n  describe('shop state store', () => {\n    it('should watch shop variables on store', async () => {\n      const page = await newSpecPage({\n        components: [Header],\n        template: () => <phn-header />\n      });\n\n      page.rootInstance.shopInformation =\n        '{ \"wishlistItemsNumber\": 50, \"numberOfShoppingItems\": 10, \"subTotal\": \"100€\" }';\n\n      expect(shopStateStore.state.shopInformation.wishlistItemsNumber).toEqual(50);\n      expect(shopStateStore.state.shopInformation.numberOfShoppingItems).toEqual(10);\n      expect(shopStateStore.state.shopInformation.subTotal).toEqual('100€');\n    });\n\n    it('should load shop variables and update store', async () => {\n      const page = await newSpecPage({\n        components: [Header],\n        template: () => (\n          <phn-header shop-information='{ \"wishlistItemsNumber\": 100, \"numberOfShoppingItems\": 50, \"subTotal\": \"100$\" }' />\n        )\n      });\n\n      await page.waitForChanges();\n\n      expect(shopStateStore.state.shopInformation.wishlistItemsNumber).toEqual(100);\n      expect(shopStateStore.state.shopInformation.numberOfShoppingItems).toEqual(50);\n      expect(shopStateStore.state.shopInformation.subTotal).toEqual('100$');\n    });\n  });\n\n  describe('header with env prop', () => {\n    it('should use the default environment if invalid environment is passed', async () => {\n      navStateStore.state.env = Environments.PRODUCTION;\n\n      await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale=\"it-CH\" env=\"lala\" />\n      });\n\n      expect(navStateStore.state.env).toBe(Environments.PRODUCTION);\n    });\n\n    it('should allow a user to set env after the component has been initialised', async () => {\n      navStateStore.state.env = Environments.PRODUCTION;\n\n      const page = await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale=\"it-CH\" />\n      });\n\n      expect(navStateStore.state.env).toBe(Environments.PRODUCTION);\n\n      page.root?.setAttribute('env', Environments.PREVIEW);\n\n      await page.waitForChanges();\n\n      expect(navStateStore.state.env).toBe(Environments.PREVIEW);\n    });\n  });\n\n  describe('limitedWidth prop', () => {\n    it('should use false as default value for limitedWidth when no mode is given', async () => {\n      const page = await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale=\"de-DE\" env={Environments.TEST} />\n      });\n\n      expect(page.rootInstance.hasLimitedWidth()).toEqual(false);\n    });\n\n    it('should use true as default value for limitedWidth when in hero mode', async () => {\n      const page = await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale=\"de-DE\" env={Environments.TEST} mode={NavigationMode.hero} />\n      });\n\n      expect(page.rootInstance.hasLimitedWidth()).toEqual(true);\n    });\n\n    it('should use false for isWithLimitedWidth when in navbar mode', async () => {\n      const page = await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale=\"de-DE\" env={Environments.TEST} mode={NavigationMode.navbar} />\n      });\n\n      expect(page.rootInstance.hasLimitedWidth()).toEqual(false);\n    });\n\n    it('should use false for limitedWidth when set to false in prop', async () => {\n      const page = await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale=\"de-DE\" env={Environments.TEST} limited-width=\"false\" />\n      });\n\n      expect(page.rootInstance.hasLimitedWidth()).toEqual(false);\n    });\n  });\n\n  describe('authentication process', () => {\n    it('authIframe was initialized with token after the component was loaded', async () => {\n      const page = await newSpecPage({\n        components: [Header],\n        url: getConfig(Environments.TEST).PORSCHE_COM_URL[0],\n        template: () => <phn-header locale=\"de-DEB\" env={Environments.TEST} />\n      });\n\n      const iFrame = page.win.document.getElementById(IFRAME_ID);\n\n      expect(iFrame).toBeDefined();\n    });\n\n    it('authIframe was destroyed and token got updated after authIframe was created', async () => {\n      const page = await newSpecPage({\n        components: [Header],\n        url: getConfig(Environments.TEST).PORSCHE_COM_URL[0],\n        template: () => <phn-header locale=\"de-DEB\" env={Environments.TEST} />\n      });\n\n      await page.rootInstance.newAuthMessageReceived({\n        origin: getConfig(Environments.TEST).LOGIN_REDIRECT_URL,\n        data: {\n          token: firstAccessToken\n        }\n      });\n\n      const iFrame = page.win.document.getElementById(IFRAME_ID);\n\n      expect(iFrame).toBeNull();\n      expect(navStateStore.state.loggedInState).toEqual('Mirinda Doe');\n      expect(navStateStore.state.env).toBe(Environments.TEST);\n    });\n  });\n\n  describe('logout', () => {\n    const logoutUrl = 'http://identity-redirect/url/v2/logout';\n\n    let page: SpecPage;\n\n    beforeEach(async () => {\n      page = await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale={'it-CH'} env={Environments.TEST} />\n      });\n\n      jest.spyOn(page.rootInstance.eventPreventedTimeout, 'set').mockImplementation(async (cb: unknown) => {\n        if (typeof cb === 'function') {\n          await cb();\n        }\n      });\n    });\n\n    it('Should listen for logout event and redirect to logout page', async () => {\n      const redirectFunction = jest.spyOn(windowService, 'redirectToUrl');\n\n      const logoutEvent = new CustomEvent('logoutEvent');\n      await page.rootInstance.handleLogout(logoutEvent);\n\n      expect(redirectFunction).toBeCalledWith(logoutUrl);\n    });\n\n    it('should emit phn logout event on logout', async () => {\n      jest.spyOn(page.rootInstance.phnLogout, 'emit');\n\n      const logoutEvent = new CustomEvent('logoutEvent');\n      await page.rootInstance.handleLogout(logoutEvent);\n\n      expect(page.rootInstance.phnLogout.emit).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('login', () => {\n    let page: SpecPage;\n\n    beforeEach(async () => {\n      page = await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale={'it-CH'} env={Environments.TEST} />\n      });\n\n      jest.spyOn(page.rootInstance.eventPreventedTimeout, 'set').mockImplementation(async (cb: unknown) => {\n        if (typeof cb === 'function') {\n          await cb();\n        }\n      });\n    });\n\n    it('Should listen for login event and redirect to login page', async () => {\n      if (navContentStore.state.myPorsche) {\n        navContentStore.state.myPorsche.link = 'http://my.porsche.com/url/v2/login';\n      }\n\n      const redirectFunction = jest.spyOn(windowService, 'redirectToUrl');\n      const loginEvent = new CustomEvent('loginEvent');\n      await page.rootInstance.handleLogin(loginEvent);\n\n      expect(redirectFunction).toBeCalledWith('http://my.porsche.com/url/v2/login');\n    });\n\n    it('should emit phn login event on login', async () => {\n      jest.spyOn(page.rootInstance.phnLogin, 'emit');\n\n      const loginEvent = new CustomEvent('loginEvent');\n      await page.rootInstance.handleLogin(loginEvent);\n\n      expect(page.rootInstance.phnLogin.emit).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('stored dealer', () => {\n    beforeEach(() => {\n      dealerSearchResultsStore.dispose();\n    });\n\n    it('should render dealer name if a stored dealerId exists', async () => {\n      const mockDealer = mockPPNDealerSearchResultsWithLocalizedAddress[0];\n      const { ppnDealer: mockPPNDealer } = mockDealer;\n      jest.spyOn(dealerService, 'getPPNDealer').mockResolvedValue(mockDealer);\n\n      dealerSearchResultsStore.state.savedDealerCookie = {\n        id: mockPPNDealer.id,\n        longitude: mockPPNDealer.coordinates.longitude,\n        latitude: mockPPNDealer.coordinates.latitude\n      };\n\n      await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale={'it-CH'} env={Environments.TEST} />\n      });\n\n      expect(dealerSearchResultsStore.state.ppnDealers[mockPPNDealer.id]).toBe(mockDealer);\n    });\n\n    it('should not render saved dealer name when fetching a single dealer fails', async () => {\n      jest.spyOn(dealerService, 'getPPNDealer').mockImplementation(() => {\n        throw new NaviError('Unable to fetch a dealer', NaviErrorTypes.GENERAL);\n      });\n\n      dealerSearchResultsStore.state.savedDealerCookie = {\n        id: mockPPNDealer.id,\n        longitude: mockPPNDealer.coordinates.longitude,\n        latitude: mockPPNDealer.coordinates.latitude\n      };\n\n      await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale={'it-CH'} env={Environments.TEST} />\n      });\n\n      expect(dealerSearchResultsStore.state.savedDealerCookie).toBeNull();\n    });\n\n    it('should render dealer name if a stored dealerId exists in a dropdown market', async () => {\n      const mockDealer = mockPPNDealerSearchResultsWithLocalizedAddress[0];\n      const { ppnDealer: mockPPNDealer } = mockDealer;\n      jest.spyOn(dealerService, 'getPPNDealerByRegion').mockResolvedValue(mockDealer);\n\n      dealerSearchResultsStore.state.savedDealerCookie = {\n        id: mockPPNDealer.id,\n        longitude: mockPPNDealer.coordinates.longitude,\n        latitude: mockPPNDealer.coordinates.latitude\n      };\n\n      await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale={'zh-CN'} env={Environments.TEST} />\n      });\n\n      expect(dealerSearchResultsStore.state.ppnDealers[mockPPNDealer.id]).toBe(mockDealer);\n    });\n  });\n\n  describe('checkMarketingConsent', () => {\n    let maybeCheckMarketingConsentSpy: jest.SpyInstance;\n\n    beforeEach(() => {\n      maybeCheckMarketingConsentSpy = jest\n        .spyOn(windowService, 'maybeCheckMarketingConsent')\n        .mockImplementation((cb) => {\n          cb();\n          return true;\n        });\n    });\n\n    it('should check marketing on component load', async () => {\n      await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale={'de-CH'} env={Environments.TEST} />\n      });\n\n      expect(maybeCheckMarketingConsentSpy).toHaveBeenCalledTimes(1);\n      expect(navStateStore.state.userConsent).toBe(true);\n    });\n\n    it('should listen to ucReady event listener, but not checks marketing consent again', async () => {\n      const page = await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale={'de-CH'} env={Environments.TEST} />\n      });\n\n      page.rootInstance.handleUserCentricsReady();\n\n      expect(maybeCheckMarketingConsentSpy).toHaveBeenCalledTimes(1);\n      expect(navStateStore.state.userConsent).toBe(true);\n    });\n\n    it('should listen to ucInit event listener, but only checks marketing consent again if it was not yet initialised', async () => {\n      const maybeCheckMarketingConsentSpy = jest\n        .spyOn(windowService, 'maybeCheckMarketingConsent')\n        .mockImplementation((cb) => {\n          cb();\n          return false;\n        });\n\n      const page = await newSpecPage({\n        components: [Header],\n        template: () => <phn-header locale={'de-CH'} env={Environments.TEST} />\n      });\n\n      page.rootInstance.handleUserCentricsInitalization();\n\n      expect(maybeCheckMarketingConsentSpy).toHaveBeenCalledTimes(2);\n      expect(navStateStore.state.userConsent).toBe(true);\n    });\n  });\n});\n"]}