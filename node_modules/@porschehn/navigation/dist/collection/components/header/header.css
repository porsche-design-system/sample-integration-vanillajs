/**
 * Converts rem to px unit
 * @param $rem - only accepts value in rem unit, e.g. 1.5rem
 */
/**
 * Converts px to rem unit
 * @param $px - only accepts value in px unit, e.g. 12px
 */
/**
 * Converts rem to px unit
 * @param $rem - only accepts value in rem unit, e.g. 1.5rem
 */
/**
 * Converts px to rem unit
 * @param $px - only accepts value in px unit, e.g. 12px
 */
@keyframes transition-forward-in-animation {
  from {
    left: 150%;
  }
  to {
    left: 0%;
  }
}
@keyframes transition-backward-in-animation {
  from {
    left: -150%;
  }
  to {
    left: 0%;
  }
}
@keyframes single-drawer-transition-forward-in-animation {
  from {
    left: 100%;
  }
  to {
    left: 0%;
  }
}
@keyframes fade-in-animation {
  from {
    opacity: 0;
    background-color: rgba(0, 0, 0, 0);
  }
  to {
    opacity: 1;
    background-color: rgba(0, 0, 0, 0.6);
  }
}
@keyframes slide-in-from-left-absolute {
  from {
    left: -1000px;
  }
  to {
    left: 0px;
  }
}
@keyframes slideDown {
  from {
    max-height: 0;
  }
  to {
    max-height: 1000px;
  }
}
@keyframes slideUp {
  from {
    max-height: 1000px;
  }
  to {
    max-height: 0;
  }
}
@keyframes slideLeft {
  from {
    max-width: 0;
  }
  to {
    max-width: 1000px;
  }
}
@keyframes slideRight {
  from {
    max-width: 1000px;
  }
  to {
    max-width: 0;
  }
}
@keyframes darken {
  from {
    background-color: rgba(0, 0, 0, 0);
  }
  to {
    background-color: rgba(0, 0, 0, 0.8);
  }
}
@keyframes lighten {
  from {
    background-color: rgba(0, 0, 0, 0.8);
  }
  to {
    background-color: rgba(0, 0, 0, 0);
  }
}
@keyframes fadeInFromBottom {
  0% {
    opacity: 0;
    top: 36px;
  }
  100% {
    opacity: 1;
    top: 0px;
  }
}
@keyframes fadeOutToTop {
  0% {
    opacity: 1;
    bottom: 0px;
  }
  100% {
    opacity: 0;
    bottom: 16px;
  }
}
@keyframes slideLeftDoubleDrawer {
  from {
    right: -1000px;
  }
  to {
    right: 0px;
  }
}
@keyframes slideRightDoubleDrawer {
  from {
    right: 0px;
  }
  to {
    right: -1000px;
  }
}
@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
.transition-forward-animation-out {
  transition: left 250ms;
  position: relative !important;
  left: -150% !important;
}

.transition-forward-animation-in {
  position: relative;
  animation: transition-forward-in-animation 250ms;
}

.transition-backward-animation-out {
  transition: left 250ms;
  position: relative !important;
  left: 150% !important;
}

.transition-backward-animation-in {
  position: relative !important;
  animation: transition-backward-in-animation 250ms;
}

.slide-out-to-right-fixed {
  transition: left 400ms;
  position: fixed;
  left: 100% !important;
}

.slide-in-from-right-fixed {
  position: fixed;
  animation: single-drawer-transition-forward-in-animation 400ms;
}

/**
 * Converts rem to px unit
 * @param $rem - only accepts value in rem unit, e.g. 1.5rem
 */
/**
 * Converts px to rem unit
 * @param $px - only accepts value in px unit, e.g. 12px
 */
.phn-flex-col {
  display: flex;
  flex-direction: column;
}

.phn-flex-row {
  display: flex;
  flex-direction: row;
}

.phn-align-center {
  align-items: center;
}

.phn-justify-around {
  justify-content: space-around;
}

.phn-justify-between {
  justify-content: space-between;
}

.phn-flex-wrap {
  flex-wrap: wrap;
}

:host {
  display: block;
  position: relative;
  visibility: visible;
  height: auto !important;
  z-index: 500;
}
:host .header {
  min-height: 4.125rem;
}
@media (min-width: 480px) {
  :host .header {
    min-height: 5rem;
  }
}
@media (min-width: 760px) {
  :host .header {
    min-height: 4.5625rem;
  }
}
@media (min-width: 1000px) {
  :host .header {
    min-height: 4.75rem;
  }
}
@media (min-width: 1300px) {
  :host .header {
    min-height: 5.125rem;
  }
}
@media (min-width: 1920px) {
  :host .limited-width {
    max-width: 160rem;
    margin: 0 auto;
  }
}