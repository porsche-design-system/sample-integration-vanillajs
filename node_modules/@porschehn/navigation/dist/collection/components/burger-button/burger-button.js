import { h, Host } from "@stencil/core";
import globalDataLayerService from "../../services/analytics/global-data-layer-service";
import { navContentStore } from "../../state/nav-content-store";
import { ClickElementTypes, EventActions, NavigationMode, NavigationTheme } from "../../utility/constants";
import { constructThemeClass, getRightTheme } from "../../utility/helper";
export class BurgerButton {
  constructor() {
    this.hideLabel = undefined;
    this.alignLabel = undefined;
    this.isLoading = false;
    this.theme = NavigationTheme.light;
    this.mode = NavigationMode.navbar;
  }
  sendDataLayerEvent(menu) {
    globalDataLayerService.pushDataLayerEvent(EventActions.MORE_CLICK, {
      componentClick: {
        clickElementId: menu.id,
        clickElementName: menu.text,
        targetElement: 'level1_drawer',
        clickElementType: ClickElementTypes.Button
      }
    });
  }
  render() {
    const { menu } = navContentStore.state;
    return (h(Host, { class: `${constructThemeClass(this.mode, this.theme)}-theme` }, h("phn-p-button-pure", { theme: getRightTheme(this.theme, this.mode), onClick: () => this.sendDataLayerEvent(menu), aria: { 'aria-haspopup': 'dialog', 'aria-label': 'open the menu' }, "align-label": this.alignLabel, icon: "menu-lines", loading: this.isLoading, size: "inherit", hideLabel: this.hideLabel }, menu.text)));
  }
  static get is() { return "phn-burger-button"; }
  static get encapsulation() { return "scoped"; }
  static get originalStyleUrls() {
    return {
      "$": ["burger-button.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["burger-button.css"]
    };
  }
  static get properties() {
    return {
      "hideLabel": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "hide-label",
        "reflect": false
      },
      "alignLabel": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "align-label",
        "reflect": false
      },
      "isLoading": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "is-loading",
        "reflect": false,
        "defaultValue": "false"
      },
      "theme": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "NavigationThemeType",
          "resolved": "\"dark\" | \"light\"",
          "references": {
            "NavigationThemeType": {
              "location": "import",
              "path": "../../utility/constants",
              "id": "src/utility/constants/index.ts::NavigationThemeType"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "theme",
        "reflect": false,
        "defaultValue": "NavigationTheme.light"
      },
      "mode": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "NavigationModeType",
          "resolved": "\"hero\" | \"navbar\" | \"transparent\"",
          "references": {
            "NavigationModeType": {
              "location": "import",
              "path": "../../utility/constants",
              "id": "src/utility/constants/index.ts::NavigationModeType"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "mode",
        "reflect": false,
        "defaultValue": "NavigationMode.navbar"
      }
    };
  }
}
//# sourceMappingURL=burger-button.js.map
