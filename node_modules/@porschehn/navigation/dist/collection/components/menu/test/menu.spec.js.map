{"version":3,"file":"menu.spec.js","sourceRoot":"","sources":["../../../../../src/components/menu/test/menu.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { RoutingKeys } from '../../../entities/routing-key';\nimport { EventActions } from '../../../utility/constants';\nimport { getHTMLElement } from '../../../utility/helper';\nimport { MenuItem } from '../../menu-item/menu-item';\nimport { Menu } from '../menu';\nimport { mockExperienceItem, mockShopItems, mockVehiclePurchaseItem } from '../../../test/test-data';\n\ndescribe('Menu', () => {\n  describe('snapshots', () => {\n    it('should render the correct structure for shops', async () => {\n      const page = await newSpecPage({\n        components: [Menu, MenuItem],\n        template: () => <phn-menu item={mockShopItems} routingKey={RoutingKeys.SHOP} />\n      });\n\n      page.rootInstance.showSkeleton = false;\n      await page.waitForChanges();\n\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-menu role=\"list\">\n          <ul>\n            <phn-menu-item role=\"listitem\">\n              <!---->\n              <phn-p-link-pure align-label=\"left\" data-id=\"shop/item-1\" icon=\"none\" stretch=\"false\" target=\"_self\">\n                <a href=\"link1\">\n                  <div class=\"phn-align-center phn-flex-row\">\n                    <div class=\"skeleton-item\">\n                      <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                        item 1\n                      </phn-p-text>\n                    </div>\n                  </div>\n                </a>\n              </phn-p-link-pure>\n            </phn-menu-item>\n            <phn-menu-item role=\"listitem\">\n              <!---->\n              <phn-p-link-pure align-label=\"left\" data-id=\"shop/item-2\" icon=\"none\" stretch=\"false\" target=\"_self\">\n                <a href=\"link2\">\n                  <div class=\"phn-align-center phn-flex-row\">\n                    <div class=\"skeleton-item\">\n                      <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                        item 2\n                      </phn-p-text>\n                    </div>\n                  </div>\n                </a>\n              </phn-p-link-pure>\n            </phn-menu-item>\n            <phn-menu-item role=\"listitem\">\n              <!---->\n              <phn-p-link-pure align-label=\"left\" data-id=\"shop/item-3\" icon=\"none\" stretch=\"false\" target=\"_self\">\n                <a href=\"link3\">\n                  <div class=\"phn-align-center phn-flex-row\">\n                    <div class=\"skeleton-item\">\n                      <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                        item 3\n                      </phn-p-text>\n                    </div>\n                  </div>\n                </a>\n              </phn-p-link-pure>\n            </phn-menu-item>\n          </ul>\n        </phn-menu>\n      `);\n    });\n\n    it('should render the correct HTML structure for experience', async () => {\n      const page = await newSpecPage({\n        components: [Menu, MenuItem],\n        template: () => <phn-menu item={mockExperienceItem} routingKey={RoutingKeys.EXPERIENCE} />\n      });\n      page.rootInstance.showSkeleton = false;\n      await page.waitForChanges();\n\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-menu role=\"list\">\n          <ul>\n            <phn-menu-item role=\"listitem\">\n              <!---->\n              <phn-p-button-pure align-label=\"left\" data-id=\"experience/mainmenu.experience.golfsport\" icon=\"arrow-head-right\" size=\"inherit\" stretch=\"true\">\n                <div class=\"phn-align-center phn-flex-row\">\n                  <div class=\"skeleton-item\">\n                    <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                      Golf\n                    </phn-p-text>\n                  </div>\n                </div>\n              </phn-p-button-pure>\n            </phn-menu-item>\n            <phn-menu-item role=\"listitem\">\n              <!---->\n              <phn-p-link-pure align-label=\"left\" data-id=\"experience/mainmenu.experience.motorsport\" icon=\"none\" stretch=\"false\" target=\"_self\">\n                <a href=\"https://preview.ppn.porsche.com/swiss/de/motorsportandevents/motorsport/\">\n                  <div class=\"phn-align-center phn-flex-row\">\n                    <div class=\"skeleton-item\">\n                      <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                        Motorsport\n                      </phn-p-text>\n                    </div>\n                  </div>\n                </a>\n              </phn-p-link-pure>\n            </phn-menu-item>\n          </ul>\n        </phn-menu>\n      `);\n    });\n\n    it('should render the correct structure for vehicle purchase', async () => {\n      const page = await newSpecPage({\n        components: [Menu, MenuItem],\n        template: () => <phn-menu item={mockVehiclePurchaseItem} routingKey={RoutingKeys.VEHICLE_PURCHASE} />\n      });\n\n      page.rootInstance.showSkeleton = false;\n      await page.waitForChanges();\n\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-menu role=\"list\">\n          <ul>\n            <phn-menu-item role=\"listitem\">\n              <!---->\n              <phn-p-link-pure align-label=\"left\" data-id=\"vehicle_purchase/item-1\" icon=\"none\" stretch=\"false\" target=\"_self\">\n                <a href=\"link1\">\n                  <div class=\"phn-align-center phn-flex-row\">\n                    <div class=\"skeleton-item\">\n                      <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                        item 1\n                      </phn-p-text>\n                    </div>\n                  </div>\n                </a>\n              </phn-p-link-pure>\n            </phn-menu-item>\n            <phn-menu-item role=\"listitem\">\n              <!---->\n              <phn-p-link-pure align-label=\"left\" data-id=\"vehicle_purchase/item-2\" icon=\"none\" stretch=\"false\" target=\"_self\">\n                <a href=\"link2\">\n                  <div class=\"phn-align-center phn-flex-row\">\n                    <div class=\"skeleton-item\">\n                      <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                        item 2\n                      </phn-p-text>\n                    </div>\n                  </div>\n                </a>\n              </phn-p-link-pure>\n            </phn-menu-item>\n          </ul>\n        </phn-menu>\n      `);\n    });\n\n    it('should render the correct structure for vehicle purchase, including saved vehicles', async () => {\n      const page = await newSpecPage({\n        components: [Menu, MenuItem],\n        template: () => (\n          <phn-menu\n            item={{\n              ...mockVehiclePurchaseItem,\n              savedVehicles: {\n                id: 'saved vehicles',\n                text: 'Saved Vehicles',\n                description: '',\n                link: 'https://finder.porsche.com/de/de-DE/favorites',\n                icon: ''\n              }\n            }}\n            routingKey={RoutingKeys.VEHICLE_PURCHASE}\n          />\n        )\n      });\n\n      page.rootInstance.showSkeleton = false;\n      await page.waitForChanges();\n\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-menu role=\"list\">\n          <ul>\n            <phn-menu-item role=\"listitem\">\n              <!---->\n              <phn-p-link-pure align-label=\"left\" data-id=\"vehicle_purchase/item-1\" icon=\"none\" stretch=\"false\" target=\"_self\">\n                <a href=\"link1\">\n                  <div class=\"phn-align-center phn-flex-row\">\n                    <div class=\"skeleton-item\">\n                      <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                        item 1\n                      </phn-p-text>\n                    </div>\n                  </div>\n                </a>\n              </phn-p-link-pure>\n            </phn-menu-item>\n            <phn-menu-item role=\"listitem\">\n              <!---->\n              <phn-p-link-pure align-label=\"left\" data-id=\"vehicle_purchase/item-2\" icon=\"none\" stretch=\"false\" target=\"_self\">\n                <a href=\"link2\">\n                  <div class=\"phn-align-center phn-flex-row\">\n                    <div class=\"skeleton-item\">\n                      <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                        item 2\n                      </phn-p-text>\n                    </div>\n                  </div>\n                </a>\n              </phn-p-link-pure>\n            </phn-menu-item>\n            <phn-menu-item class=\"vehiclepurchase-link\" role=\"listitem\">\n              <!---->\n              <phn-p-link-pure align-label=\"left\" data-id=\"vehicle_purchase/saved vehicles\" icon=\"none\" stretch=\"false\" target=\"_self\">\n                <a href=\"https://finder.porsche.com/de/de-DE/favorites\">\n                  <div class=\"phn-align-center phn-flex-row\">\n                    <div class=\"skeleton-item\">\n                      <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                        Saved Vehicles\n                      </phn-p-text>\n                    </div>\n                  </div>\n                </a>\n              </phn-p-link-pure>\n            </phn-menu-item>\n          </ul>\n        </phn-menu>\n      `);\n    });\n  });\n\n  it('should render the correct structure for vehicle purchase, without saved vehicles', async () => {\n    const page = await newSpecPage({\n      components: [Menu, MenuItem],\n      template: () => (\n        <phn-menu\n          item={{\n            ...mockVehiclePurchaseItem\n          }}\n          routingKey={RoutingKeys.VEHICLE_PURCHASE}\n        />\n      )\n    });\n\n    page.rootInstance.showSkeleton = false;\n    await page.waitForChanges();\n\n    expect(page.root).toMatchInlineSnapshot(`\n        <phn-menu role=\"list\">\n          <ul>\n            <phn-menu-item role=\"listitem\">\n              <!---->\n              <phn-p-link-pure align-label=\"left\" data-id=\"vehicle_purchase/item-1\" icon=\"none\" stretch=\"false\" target=\"_self\">\n                <a href=\"link1\">\n                  <div class=\"phn-align-center phn-flex-row\">\n                    <div class=\"skeleton-item\">\n                      <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                        item 1\n                      </phn-p-text>\n                    </div>\n                  </div>\n                </a>\n              </phn-p-link-pure>\n            </phn-menu-item>\n            <phn-menu-item role=\"listitem\">\n              <!---->\n              <phn-p-link-pure align-label=\"left\" data-id=\"vehicle_purchase/item-2\" icon=\"none\" stretch=\"false\" target=\"_self\">\n                <a href=\"link2\">\n                  <div class=\"phn-align-center phn-flex-row\">\n                    <div class=\"skeleton-item\">\n                      <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                        item 2\n                      </phn-p-text>\n                    </div>\n                  </div>\n                </a>\n              </phn-p-link-pure>\n            </phn-menu-item>\n          </ul>\n        </phn-menu>\n      `);\n  });\n\n  it('should not open a drawer for a link item', async () => {\n    const page = await newSpecPage({\n      components: [Menu, MenuItem],\n      template: () => <phn-menu item={mockShopItems} routingKey={RoutingKeys.SHOP} />\n    });\n\n    jest.spyOn(page.rootInstance.mobileMenuItemClick, 'emit');\n\n    getHTMLElement(page.root?.querySelector('phn-menu-item'))?.click();\n\n    expect(page.rootInstance.mobileMenuItemClick.emit).not.toHaveBeenCalled();\n  });\n\n  it('should open drawer for a menu item', async () => {\n    const page = await newSpecPage({\n      components: [Menu, MenuItem],\n      template: () => <phn-menu item={mockExperienceItem} routingKey={RoutingKeys.EXPERIENCE} />\n    });\n\n    page.rootInstance.mobileMenuItemClick.emit = jest.fn();\n\n    getHTMLElement(page.root?.querySelector('phn-menu-item'))?.click();\n\n    expect(page.rootInstance.mobileMenuItemClick.emit).toHaveBeenCalled();\n  });\n\n  it('should open drawer with saved vehicles menu item', async () => {\n    const page = await newSpecPage({\n      components: [Menu, MenuItem],\n      template: () => (\n        <phn-menu\n          item={{\n            ...mockVehiclePurchaseItem,\n            savedVehicles: {\n              id: 'saved vehicles',\n              text: 'Saved Vehicles',\n              description: '',\n              link: 'https://finder.porsche.com/de/de-DE/favorites',\n              icon: ''\n            }\n          }}\n          routingKey={RoutingKeys.VEHICLE_PURCHASE}\n          receivedContent\n        />\n      )\n    });\n\n    const savedVehiclesButton = getHTMLElement(page.root?.querySelector('.vehiclepurchase-link'));\n\n    expect(savedVehiclesButton).toBeTruthy();\n  });\n\n  describe('data analytics', () => {\n    it('should send NAVIGATION_LINK_CLICK data event if it is a link', async () => {\n      const page = await newSpecPage({\n        components: [Menu, MenuItem],\n        template: () => <phn-menu item={mockShopItems} routingKey={RoutingKeys.SHOP} />\n      });\n\n      const menuItem = getHTMLElement(page.root?.querySelector('phn-menu-item')) as HTMLPhnMenuItemElement;\n      expect(menuItem?.datalayerEventAction).toEqual(EventActions.NAVIGATION_LINK_CLICK);\n    });\n\n    it('should send NAVIGATION_CLICK data event if it is a link', async () => {\n      const page = await newSpecPage({\n        components: [Menu, MenuItem],\n        template: () => <phn-menu item={mockExperienceItem} routingKey={RoutingKeys.SHOP} />\n      });\n\n      const menuItem = getHTMLElement(page.root?.querySelector('phn-menu-item')) as HTMLPhnMenuItemElement;\n      expect(menuItem?.datalayerEventAction).toEqual(EventActions.NAVIGATION_CLICK);\n    });\n  });\n});\n"]}