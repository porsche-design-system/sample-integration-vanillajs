{"version":3,"file":"dealer-search-form-dropdown.js","sourceRoot":"","sources":["../../../../src/components/dealer-search-form-dropdown/dealer-search-form-dropdown.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAgB,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAO,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACrH,OAAO,EAAE,qBAAqB,EAAE,MAAM,+BAA+B,CAAC;AACtE,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAEpD,OAAO,EAAE,wBAAwB,EAAE,MAAM,yCAAyC,CAAC;AACnF,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAC3D,OAAO,MAAM,MAAM,uBAAuB,CAAC;AAC3C,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAChE,OAAO,YAAY,MAAM,qCAAqC,CAAC;AAC/D,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACxD,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,EACL,qDAAqD,EACrD,YAAY,EACZ,YAAY,EACZ,8BAA8B,EAC/B,MAAM,yBAAyB,CAAC;AACjC,OAAO,sBAAsB,MAAM,oDAAoD,CAAC;AACxF,OAAO,gBAAgB,MAAM,4CAA4C,CAAC;AAO1E,MAAM,OAAO,wBAAwB;;kBAClB,EAAE;;qBAGE,KAAK;wBACa,IAAI;2BACC,EAAE,OAAO,EAAE,EAAE,EAAE;kBACjC,EAAE;4BACA,EAAE;wBACN,EAAE;wBACF,IAAI;;EAQ5B,iBAAiB;IACf,IAAI,CAAC,uBAAuB,EAAE,CAAC;IAC/B,IAAI,CAAC,kBAAkB,EAAE,CAAC;EAC5B,CAAC;EAED,gBAAgB;IACd,IAAI,CAAC,iBAAiB,EAAE,CAAC;EAC3B,CAAC;EAEO,KAAK,CAAC,uBAAuB;IACnC,MAAM,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACpD,IAAI,CAAC,gCAAgC,CAAC,IAAI,EAAE,CAAC;EAC/C,CAAC;EAGD,0BAA0B,CAAC,MAAa;IACtC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;EAC5B,CAAC;EAEO,KAAK,CAAC,kBAAkB;IAC9B,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,eAAe,CAAC,KAAK,CAAC;IACtD,MAAM,EAAE,OAAO,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAE7C,IAAI;MACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;MACtB,IAAI,CAAC,eAAe,GAAG,MAAM,qBAAqB,CAAC,OAAO,CAAC,CAAC;KAC7D;IAAC,OAAO,GAAG,EAAE;MACZ,MAAM,CAAC,KAAK,CAAC,eAAe,EAAE,GAAY,CAAC,CAAC;MAC5C,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC,YAAY,EAAE,GAAY,CAAC,CAAC;KACjE;YAAS;MACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;MACvB,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;MAClC,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;EACH,CAAC;EAEO,YAAY,CAAC,KAAY;;IAC/B,wBAAwB;IACxB,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,EAAE;MACzB,OAAO;KACR;IAED,MAAM,YAAY,GAAI,KAAK,CAAC,MAA4B,CAAC,KAAK,CAAC;IAC/D,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACjC,wBAAwB,CAAC,KAAK,CAAC,UAAU;MACvC,CAAA,MAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;QACxB,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;MACxE,CAAC,CAAC,0CAAE,OAAO,KAAI,EAAE,CAAC;IACpB,wBAAwB,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAChG,wBAAwB,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,IAAI,CAAC,gBAAgB,KAAK,IAAI,CAAC,YAAY,EAAE,CAAC;EAC/F,CAAC;EAEO,gBAAgB,CAAC,KAAY;IACnC,wBAAwB;IACxB,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,EAAE;MACzB,OAAO;KACR;IAED,MAAM,gBAAgB,GAAI,KAAK,CAAC,MAA4B,CAAC,KAAK,CAAC;IACnE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,CAAC,CAAC;IAChE,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;EAC3C,CAAC;EAEO,0BAA0B,CAAC,QAAgB;IACjD,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;IAE7C,MAAM,cAAc,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,UAAU,EAAE,mBAAmB,EAAE,EAAE,EAAE,CAC1E,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CACrD,CAAC;IAEF,OAAO,CAAA,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,MAAM,KAAI,EAAE,CAAC;EACtC,CAAC;EAEO,iBAAiB;IACvB,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,wBAAwB,CAAC,KAAK,CAAC;IAC/D,MAAM,EAAE,MAAM,EAAE,GAAG,eAAe,CAAC,KAAK,CAAC;IAEzC,sBAAsB,CAAC,kBAAkB,CAAC,YAAY,CAAC,yBAAyB,EAAE;MAChF,gBAAgB,EAAE;QAChB,gBAAgB,EAAE,gBAAgB,CAAC,yBAAyB,EAAE;QAC9D,kBAAkB,EAAE,gBAAgB,CAAC,2BAA2B,CAAC,EAAE,EAAE,YAAY,CAAC,gBAAgB,CAAC;QACnG,kBAAkB,EAAE,MAAM,CAAC,IAAI;OAChC;MACD,eAAe,EAAE;QACf,UAAU,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,8BAA8B;QAC9E,eAAe,EAAE,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,KAAI,CAAC;OACtC;KACF,CAAC,CAAC;EACL,CAAC;EAEO,oBAAoB;IAC1B,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,wBAAwB,CAAC,KAAK,CAAC;IAC/D,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,GAAG,eAAe,CAAC,KAAK,CAAC;IAExD,MAAM,eAAe,GAAG,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,KAAI,CAAC,CAAC;IAE7C,sBAAsB,CAAC,kBAAkB,CAAC,YAAY,CAAC,0BAA0B,EAAE;MACjF,gBAAgB,EAAE;QAChB,gBAAgB,EAAE,gBAAgB,CAAC,oCAAoC,CACrE,qDAAqD,CACtD;QACD,kBAAkB,EAAE,gBAAgB,CAAC,sCAAsC,EAAE;QAC7E,kBAAkB,EAAE,aAAa,CAAC,IAAI;OACvC;MACD,eAAe,EAAE;QACf,UAAU,EAAE,UAAU;QACtB,eAAe,EAAE,eAAe;OACjC;KACF,CAAC,CAAC;EACL,CAAC;EAEO,KAAK;IACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IACzB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACvB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAC3B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAEvB,wBAAwB,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;IAC9C,wBAAwB,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAExD,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;EAC/B,CAAC;EAED,MAAM;IACJ,MAAM,EAAE,OAAO,EAAE,GAAG,wBAAwB,CAAC,KAAK,CAAC;IACnD,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,GAAG,eAAe,CAAC,KAAK,CAAC;IACxD,MAAM,UAAU,GAAG,wBAAwB,CAAC,KAAK,CAAC,UAAU,CAAC;IAE7D,IAAI,IAAI,CAAC,SAAS,EAAE;MAClB,OAAO,CACL,WAAK,KAAK,EAAC,SAAS;QAClB,qBAAe,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAE,EAAE,YAAY,EAAE,sBAAsB,EAAE,GAAI,CAC3E,CACP,CAAC;KACH;IAED,OAAO,CACL,EAAC,IAAI,QACF,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAC/B,YACE,KAAK,EAAC,gBAAgB,EACtB,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE;QAClB,KAAK,CAAC,cAAc,EAAE,CAAC;MACzB,CAAC;MAED;QACE,WAAK,KAAK,EAAC,mEAAmE;UAC5E,WAAK,KAAK,EAAC,YAAY;YACrB,kBACE,MAAM,EAAC,SAAS,EAChB,IAAI,EAAC,OAAO,EACZ,GAAG,EAAC,KAAK,EACT,QAAQ,EAAC,MAAM,EACf,KAAK,EAAC,iBAAiB,kBACV,0BAA0B,IAEtC,UAAU,CACA,CACT;UACN,kBACE,IAAI,EAAC,OAAO,EACZ,KAAK,EAAC,YAAY,EAClB,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,EACtE,OAAO,EAAE,CAAC,KAAY,EAAE,EAAE;cACxB,KAAK,CAAC,cAAc,EAAE,CAAC;cACvB,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC,GACD,CACE,CACF,CACD,CACR,CAAC,CAAC,CAAC,CACF,EAAC,QAAQ;MACP,4BACE,MAAM,QACN,KAAK,EAAE,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAC7C,QAAQ,QACR,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;QAEnD,cACE,IAAI,EAAC,kBAAkB,EACvB,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EACjD,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;UAEnD,cAAQ,MAAM,QAAC,QAAQ,UACpB,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,CACvC;UACR,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3C,MAAM,QAAQ,GACZ,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,KAAK,IAAI,IAAI,MAAM,CAAC,mBAAmB,KAAK,IAAI;cAC/E,CAAC,CAAC,MAAM,CAAC,UAAU;cACnB,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC;YACjC,OAAO,cAAQ,KAAK,EAAE,QAAQ,IAAG,QAAQ,CAAU,CAAC;UACtD,CAAC,CAAC,CACK,CACY;MAEvB,4BACE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EACnD,KAAK,EAAC,wBAAwB,EAC9B,MAAM,EAAC,MAAM,EACb,KAAK,EAAE,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EACzC,QAAQ;QAER,cACE,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAC1C,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EACnD,IAAI,EAAC,gBAAgB,EACrB,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE;YAClB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;UAC3B,CAAC;UAED,cAAQ,MAAM,UAAE,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAU;UAClE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CACzB,kBACG,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI;YAC5E,CAAC,CAAC,IAAI,CAAC,QAAQ;YACf,CAAC,CAAC,IAAI,CAAC,iBAAiB,CACnB,CACV,CAAC,CACK,CACY;MAEtB,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAC7B,EAAC,YAAY,IAAC,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,GAAI,CACjF,CAAC,CAAC,CAAC,IAAI,CACC,CACZ,CACI,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, Event, EventEmitter, Fragment, h, Host, JSX, Listen, Prop, State } from '@stencil/core';\nimport { getPPNDealersByRegion } from '../../services/dealer-service';\nimport { splitLocale } from '../../entities/locale';\nimport { City, DealersByRegion } from '../../entities/dealer-response';\nimport { dealerSearchResultsStore } from '../../state/dealer-search-results-store';\nimport { getErrorMessage } from '../../utility/navi-error';\nimport Logger from '../../services/logger';\nimport { navContentStore } from '../../state/nav-content-store';\nimport ErrorMessage from '../dealer-search-form/error-message';\nimport { isString } from '../../utility/helper';\nimport { componentsOnReady } from '../../utility/ready';\nimport { Timeout } from '../../utility/timeout';\nimport {\n  DEALER_SEARCH_RESULT_DISPLAY_ELEMENT_ID_DOUBLE_DRAWER,\n  ElementTypes,\n  EventActions,\n  GEOLOCATION_BUTTON_SEARCH_TERM\n} from '../../utility/constants';\nimport globalDataLayerService from '../../services/analytics/global-data-layer-service';\nimport analyticsManager from '../../services/analytics/analytics-manager';\n\n@Component({\n  tag: 'phn-dealer-search-form-dropdown',\n  styleUrl: 'dealer-search-form-dropdown.scss',\n  scoped: true\n})\nexport class DealerSearchFormDropdown {\n  @Prop() locale = '';\n  @Prop() breakpoint!: number;\n\n  @State() isLoading = false;\n  @State() errorMessage: string | null = null;\n  @State() dealersOfRegion: DealersByRegion = { regions: [] };\n  @State() cities: City[] = [];\n  @State() selectedProvince = '';\n  @State() selectedCity = '';\n  @State() showSkeleton = true;\n\n  @Event() dealerSearchFormEvent!: EventEmitter;\n  @Event() clearSearchEvent!: EventEmitter;\n  @Event() removeSkeletonOnDealerSearchForm!: EventEmitter;\n\n  @Element() el!: HTMLPhnDealerSearchFormDropdownElement;\n\n  componentWillLoad(): void {\n    this.waitForComponentsToLoad();\n    this.getDealersByRegion();\n  }\n\n  componentDidLoad(): void {\n    this.emitPageLoadEvent();\n  }\n\n  private async waitForComponentsToLoad() {\n    await componentsOnReady(this.el, new Timeout(5000));\n    this.removeSkeletonOnDealerSearchForm.emit();\n  }\n\n  @Listen('removeSkeletonOnDealerSearchForm')\n  loadedAutoCompleteListener(_event: Event): void {\n    this.showSkeleton = false;\n  }\n\n  private async getDealersByRegion() {\n    const { error: errorContent } = navContentStore.state;\n    const { country } = splitLocale(this.locale);\n\n    try {\n      this.isLoading = true;\n      this.dealersOfRegion = await getPPNDealersByRegion(country);\n    } catch (err) {\n      Logger.error('FETCH_DEALERS', err as Error);\n      this.errorMessage = getErrorMessage(errorContent, err as Error);\n    } finally {\n      this.isLoading = false;\n      this.dealerSearchFormEvent.emit();\n      this.emitResultsLoadEvent();\n    }\n  }\n\n  private onCitySelect(event: Event): void {\n    /* istanbul ignore if */\n    if (event.target === null) {\n      return;\n    }\n\n    const selectedCity = (event.target as HTMLSelectElement).value;\n    this.selectedCity = selectedCity;\n    dealerSearchResultsStore.state.ppnDealers =\n      this.cities.find((city) => {\n        return [city.cityName, city.cityNameLocalized].includes(selectedCity);\n      })?.dealers || {};\n    dealerSearchResultsStore.state.results = Object.keys(dealerSearchResultsStore.state.ppnDealers);\n    dealerSearchResultsStore.state.searchTerm = `${this.selectedProvince}, ${this.selectedCity}`;\n  }\n\n  private onProvinceSelect(event: Event): void {\n    /* istanbul ignore if */\n    if (event.target === null) {\n      return;\n    }\n\n    const selectedProvince = (event.target as HTMLSelectElement).value;\n    this.cities = this.getCitiesByGivenRegionName(selectedProvince);\n    this.selectedProvince = selectedProvince;\n  }\n\n  private getCitiesByGivenRegionName(province: string): City[] {\n    const regions = this.dealersOfRegion.regions;\n\n    const selectedRegion = regions.find(({ regionName, regionNameLocalized }) =>\n      [regionName, regionNameLocalized].includes(province)\n    );\n\n    return selectedRegion?.cities || [];\n  }\n\n  private emitPageLoadEvent() {\n    const { results, searchTerm } = dealerSearchResultsStore.state;\n    const { dealer } = navContentStore.state;\n\n    globalDataLayerService.pushDataLayerEvent(EventActions.DEALER_SEARCH_SCREEN_LOAD, {\n      componentDisplay: {\n        displayElementId: analyticsManager.calculateDisplayElementId(),\n        displayElementType: analyticsManager.calculateDisplayElementType('', ElementTypes.dealerSearchForm),\n        displayElementName: dealer.text\n      },\n      componentSearch: {\n        searchTerm: isString(searchTerm) ? searchTerm : GEOLOCATION_BUTTON_SEARCH_TERM,\n        numberOfResults: results?.length || 0\n      }\n    });\n  }\n\n  private emitResultsLoadEvent() {\n    const { results, searchTerm } = dealerSearchResultsStore.state;\n    const { dealer: dealerContent } = navContentStore.state;\n\n    const numberOfResults = results?.length || 0;\n\n    globalDataLayerService.pushDataLayerEvent(EventActions.DEALER_RESULTS_SCREEN_LOAD, {\n      componentDisplay: {\n        displayElementId: analyticsManager.getDealerResultsLoadDisplayElementId(\n          DEALER_SEARCH_RESULT_DISPLAY_ELEMENT_ID_DOUBLE_DRAWER\n        ),\n        displayElementType: analyticsManager.getDealerResultsLoadDisplayElementType(),\n        displayElementName: dealerContent.text\n      },\n      componentSearch: {\n        searchTerm: searchTerm,\n        numberOfResults: numberOfResults\n      }\n    });\n  }\n\n  private reset() {\n    this.errorMessage = null;\n    this.isLoading = false;\n    this.selectedProvince = '';\n    this.selectedCity = '';\n\n    dealerSearchResultsStore.state.results = null;\n    dealerSearchResultsStore.state.savedDealerCookie = null;\n\n    this.clearSearchEvent.emit();\n  }\n\n  render(): JSX.Element {\n    const { results } = dealerSearchResultsStore.state;\n    const { dealer: dealerContent } = navContentStore.state;\n    const searchText = dealerSearchResultsStore.state.searchTerm;\n\n    if (this.isLoading) {\n      return (\n        <div class=\"spinner\">\n          <phn-p-spinner size=\"medium\" aria={{ 'aria-label': 'Loading page content' }} />\n        </div>\n      );\n    }\n\n    return (\n      <Host>\n        {results && results.length > 0 ? (\n          <form\n            class=\"form-container\"\n            onSubmit={(event) => {\n              event.preventDefault();\n            }}\n          >\n            <div>\n              <div class=\"phn-flex-row phn-align-center phn-justify-between title-container\">\n                <div class=\"text-limit\">\n                  <phn-p-text\n                    weight=\"regular\"\n                    size=\"small\"\n                    tag=\"div\"\n                    ellipsis=\"true\"\n                    color=\"contrast-medium\"\n                    data-test-id=\"dealer-search-form-input\"\n                  >\n                    {searchText}\n                  </phn-p-text>\n                </div>\n                <phn-p-icon\n                  name=\"close\"\n                  class=\"close-icon\"\n                  style={{ display: this.showSkeleton ? 'none' : '', cursor: 'pointer' }}\n                  onClick={(event: Event) => {\n                    event.preventDefault();\n                    this.reset();\n                  }}\n                />\n              </div>\n            </div>\n          </form>\n        ) : (\n          <Fragment>\n            <phn-p-select-wrapper\n              filter\n              label={dealerContent.search.dropdown.province}\n              required\n              style={{ display: this.showSkeleton ? 'none' : '' }}\n            >\n              <select\n                name=\"dealers-province\"\n                onChange={(event) => this.onProvinceSelect(event)}\n                style={{ display: this.showSkeleton ? 'none' : '' }}\n              >\n                <option hidden selected>\n                  {dealerContent.search.dropdown.selectAProvince}\n                </option>\n                {this.dealersOfRegion.regions.map((region) => {\n                  const province =\n                    splitLocale(this.locale).language === 'en' || region.regionNameLocalized === null\n                      ? region.regionName\n                      : region.regionNameLocalized;\n                  return <option value={province}>{province}</option>;\n                })}\n              </select>\n            </phn-p-select-wrapper>\n\n            <phn-p-select-wrapper\n              style={{ display: this.showSkeleton ? 'none' : '' }}\n              class=\"city-select-form-field\"\n              filter=\"true\"\n              label={dealerContent.search.dropdown.city}\n              required\n            >\n              <select\n                disabled={!isString(this.selectedProvince)}\n                style={{ display: this.showSkeleton ? 'none' : '' }}\n                name=\"dealers-cities\"\n                onChange={(event) => {\n                  this.onCitySelect(event);\n                }}\n              >\n                <option hidden>{dealerContent.search.dropdown.selectACity}</option>\n                {this.cities.map((city) => (\n                  <option>\n                    {splitLocale(this.locale).language === 'en' || city.cityNameLocalized === null\n                      ? city.cityName\n                      : city.cityNameLocalized}\n                  </option>\n                ))}\n              </select>\n            </phn-p-select-wrapper>\n\n            {isString(this.errorMessage) ? (\n              <ErrorMessage errorMessage={this.errorMessage} onDismiss={() => this.reset()} />\n            ) : null}\n          </Fragment>\n        )}\n      </Host>\n    );\n  }\n}\n"]}