import { Fragment, h, Host } from "@stencil/core";
import { getPPNDealersByRegion } from "../../services/dealer-service";
import { splitLocale } from "../../entities/locale";
import { dealerSearchResultsStore } from "../../state/dealer-search-results-store";
import { getErrorMessage } from "../../utility/navi-error";
import Logger from "../../services/logger";
import { navContentStore } from "../../state/nav-content-store";
import ErrorMessage from "../dealer-search-form/error-message";
import { isString } from "../../utility/helper";
import { componentsOnReady } from "../../utility/ready";
import { Timeout } from "../../utility/timeout";
import { DEALER_SEARCH_RESULT_DISPLAY_ELEMENT_ID_DOUBLE_DRAWER, ElementTypes, EventActions, GEOLOCATION_BUTTON_SEARCH_TERM } from "../../utility/constants";
import globalDataLayerService from "../../services/analytics/global-data-layer-service";
import analyticsManager from "../../services/analytics/analytics-manager";
export class DealerSearchFormDropdown {
  constructor() {
    this.locale = '';
    this.breakpoint = undefined;
    this.isLoading = false;
    this.errorMessage = null;
    this.dealersOfRegion = { regions: [] };
    this.cities = [];
    this.selectedProvince = '';
    this.selectedCity = '';
    this.showSkeleton = true;
  }
  componentWillLoad() {
    this.waitForComponentsToLoad();
    this.getDealersByRegion();
  }
  componentDidLoad() {
    this.emitPageLoadEvent();
  }
  async waitForComponentsToLoad() {
    await componentsOnReady(this.el, new Timeout(5000));
    this.removeSkeletonOnDealerSearchForm.emit();
  }
  loadedAutoCompleteListener(_event) {
    this.showSkeleton = false;
  }
  async getDealersByRegion() {
    const { error: errorContent } = navContentStore.state;
    const { country } = splitLocale(this.locale);
    try {
      this.isLoading = true;
      this.dealersOfRegion = await getPPNDealersByRegion(country);
    }
    catch (err) {
      Logger.error('FETCH_DEALERS', err);
      this.errorMessage = getErrorMessage(errorContent, err);
    }
    finally {
      this.isLoading = false;
      this.dealerSearchFormEvent.emit();
      this.emitResultsLoadEvent();
    }
  }
  onCitySelect(event) {
    var _a;
    /* istanbul ignore if */
    if (event.target === null) {
      return;
    }
    const selectedCity = event.target.value;
    this.selectedCity = selectedCity;
    dealerSearchResultsStore.state.ppnDealers =
      ((_a = this.cities.find((city) => {
        return [city.cityName, city.cityNameLocalized].includes(selectedCity);
      })) === null || _a === void 0 ? void 0 : _a.dealers) || {};
    dealerSearchResultsStore.state.results = Object.keys(dealerSearchResultsStore.state.ppnDealers);
    dealerSearchResultsStore.state.searchTerm = `${this.selectedProvince}, ${this.selectedCity}`;
  }
  onProvinceSelect(event) {
    /* istanbul ignore if */
    if (event.target === null) {
      return;
    }
    const selectedProvince = event.target.value;
    this.cities = this.getCitiesByGivenRegionName(selectedProvince);
    this.selectedProvince = selectedProvince;
  }
  getCitiesByGivenRegionName(province) {
    const regions = this.dealersOfRegion.regions;
    const selectedRegion = regions.find(({ regionName, regionNameLocalized }) => [regionName, regionNameLocalized].includes(province));
    return (selectedRegion === null || selectedRegion === void 0 ? void 0 : selectedRegion.cities) || [];
  }
  emitPageLoadEvent() {
    const { results, searchTerm } = dealerSearchResultsStore.state;
    const { dealer } = navContentStore.state;
    globalDataLayerService.pushDataLayerEvent(EventActions.DEALER_SEARCH_SCREEN_LOAD, {
      componentDisplay: {
        displayElementId: analyticsManager.calculateDisplayElementId(),
        displayElementType: analyticsManager.calculateDisplayElementType('', ElementTypes.dealerSearchForm),
        displayElementName: dealer.text
      },
      componentSearch: {
        searchTerm: isString(searchTerm) ? searchTerm : GEOLOCATION_BUTTON_SEARCH_TERM,
        numberOfResults: (results === null || results === void 0 ? void 0 : results.length) || 0
      }
    });
  }
  emitResultsLoadEvent() {
    const { results, searchTerm } = dealerSearchResultsStore.state;
    const { dealer: dealerContent } = navContentStore.state;
    const numberOfResults = (results === null || results === void 0 ? void 0 : results.length) || 0;
    globalDataLayerService.pushDataLayerEvent(EventActions.DEALER_RESULTS_SCREEN_LOAD, {
      componentDisplay: {
        displayElementId: analyticsManager.getDealerResultsLoadDisplayElementId(DEALER_SEARCH_RESULT_DISPLAY_ELEMENT_ID_DOUBLE_DRAWER),
        displayElementType: analyticsManager.getDealerResultsLoadDisplayElementType(),
        displayElementName: dealerContent.text
      },
      componentSearch: {
        searchTerm: searchTerm,
        numberOfResults: numberOfResults
      }
    });
  }
  reset() {
    this.errorMessage = null;
    this.isLoading = false;
    this.selectedProvince = '';
    this.selectedCity = '';
    dealerSearchResultsStore.state.results = null;
    dealerSearchResultsStore.state.savedDealerCookie = null;
    this.clearSearchEvent.emit();
  }
  render() {
    const { results } = dealerSearchResultsStore.state;
    const { dealer: dealerContent } = navContentStore.state;
    const searchText = dealerSearchResultsStore.state.searchTerm;
    if (this.isLoading) {
      return (h("div", { class: "spinner" }, h("phn-p-spinner", { size: "medium", aria: { 'aria-label': 'Loading page content' } })));
    }
    return (h(Host, null, results && results.length > 0 ? (h("form", { class: "form-container", onSubmit: (event) => {
        event.preventDefault();
      } }, h("div", null, h("div", { class: "phn-flex-row phn-align-center phn-justify-between title-container" }, h("div", { class: "text-limit" }, h("phn-p-text", { weight: "regular", size: "small", tag: "div", ellipsis: "true", color: "contrast-medium", "data-test-id": "dealer-search-form-input" }, searchText)), h("phn-p-icon", { name: "close", class: "close-icon", style: { display: this.showSkeleton ? 'none' : '', cursor: 'pointer' }, onClick: (event) => {
        event.preventDefault();
        this.reset();
      } }))))) : (h(Fragment, null, h("phn-p-select-wrapper", { filter: true, label: dealerContent.search.dropdown.province, required: true, style: { display: this.showSkeleton ? 'none' : '' } }, h("select", { name: "dealers-province", onChange: (event) => this.onProvinceSelect(event), style: { display: this.showSkeleton ? 'none' : '' } }, h("option", { hidden: true, selected: true }, dealerContent.search.dropdown.selectAProvince), this.dealersOfRegion.regions.map((region) => {
      const province = splitLocale(this.locale).language === 'en' || region.regionNameLocalized === null
        ? region.regionName
        : region.regionNameLocalized;
      return h("option", { value: province }, province);
    }))), h("phn-p-select-wrapper", { style: { display: this.showSkeleton ? 'none' : '' }, class: "city-select-form-field", filter: "true", label: dealerContent.search.dropdown.city, required: true }, h("select", { disabled: !isString(this.selectedProvince), style: { display: this.showSkeleton ? 'none' : '' }, name: "dealers-cities", onChange: (event) => {
        this.onCitySelect(event);
      } }, h("option", { hidden: true }, dealerContent.search.dropdown.selectACity), this.cities.map((city) => (h("option", null, splitLocale(this.locale).language === 'en' || city.cityNameLocalized === null
      ? city.cityName
      : city.cityNameLocalized))))), isString(this.errorMessage) ? (h(ErrorMessage, { errorMessage: this.errorMessage, onDismiss: () => this.reset() })) : null))));
  }
  static get is() { return "phn-dealer-search-form-dropdown"; }
  static get encapsulation() { return "scoped"; }
  static get originalStyleUrls() {
    return {
      "$": ["dealer-search-form-dropdown.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["dealer-search-form-dropdown.css"]
    };
  }
  static get properties() {
    return {
      "locale": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "locale",
        "reflect": false,
        "defaultValue": "''"
      },
      "breakpoint": {
        "type": "number",
        "mutable": false,
        "complexType": {
          "original": "number",
          "resolved": "number",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "breakpoint",
        "reflect": false
      }
    };
  }
  static get states() {
    return {
      "isLoading": {},
      "errorMessage": {},
      "dealersOfRegion": {},
      "cities": {},
      "selectedProvince": {},
      "selectedCity": {},
      "showSkeleton": {}
    };
  }
  static get events() {
    return [{
        "method": "dealerSearchFormEvent",
        "name": "dealerSearchFormEvent",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "any",
          "resolved": "any",
          "references": {}
        }
      }, {
        "method": "clearSearchEvent",
        "name": "clearSearchEvent",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "any",
          "resolved": "any",
          "references": {}
        }
      }, {
        "method": "removeSkeletonOnDealerSearchForm",
        "name": "removeSkeletonOnDealerSearchForm",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "any",
          "resolved": "any",
          "references": {}
        }
      }];
  }
  static get elementRef() { return "el"; }
  static get listeners() {
    return [{
        "name": "removeSkeletonOnDealerSearchForm",
        "method": "loadedAutoCompleteListener",
        "target": undefined,
        "capture": false,
        "passive": false
      }];
  }
}
//# sourceMappingURL=dealer-search-form-dropdown.js.map
