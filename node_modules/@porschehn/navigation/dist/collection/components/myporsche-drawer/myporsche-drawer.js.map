{"version":3,"file":"myporsche-drawer.js","sourceRoot":"","sources":["../../../../src/components/myporsche-drawer/myporsche-drawer.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAgB,CAAC,EAAE,IAAI,EAAO,KAAK,EAAE,MAAM,eAAe,CAAC;AAC7F,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACxD,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,KAAK,MAAM,0BAA0B,CAAC;AAC7C,OAAO,KAAK,MAAM,0BAA0B,CAAC;AAC7C,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAOhE,MAAM,OAAO,eAAe;;wBACF,IAAI;;EAMpB,KAAK,CAAC,uBAAuB;IACnC,MAAM,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACpD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;EAC5B,CAAC;EAED,iBAAiB;IACf,IAAI,CAAC,uBAAuB,EAAE,CAAC;EACjC,CAAC;EAED,MAAM;IACJ,MAAM,EAAE,SAAS,EAAE,GAAG,eAAe,CAAC,KAAK,CAAC;IAE5C,IAAI,CAAC,SAAS;MAAE,OAAO,IAAI,CAAC;IAE5B,OAAO,CACL,EAAC,IAAI,IAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;MAC9C,WAAK,KAAK,EAAC,iCAAiC;QAC1C,EAAC,KAAK,IAAC,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,GAAI;QAC9D,EAAC,KAAK,IAAC,OAAO,EAAE,SAAS,EAAE,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,GAAI,CACxG,CACD,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, Event, EventEmitter, h, Host, JSX, State } from '@stencil/core';\nimport { componentsOnReady } from '../../utility/ready';\nimport { Timeout } from '../../utility/timeout';\nimport Links from './myporsche-drawer-links';\nimport Login from './myporsche-drawer-login';\nimport { navContentStore } from '../../state/nav-content-store';\n\n@Component({\n  tag: 'phn-myporsche-drawer',\n  styleUrl: 'myporsche-drawer.scss',\n  scoped: true\n})\nexport class MyPorscheDrawer {\n  @State() showSkeleton = true;\n\n  @Element() el!: HTMLPhnMyporscheDrawerElement;\n\n  @Event() logoutEvent!: EventEmitter<void>;\n\n  private async waitForComponentsToLoad() {\n    await componentsOnReady(this.el, new Timeout(5000));\n    this.showSkeleton = false;\n  }\n\n  componentWillLoad(): void {\n    this.waitForComponentsToLoad();\n  }\n\n  render(): JSX.Element | null {\n    const { myPorsche } = navContentStore.state;\n\n    if (!myPorsche) return null;\n\n    return (\n      <Host class={this.showSkeleton ? 'skeleton' : ''}>\n        <div class=\"phn-flex-col phn-justify-around\">\n          <Login content={myPorsche} showSkeleton={this.showSkeleton} />\n          <Links content={myPorsche} onLogoutClick={() => this.logoutEvent.emit()} showSkeleton={this.showSkeleton} />\n        </div>\n      </Host>\n    );\n  }\n}\n"]}