import { h, Host } from "@stencil/core";
import { componentsOnReady } from "../../utility/ready";
import { Timeout } from "../../utility/timeout";
import Links from "./myporsche-drawer-links";
import Login from "./myporsche-drawer-login";
import { navContentStore } from "../../state/nav-content-store";
export class MyPorscheDrawer {
  constructor() {
    this.showSkeleton = true;
  }
  async waitForComponentsToLoad() {
    await componentsOnReady(this.el, new Timeout(5000));
    this.showSkeleton = false;
  }
  componentWillLoad() {
    this.waitForComponentsToLoad();
  }
  render() {
    const { myPorsche } = navContentStore.state;
    if (!myPorsche)
      return null;
    return (h(Host, { class: this.showSkeleton ? 'skeleton' : '' }, h("div", { class: "phn-flex-col phn-justify-around" }, h(Login, { content: myPorsche, showSkeleton: this.showSkeleton }), h(Links, { content: myPorsche, onLogoutClick: () => this.logoutEvent.emit(), showSkeleton: this.showSkeleton }))));
  }
  static get is() { return "phn-myporsche-drawer"; }
  static get encapsulation() { return "scoped"; }
  static get originalStyleUrls() {
    return {
      "$": ["myporsche-drawer.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["myporsche-drawer.css"]
    };
  }
  static get states() {
    return {
      "showSkeleton": {}
    };
  }
  static get events() {
    return [{
        "method": "logoutEvent",
        "name": "logoutEvent",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "void",
          "resolved": "void",
          "references": {}
        }
      }];
  }
  static get elementRef() { return "el"; }
}
//# sourceMappingURL=myporsche-drawer.js.map
