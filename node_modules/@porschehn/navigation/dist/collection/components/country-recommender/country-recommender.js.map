{"version":3,"file":"country-recommender.js","sourceRoot":"","sources":["../../../../src/components/country-recommender/country-recommender.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, h, Host, Listen, Prop, State, Watch } from '@stencil/core';\nimport { TCountryRecommender } from '../../entities/content';\nimport { getFlagURL } from '../../services/content-service';\nimport globalDataLayerService from '../../services/analytics/global-data-layer-service';\nimport { navStateStore } from '../../state/nav-state-store';\nimport { ClickElementTypes, EventActions } from '../../utility/constants';\nimport { getConfig, getHTMLElement, isString } from '../../utility/helper';\n\n@Component({\n  tag: 'phn-country-recommender',\n  styleUrl: 'country-recommender.scss',\n  scoped: true\n})\nexport class CountryRecommender {\n  @Prop() locale!: string;\n  @Prop() content!: TCountryRecommender;\n\n  @State() flagURL = '';\n\n  @Element() el!: HTMLPhnCountryRecommenderElement;\n\n  @Event() bannerClosed!: EventEmitter<void>;\n\n  @Watch('locale')\n  async localeWatcher(): Promise<void> {\n    await this.setFlagURL();\n  }\n\n  private async setFlagURL() {\n    const footerAssetsUrl = getConfig(navStateStore.state.env).FOOTER_ASSETS_URL;\n    this.flagURL = await getFlagURL(footerAssetsUrl, this.locale);\n  }\n\n  private closeCountryRecommender(): void {\n    globalDataLayerService.pushDataLayerEvent(EventActions.COUNTRY_RECOMMENDER_CLOSE, {\n      componentClick: {\n        clickElementId: 'mainmenu.banner.close',\n        clickElementName: 'close',\n        clickElementType: ClickElementTypes.Button\n      }\n    });\n\n    this.el.classList.remove('showing');\n    this.el.classList.add('hiding');\n  }\n\n  componentWillLoad(): void {\n    this.setFlagURL();\n  }\n\n  componentDidLoad(): void {\n    globalDataLayerService.pushDataLayerEvent(EventActions.COUNTRY_RECOMMENDER_LOAD, {\n      componentClick: {\n        clickElementId: 'mainmenu.banner',\n        clickElementName: 'Country Recommender',\n        clickElementType: ClickElementTypes.Link\n      }\n    });\n  }\n\n  @Listen('animationend', { passive: true })\n  handleAnimationEnd(e: AnimationEvent): void {\n    if (e.animationName === 'slideUp') {\n      getHTMLElement(e.target)?.classList.remove('hiding');\n      this.bannerClosed.emit();\n    } else if (e.animationName === 'slideDown') {\n      getHTMLElement(e.target)?.classList.remove('showing');\n    }\n  }\n\n  private sendDataLayerEvent() {\n    globalDataLayerService.pushDataLayerEvent(EventActions.COUNTRY_RECOMMENDER_CHANGE, {\n      componentClick: {\n        clickElementId: this.content.change.id,\n        clickElementName: this.content.change.text,\n        clickElementType: ClickElementTypes.Link,\n        targetUrl: getConfig(navStateStore.state.env).COUNTRY_SELECTOR_URL\n      }\n    });\n  }\n\n  render(): HTMLPhnCountryRecommenderElement {\n    const { statement, region, language, change } = this.content;\n\n    return (\n      <Host class=\"showing\">\n        <div class=\"country-recommender-container\">\n          <div class=\"country-recommender\">\n            <div class=\"country-recommender-icons-tray\">\n              <div class=\"left-icons\">\n                {isString(statement) ? (\n                  <phn-p-text theme=\"dark\" size=\"inherit\" class=\"statement\">\n                    {statement}\n                  </phn-p-text>\n                ) : /* istanbul ignore next */\n                null}\n\n                <div class=\"selector\">\n                  <div class=\"phn-flex-row phn-flex-wrap\">\n                    <div class=\"flag-region\">\n                      {isString(this.flagURL) ? (\n                        <phn-p-icon\n                          source={this.flagURL}\n                          class=\"flag\"\n                          aria-hidden=\"true\"\n                          size=\"inherit\"\n                          color=\"inherit\"\n                        />\n                      ) : /* istanbul ignore next */\n                      null}\n\n                      {isString(region) && isString(language) ? (\n                        <phn-p-text theme=\"dark\" class=\"language\" size=\"inherit\">\n                          {region} / {language}\n                        </phn-p-text>\n                      ) : /* istanbul ignore next */\n                      null}\n                    </div>\n\n                    <phn-p-link-pure\n                      theme=\"dark\"\n                      size=\"inherit\"\n                      class=\"change\"\n                      onClick={() => this.sendDataLayerEvent()}\n                      aria={{ 'aria-label': 'Change Region or Language' }}\n                    >\n                      <a href={getConfig(navStateStore.state.env).COUNTRY_SELECTOR_URL}>{change.text}</a>\n                    </phn-p-link-pure>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"right-icons\">\n                <phn-p-button-pure\n                  theme=\"dark\"\n                  icon=\"close\"\n                  onClick={() => this.closeCountryRecommender()}\n                  class=\"close-button\"\n                  hide-label=\"true\"\n                >\n                  Close dialog\n                </phn-p-button-pure>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}