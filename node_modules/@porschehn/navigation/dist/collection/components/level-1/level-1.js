var __rest = (this && this.__rest) || function (s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
import { h } from "@stencil/core";
import { getLevel1Items } from "../../services/menu-items-service";
import { dealerSearchResultsStore } from "../../state/dealer-search-results-store";
import { navContentStore } from "../../state/nav-content-store";
import { navStateStore } from "../../state/nav-state-store";
import { MenuItemVariant } from "../../utility/constants";
import { isDesktop } from "../../utility/helper";
import { isShopAvailable } from "../../utility/helpers/shop-helper";
import { goTo } from "../../services/routing-manager";
export class Level1 {
  constructor() {
    this.locale = undefined;
    this.breakpoint = undefined;
  }
  showRightIconRight(iconRight) {
    const { app } = navStateStore.state;
    const isOneUiMobileShop = isShopAvailable(this.locale, app) && !isDesktop(this.breakpoint);
    if (iconRight !== undefined && isOneUiMobileShop) {
      iconRight = 'arrow-head-right';
    }
    return iconRight;
  }
  render() {
    const { loggedInState, unreadMessagesCount, userConsent } = navStateStore.state;
    const level1Items = getLevel1Items(navContentStore.state, dealerSearchResultsStore.state, this.locale, loggedInState, unreadMessagesCount, userConsent);
    return (h("nav", null, level1Items.map((_a) => {
      var { routingKeys, elementId, iconRight, showIconModifier } = _a, level1Item = __rest(_a, ["routingKeys", "elementId", "iconRight", "showIconModifier"]);
      return (h("phn-menu-item", Object.assign({ key: elementId, elementId: elementId, onClick: () => {
          if (level1Item.link === undefined) {
            goTo(...routingKeys);
          }
        }, iconRight: iconRight !== undefined ? this.showRightIconRight(iconRight) : 'arrow-head-right', variant: MenuItemVariant.Level1 }, level1Item), showIconModifier ? (h("span", { slot: "icon-modifier", "aria-hidden": "true", class: "myporsche-unread-messages-indicator", "data-test-id": "unread-messages-indicator" })) : null));
    })));
  }
  static get is() { return "phn-level-1"; }
  static get encapsulation() { return "scoped"; }
  static get originalStyleUrls() {
    return {
      "$": ["level-1.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["level-1.css"]
    };
  }
  static get properties() {
    return {
      "locale": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "locale",
        "reflect": false
      },
      "breakpoint": {
        "type": "number",
        "mutable": false,
        "complexType": {
          "original": "number",
          "resolved": "number",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "breakpoint",
        "reflect": false
      }
    };
  }
  static get events() {
    return [{
        "method": "mobileMenuItemClick",
        "name": "mobileMenuItemClick",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "string[]",
          "resolved": "string[]",
          "references": {}
        }
      }];
  }
}
//# sourceMappingURL=level-1.js.map
