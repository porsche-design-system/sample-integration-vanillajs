{"version":3,"file":"contextual-drawer.js","sourceRoot":"","sources":["../../../../src/components/contextual-drawer/contextual-drawer.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,CAAC,EAAE,IAAI,EAAO,MAAM,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC5F,OAAO,EACL,+BAA+B,EAC/B,+BAA+B,EAChC,MAAM,wCAAwC,CAAC;AAChD,OAAO,gBAAgB,MAAM,6CAA6C,CAAC;AAC3E,OAAO,EAAqB,kBAAkB,EAAE,MAAM,6BAA6B,CAAC;AAOpF,MAAM,OAAO,gBAAgB;;0BAED,KAAK;;EAO/B,qBAAqB;IACnB,IAAI,CAAC,WAAW,EAAE,CAAC;EACrB,CAAC;EAGD,oBAAoB;IAClB,gBAAgB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;EAChD,CAAC;EAEO,WAAW;IACjB,gBAAgB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;MACvD,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,kBAAkB,CAAC,aAAa,EAAE,CAAC,CAAC;MAClF,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAC9B,CAAC,CAAC,CAAC;EACL,CAAC;EAED,gBAAgB;IACd,+BAA+B,CAAC;MAC9B,cAAc,EAAE,GAAG,EAAE;QACnB,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,kBAAkB,CAAC,YAAY,EAAE,CAAC,CAAC;QACjF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,MAAM,sBAAsB,GAAG,QAAQ,CAAC,cAAc,CAAC,0BAA0B,CAAC,CAAC;QACnF,IAAI,sBAAsB,EAAE;UAC1B,sBAAsB,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;SAC3C;MACH,CAAC;MACD,eAAe,EAAE,GAAG,EAAE;QACpB,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,kBAAkB,CAAC,aAAa,EAAE,CAAC,CAAC;MACpF,CAAC;KACF,CAAC,CAAC;IAEH,+BAA+B,CAAC;MAC9B,cAAc,EAAE,GAAG,EAAE;QACnB,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,kBAAkB,CAAC,YAAY,EAAE,CAAC,CAAC;MACnF,CAAC;KACF,CAAC,CAAC;EACL,CAAC;EAED,MAAM;IACJ,OAAO,CACL,EAAC,IAAI,IAAC,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE;MACzD,oBACE,OAAO,EAAC,WAAW,EACnB,SAAS,EAAC,cAAc,EACxB,KAAK,EAAC,MAAM,gBACD,MAAM,EACjB,IAAI,EAAE,OAAO,gBACF,oBAAoB,EAC/B,OAAO,EAAE,GAAG,EAAE;UACZ,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,GACD;MACF,WAAK,KAAK,EAAC,mBAAmB,EAAC,EAAE,EAAC,mBAAmB;QACnD,WAAK,IAAI,EAAC,0BAA0B;UAClC,YAAM,IAAI,EAAC,0BAA0B,GAAQ,CACzC,CACF;MACN,0BACc,MAAM,EAClB,KAAK,EAAC,4BAA4B,EAClC,OAAO,EAAE,GAAG,EAAE;UACZ,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,GACD,CACG,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Event, EventEmitter, h, Host, JSX, Listen, State } from '@stencil/core';\nimport {\n  registerContextualDrawerClosing,\n  registerContextualDrawerOpening\n} from './contextual-drawer-animation-sequence';\nimport animationManager from '../../services/animations/animation-manager';\nimport { DrawerStatusTypes, DrawerStatusValues } from '../../utility/constants/app';\n\n@Component({\n  tag: 'contextual-drawer',\n  styleUrl: 'contextual-drawer.scss',\n  scoped: true\n})\nexport class ContextualDrawer {\n  @Event() openBackdrop!: EventEmitter<boolean>;\n  @State() isDrawerOpened = false;\n\n  @Event({ composed: true, bubbles: true }) phnContextualDrawerStatus!: EventEmitter<{\n    status: DrawerStatusTypes;\n  }>;\n\n  @Listen('phnCloseContextualDrawer', { target: 'window' })\n  closeContextualDrawer(): void {\n    this.closeDrawer();\n  }\n\n  @Listen('phnOpenContextualDrawer', { target: 'window' })\n  openContextualDrawer(): void {\n    animationManager.play('openContextualDrawer');\n  }\n\n  private closeDrawer(): void {\n    animationManager.play('closeContextualDrawer').then(() => {\n      this.phnContextualDrawerStatus.emit({ status: DrawerStatusValues.finishClosing });\n      this.isDrawerOpened = false;\n    });\n  }\n\n  componentDidLoad(): void {\n    registerContextualDrawerOpening({\n      onStartOpening: () => {\n        this.phnContextualDrawerStatus.emit({ status: DrawerStatusValues.startOpening });\n        this.isDrawerOpened = true;\n        const contextualDrawerHeader = document.getElementById('contextual-drawer-header');\n        if (contextualDrawerHeader) {\n          contextualDrawerHeader.style.display = '';\n        }\n      },\n      onFinishOpening: () => {\n        this.phnContextualDrawerStatus.emit({ status: DrawerStatusValues.finishOpening });\n      }\n    });\n\n    registerContextualDrawerClosing({\n      onStartClosing: () => {\n        this.phnContextualDrawerStatus.emit({ status: DrawerStatusValues.startClosing });\n      }\n    });\n  }\n\n  render(): JSX.Element {\n    return (\n      <Host style={{ display: this.isDrawerOpened ? '' : 'none' }}>\n        <phn-p-button\n          variant=\"secondary\"\n          className=\"close-button\"\n          theme=\"dark\"\n          hide-label=\"true\"\n          icon={'close'}\n          aria-label=\"close modal dialog\"\n          onClick={() => {\n            this.closeDrawer();\n          }}\n        />\n        <div class=\"contextual-drawer\" id=\"contextual-drawer\">\n          <div slot=\"contextual_drawer_header\">\n            <slot name=\"contextual_drawer_header\"></slot>\n          </div>\n        </div>\n        <div\n          aria-hidden=\"true\"\n          class=\"contextual-drawer-backdrop\"\n          onClick={() => {\n            this.closeDrawer();\n          }}\n        />\n      </Host>\n    );\n  }\n}\n"]}