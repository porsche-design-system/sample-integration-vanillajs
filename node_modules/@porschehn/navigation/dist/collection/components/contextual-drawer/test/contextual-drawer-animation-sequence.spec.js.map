{"version":3,"file":"contextual-drawer-animation-sequence.spec.js","sourceRoot":"","sources":["../../../../../src/components/contextual-drawer/test/contextual-drawer-animation-sequence.spec.ts"],"names":[],"mappings":"AAAA,OAAO,gBAAgB,MAAM,gDAAgD,CAAC;AAC9E,OAAO,EACL,+BAA+B,EAC/B,+BAA+B,EAChC,MAAM,yCAAyC,CAAC;AAEjD,QAAQ,CAAC,mBAAmB,EAAE;EAC5B,IAAI,qBAAuC,CAAC;EAE5C,UAAU,CAAC,GAAG,EAAE;IACd,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;EACnE,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,+DAA+D,EAAE,GAAG,EAAE;IACvE,+BAA+B,CAAC,EAAE,cAAc,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,eAAe,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;IAE7F,MAAM,CAAC,qBAAqB,CAAC,CAAC,oBAAoB,CAAC,sBAAsB,EAAE;MACzE,gBAAgB,EAAE,CAAC;MACnB,OAAO,EAAE,KAAK;MACd,KAAK,EAAE;QACL;UACE;YACE,SAAS,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,iBAAiB,EAAE,EAAE,EAAE,CAAC,EAAE;YACzE,eAAe,EAAE,mBAAmB;YACpC,cAAc,EAAE,kBAAkB;YAClC,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC;WAC9B;UACD;YACE,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC;YAC3B,SAAS,EAAE;cACT,QAAQ,EAAE,GAAG;cACb,IAAI,EAAE,gBAAgB;cACtB,EAAE,EAAE,GAAG;aACR;YACD,eAAe,EAAE,6BAA6B;YAC9C,cAAc,EAAE,kBAAkB;WACnC;SACF;OACF;KACF,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EACH,EAAE,CAAC,+DAA+D,EAAE,GAAG,EAAE;IACvE,+BAA+B,CAAC,EAAE,cAAc,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;IAE1F,MAAM,CAAC,qBAAqB,CAAC,CAAC,oBAAoB,CAAC,uBAAuB,EAAE;MAC1E,gBAAgB,EAAE,CAAC;MACnB,OAAO,EAAE,KAAK;MACd,KAAK,EAAE;QACL;UACE;YACE,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC;YAC7B,SAAS,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAC/D,eAAe,EAAE,mBAAmB;YACpC,cAAc,EAAE,gBAAgB;WACjC;UACD;YACE,SAAS,EAAE;cACT,QAAQ,EAAE,GAAG;cACb,IAAI,EAAE,iBAAiB;cACvB,EAAE,EAAE,GAAG;aACR;YACD,eAAe,EAAE,6BAA6B;YAC9C,cAAc,EAAE,gBAAgB;YAChC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC;WAC5B;SACF;OACF;KACF,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import animationManager from '../../../services/animations/animation-manager';\nimport {\n  registerContextualDrawerClosing,\n  registerContextualDrawerOpening\n} from '../contextual-drawer-animation-sequence';\n\ndescribe('Contextual Drawer', function () {\n  let registerAnimationMock: jest.SpyInstance;\n\n  beforeEach(() => {\n    registerAnimationMock = jest.spyOn(animationManager, 'register');\n  });\n\n  it('should register opening animation sequence from right to left', () => {\n    registerContextualDrawerOpening({ onStartOpening: () => null, onFinishOpening: () => null });\n\n    expect(registerAnimationMock).toHaveBeenCalledWith('openContextualDrawer', {\n      currentStepIndex: 0,\n      running: false,\n      steps: [\n        [\n          {\n            animation: { duration: 600, from: -1000, name: 'slideInFromLeft', to: 0 },\n            elementSelector: 'contextual-drawer',\n            timingFunction: 'cubicBezierStart',\n            onStart: expect.any(Function)\n          },\n          {\n            onEnd: expect.any(Function),\n            animation: {\n              duration: 400,\n              name: 'fadeInBackdrop',\n              to: 0.6\n            },\n            elementSelector: '.contextual-drawer-backdrop',\n            timingFunction: 'cubicBezierStart'\n          }\n        ]\n      ]\n    });\n  });\n  it('should register closing animation sequence from left to right', () => {\n    registerContextualDrawerClosing({ onStartClosing: () => null, onEndClosing: () => null });\n\n    expect(registerAnimationMock).toHaveBeenCalledWith('closeContextualDrawer', {\n      currentStepIndex: 0,\n      running: false,\n      steps: [\n        [\n          {\n            onStart: expect.any(Function),\n            animation: { duration: 400, to: -1000, name: 'slideOutToLeft' },\n            elementSelector: 'contextual-drawer',\n            timingFunction: 'cubicBezierEnd'\n          },\n          {\n            animation: {\n              duration: 400,\n              name: 'fadeOutBackdrop',\n              to: 0.6\n            },\n            elementSelector: '.contextual-drawer-backdrop',\n            timingFunction: 'cubicBezierEnd',\n            onEnd: expect.any(Function)\n          }\n        ]\n      ]\n    });\n  });\n});\n"]}