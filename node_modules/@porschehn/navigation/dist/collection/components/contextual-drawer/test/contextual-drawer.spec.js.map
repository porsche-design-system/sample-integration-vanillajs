{"version":3,"file":"contextual-drawer.spec.js","sourceRoot":"","sources":["../../../../../src/components/contextual-drawer/test/contextual-drawer.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { newSpecPage, SpecPage } from '@stencil/core/testing';\nimport { ContextualDrawer } from '../contextual-drawer';\nimport { getHTMLElement, loadRootElement } from '../../../utility/helper';\nimport animationManager from '../../../services/animations/animation-manager';\n\ndescribe('contextual-drawer', () => {\n  const getPage = async (): Promise<SpecPage> => {\n    const page = await newSpecPage({\n      components: [ContextualDrawer],\n      html: `<contextual-drawer>\n                <div style=\"display: none\" id='contextual-drawer-header' slot=\"contextual_drawer_header\">\n                  <h1>This is a contextual Drawer Content</h1>\n                </div>\n             </contextual-drawer>`\n    });\n\n    if (page.root) loadRootElement(page.root);\n\n    return page;\n  };\n  it('renders', async () => {\n    const page = await getPage();\n\n    expect(page.root).toMatchInlineSnapshot(`\n      <contextual-drawer style=\"display: none;\">\n        <!---->\n        <phn-p-button aria-label=\"close modal dialog\" class=\"close-button\" hide-label=\"true\" icon=\"close\" theme=\"dark\" variant=\"secondary\"></phn-p-button>\n        <div class=\"contextual-drawer\" id=\"contextual-drawer\">\n          <div slot=\"contextual_drawer_header\">\n            <div id=\"contextual-drawer-header\" slot=\"contextual_drawer_header\" style=\"display: none;\">\n              <h1>\n                This is a contextual Drawer Content\n              </h1>\n            </div>\n          </div>\n        </div>\n        <div aria-hidden=\"true\" class=\"contextual-drawer-backdrop\"></div>\n      </contextual-drawer>\n    `);\n  });\n\n  describe('animations', () => {\n    it('should play close animation when click on close button', async () => {\n      const animationPlayMock = jest.spyOn(animationManager, 'play');\n      const page = await getPage();\n\n      await page.waitForChanges();\n      getHTMLElement(page.root?.querySelector('.close-button'))?.click();\n      await page.waitForChanges();\n\n      expect(animationPlayMock).toHaveBeenCalledWith('closeContextualDrawer');\n    });\n\n    it('should play close animation when click on backdrop', async () => {\n      const animationPlayMock = jest.spyOn(animationManager, 'play');\n      const page = await getPage();\n\n      await page.waitForChanges();\n      getHTMLElement(page.root?.querySelector('.contextual-drawer-backdrop'))?.click();\n      await page.waitForChanges();\n\n      expect(animationPlayMock).toHaveBeenCalledWith('closeContextualDrawer');\n    });\n\n    it('should play close animation when phnCloseContextualDrawer event is emitted', async () => {\n      const animationPlayMock = jest.spyOn(animationManager, 'play');\n      const page = await getPage();\n      await page.waitForChanges();\n\n      window.dispatchEvent(new CustomEvent('phnCloseContextualDrawer'));\n\n      await page.waitForChanges();\n\n      expect(animationPlayMock).toHaveBeenCalledWith('closeContextualDrawer');\n    });\n\n    it('should play open animation when phnOpenContextualDrawer event is emitted', async () => {\n      const animationPlayMock = jest.spyOn(animationManager, 'play');\n      const page = await getPage();\n      await page.waitForChanges();\n\n      window.dispatchEvent(new CustomEvent('phnOpenContextualDrawer'));\n\n      await page.waitForChanges();\n\n      expect(animationPlayMock).toHaveBeenCalledWith('openContextualDrawer');\n    });\n\n    it('should show contextual drawer content when start opening', async () => {\n      const page = await getPage();\n      await page.waitForChanges();\n\n      window.dispatchEvent(new CustomEvent('phnOpenContextualDrawer'));\n\n      await page.waitForChanges();\n\n      expect(page.root?.querySelector('#contextual-drawer-header')?.getAttribute('style')).toEqual(null);\n    });\n  });\n});\n"]}