import animationManager from "../../../services/animations/animation-manager";
import { registerContextualDrawerClosing, registerContextualDrawerOpening } from "../contextual-drawer-animation-sequence";
describe('Contextual Drawer', function () {
  let registerAnimationMock;
  beforeEach(() => {
    registerAnimationMock = jest.spyOn(animationManager, 'register');
  });
  it('should register opening animation sequence from right to left', () => {
    registerContextualDrawerOpening({ onStartOpening: () => null, onFinishOpening: () => null });
    expect(registerAnimationMock).toHaveBeenCalledWith('openContextualDrawer', {
      currentStepIndex: 0,
      running: false,
      steps: [
        [
          {
            animation: { duration: 600, from: -1000, name: 'slideInFromLeft', to: 0 },
            elementSelector: 'contextual-drawer',
            timingFunction: 'cubicBezierStart',
            onStart: expect.any(Function)
          },
          {
            onEnd: expect.any(Function),
            animation: {
              duration: 400,
              name: 'fadeInBackdrop',
              to: 0.6
            },
            elementSelector: '.contextual-drawer-backdrop',
            timingFunction: 'cubicBezierStart'
          }
        ]
      ]
    });
  });
  it('should register closing animation sequence from left to right', () => {
    registerContextualDrawerClosing({ onStartClosing: () => null, onEndClosing: () => null });
    expect(registerAnimationMock).toHaveBeenCalledWith('closeContextualDrawer', {
      currentStepIndex: 0,
      running: false,
      steps: [
        [
          {
            onStart: expect.any(Function),
            animation: { duration: 400, to: -1000, name: 'slideOutToLeft' },
            elementSelector: 'contextual-drawer',
            timingFunction: 'cubicBezierEnd'
          },
          {
            animation: {
              duration: 400,
              name: 'fadeOutBackdrop',
              to: 0.6
            },
            elementSelector: '.contextual-drawer-backdrop',
            timingFunction: 'cubicBezierEnd',
            onEnd: expect.any(Function)
          }
        ]
      ]
    });
  });
});
//# sourceMappingURL=contextual-drawer-animation-sequence.spec.js.map
