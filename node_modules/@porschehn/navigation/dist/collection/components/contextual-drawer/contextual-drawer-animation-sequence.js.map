{"version":3,"file":"contextual-drawer-animation-sequence.js","sourceRoot":"","sources":["../../../../src/components/contextual-drawer/contextual-drawer-animation-sequence.ts"],"names":[],"mappings":"AAAA,OAAO,gBAAgB,EAAE,EAAE,YAAY,EAAE,MAAM,6CAA6C,CAAC;AAE7F,MAAM,CAAC,MAAM,+BAA+B,GAAG,CAAC,EAC9C,cAAc,EACd,eAAe,EAIhB,EAAQ,EAAE;EACT,gBAAgB,CAAC,QAAQ,CACvB,sBAAsB,EACtB,YAAY,CAAC;IACX;MACE;QACE,OAAO,EAAE,cAAc;QACvB,eAAe,EAAE,mBAAmB;QACpC,SAAS,EAAE;UACT,SAAS,EAAE,oBAAoB;UAC/B,qBAAqB,EAAE,CAAC,OAAO,EAAE,EAAE;YACjC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;UAC7B,CAAC;SACF;OACF;MACD;QACE,KAAK,EAAE,eAAe;QACtB,eAAe,EAAE,6BAA6B;QAC9C,SAAS,EAAE;UACT,SAAS,EAAE,mBAAmB;UAC9B,qBAAqB,EAAE,CAAC,OAAO,EAAE,EAAE;YACjC,OAAO,CAAC,KAAK,CAAC,eAAe,GAAG,oBAAoB,CAAC;YACrD,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;UAC9B,CAAC;SACF;OACF;KACF;GACF,CAAC,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,+BAA+B,GAAG,CAAC,EAAE,cAAc,EAAkC,EAAQ,EAAE;EAC1G,gBAAgB,CAAC,QAAQ,CACvB,uBAAuB,EACvB,YAAY,CAAC;IACX;MACE;QACE,OAAO,EAAE,cAAc;QACvB,eAAe,EAAE,mBAAmB;QACpC,SAAS,EAAE;UACT,SAAS,EAAE,mBAAmB;UAC9B,sBAAsB,EAAE,CAAC,OAAO,EAAE,EAAE;YAClC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;UAC1B,CAAC;UACD,yCAAyC;UACzC,gCAAgC;UAChC,IAAI;SACL;OACF;MACD;QACE,eAAe,EAAE,6BAA6B;QAC9C,SAAS,EAAE;UACT,SAAS,EAAE,oBAAoB;UAC/B,sBAAsB,EAAE,CAAC,OAAO,EAAE,EAAE;YAClC,OAAO,CAAC,KAAK,CAAC,eAAe,GAAG,EAAE,CAAC;YACnC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;UAC7B,CAAC;SACF;OACF;KACF;GACF,CAAC,CACH,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import animationManager, { makeSequence } from '../../services/animations/animation-manager';\n\nexport const registerContextualDrawerOpening = ({\n  onStartOpening,\n  onFinishOpening\n}: {\n  onStartOpening: () => void;\n  onFinishOpening: () => void;\n}): void => {\n  animationManager.register(\n    'openContextualDrawer',\n    makeSequence([\n      [\n        {\n          onStart: onStartOpening,\n          elementSelector: 'contextual-drawer',\n          animation: {\n            className: 'slide-in-from-left',\n            cleanUpAfterAnimation: (element) => {\n              element.style.left = '0px';\n            }\n          }\n        },\n        {\n          onEnd: onFinishOpening,\n          elementSelector: '.contextual-drawer-backdrop',\n          animation: {\n            className: 'fade-in-animation',\n            cleanUpAfterAnimation: (element) => {\n              element.style.backgroundColor = 'rgba(0, 0, 0, 0.6)';\n              element.style.opacity = '1';\n            }\n          }\n        }\n      ]\n    ])\n  );\n};\n\nexport const registerContextualDrawerClosing = ({ onStartClosing }: { onStartClosing: () => void }): void => {\n  animationManager.register(\n    'closeContextualDrawer',\n    makeSequence([\n      [\n        {\n          onStart: onStartClosing,\n          elementSelector: 'contextual-drawer',\n          animation: {\n            className: 'slide-out-to-left',\n            cleanUpBeforeAnimation: (element) => {\n              element.style.left = '';\n            }\n            // cleanUpBeforeAnimation: (element) => {\n            //   element.style.left = '0px';\n            // }\n          }\n        },\n        {\n          elementSelector: '.contextual-drawer-backdrop',\n          animation: {\n            className: 'fade-out-animation',\n            cleanUpBeforeAnimation: (element) => {\n              element.style.backgroundColor = '';\n              element.style.opacity = '';\n            }\n          }\n        }\n      ]\n    ])\n  );\n};\n"]}