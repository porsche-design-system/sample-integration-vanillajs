{"version":3,"file":"menu-item.js","sourceRoot":"","sources":["../../../../src/components/menu-item/menu-item.tsx"],"names":[],"mappings":"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","sourcesContent":["import { TDataLayer } from '@porsche/globaldatalayer-events/projects/pcom/all/types';\nimport { Component, Element, h, Host, JSX, Prop } from '@stencil/core';\nimport { ClickElementType, ClickElementTypes, EventAction, EventActions } from '../../utility/constants';\nimport { isString } from '../../utility/helper';\nimport MenuItemText from './menu-item-text';\nimport Icon from './menu-item-icon';\nimport { sendDataLayerEvent } from '../../services/analytics/data-layer-event-sender';\n\n@Component({\n  tag: 'phn-menu-item',\n  styleUrl: 'menu-item.scss',\n  scoped: true\n})\nexport class MenuItem {\n  @Prop() text = '';\n  @Prop() analyticsId!: string;\n  @Prop() subtext = '';\n  @Prop() fontWeight = 'regular';\n  @Prop() elementId = '';\n  @Prop() size = 'inherit';\n  @Prop() iconLeft = '';\n  @Prop() iconRight = '';\n  @Prop() link = '';\n  @Prop() isLoading = false;\n  @Prop() datalayerEventAction: EventAction = EventActions.NAVIGATION_CLICK;\n  @Prop() customDatalayerProperties: TDataLayer = {};\n  @Prop() target = '_self';\n  @Prop() variant = '';\n  @Prop() isModels = false;\n\n  @Element() el!: HTMLPhnMenuItemElement;\n\n  private sendDataLayerEvent(clickElementType: ClickElementType, elementId: string): void {\n    sendDataLayerEvent({\n      analyticsId: this.analyticsId,\n      text: this.text,\n      elementId,\n      clickElementType,\n      link: this.link,\n      customDatalayerProperties: this.customDatalayerProperties,\n      datalayerEventAction: this.datalayerEventAction\n    });\n  }\n\n  private existsSlot(slotName: string): boolean {\n    return this.el.querySelector(`[slot=\"${slotName}\"]`) !== null;\n  }\n\n  render(): JSX.Element {\n    const body = (\n      <div class=\"phn-flex-row phn-align-center\">\n        {this.existsSlot('media') ? (\n          <div class=\"media-container skeleton-item\">\n            <slot name=\"media\" />\n          </div>\n        ) : null}\n        <Icon isLoading={this.isLoading} icon={this.iconLeft} />\n        {!this.isModels && isString(this.text) ? (\n          <MenuItemText size={this.size} text={this.text} subtext={this.subtext} fontWeight={this.fontWeight} />\n        ) : undefined}\n        {this.existsSlot('suffix') ? (\n          <div>\n            <slot name=\"suffix\" />\n          </div>\n        ) : null}\n      </div>\n    );\n\n    if (isString(this.link)) {\n      return (\n        <Host class={this.variant}>\n          <phn-p-link-pure\n            class={`${isString(this.iconLeft) ? 'has-icon' : ''}`}\n            icon={isString(this.iconRight) ? this.iconRight : 'none'}\n            align-label=\"left\"\n            stretch={isString(this.iconRight) ? 'true' : 'false'}\n            data-id={this.elementId}\n            target={this.target}\n            onClick={() => {\n              this.sendDataLayerEvent(ClickElementTypes.Link, this.elementId);\n            }}\n          >\n            <a href={this.link}>{body}</a>\n          </phn-p-link-pure>\n        </Host>\n      );\n    }\n\n    return (\n      <Host class={this.variant}>\n        <phn-p-button-pure\n          class={`${isString(this.iconLeft) ? 'has-icon' : ''}`}\n          size=\"inherit\"\n          icon={isString(this.iconRight) ? this.iconRight : 'none'}\n          align-label=\"left\"\n          stretch={isString(this.iconRight) ? 'true' : 'false'}\n          data-id={this.elementId}\n          onClick={() => {\n            this.sendDataLayerEvent(ClickElementTypes.Button, this.elementId);\n          }}\n        >\n          {body}\n        </phn-p-button-pure>\n      </Host>\n    );\n  }\n}\n"]}