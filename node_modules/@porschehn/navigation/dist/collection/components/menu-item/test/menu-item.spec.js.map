{"version":3,"file":"menu-item.spec.js","sourceRoot":"","sources":["../../../../../src/components/menu-item/test/menu-item.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage, SpecPage } from '@stencil/core/testing';\nimport { constructRoutingKey, RoutingKeys } from '../../../entities/routing-key';\nimport globalDataLayerService from '../../../services/analytics/global-data-layer-service';\nimport { mockPPNDealer } from '../../../test/test-data';\nimport { ClickElementTypes, EventActions } from '../../../utility/constants';\nimport { getHTMLElement } from '../../../utility/helper';\nimport { MenuItem } from '../menu-item';\n\ndescribe('Menu Item', () => {\n  let page: SpecPage;\n\n  describe('as button', () => {\n    const defaultProps = {\n      id: 'mainmenu.shops.test',\n      text: 'Text',\n      link: ''\n    };\n\n    const getPage = async (props: Record<string, unknown> = {}): Promise<SpecPage> => {\n      return await newSpecPage({\n        components: [MenuItem],\n        template: () => (\n          <phn-menu-item\n            elementId={constructRoutingKey(RoutingKeys.SHOP, defaultProps.id)}\n            analyticsId={defaultProps.id}\n            text={defaultProps.text}\n            {...props}\n          />\n        )\n      });\n    };\n\n    it('renders without subtext', async () => {\n      page = await getPage();\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-menu-item>\n          <!---->\n          <phn-p-button-pure align-label=\"left\" data-id=\"shop/mainmenu.shops.test\" icon=\"none\" size=\"inherit\" stretch=\"false\">\n            <div class=\"phn-align-center phn-flex-row\">\n              <div class=\"skeleton-item\">\n                <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                  Text\n                </phn-p-text>\n              </div>\n            </div>\n          </phn-p-button-pure>\n        </phn-menu-item>\n      `);\n    });\n\n    it('should have subtext when subtext is given', async () => {\n      const page = await newSpecPage({\n        components: [MenuItem],\n        template: () => (\n          <phn-menu-item\n            elementId={constructRoutingKey(RoutingKeys.SHOP, defaultProps.id)}\n            analyticsId={defaultProps.id}\n            text={defaultProps.text}\n            subtext=\"this is subtext\"\n          />\n        )\n      });\n\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-menu-item>\n          <!---->\n          <phn-p-button-pure align-label=\"left\" data-id=\"shop/mainmenu.shops.test\" icon=\"none\" size=\"inherit\" stretch=\"false\">\n            <div class=\"phn-align-center phn-flex-row\">\n              <div class=\"skeleton-item\">\n                <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                  Text\n                </phn-p-text>\n                <div class=\"text-limit\">\n                  <phn-p-text class=\"subtext\" color=\"inherit\" data-test-id=\"subtext\" ellipsis=\"true\" size=\"x-small\" tag=\"div\" weight=\"regular\">\n                    this is subtext\n                  </phn-p-text>\n                </div>\n              </div>\n            </div>\n          </phn-p-button-pure>\n        </phn-menu-item>\n      `);\n    });\n\n    it('should show arrow on the right side of item if iconRight is passed in with \"arrow-head-right\"', async () => {\n      const page = await newSpecPage({\n        components: [MenuItem],\n        template: () => (\n          <phn-menu-item\n            elementId={constructRoutingKey(RoutingKeys.SHOP, defaultProps.id)}\n            analyticsId={defaultProps.id}\n            text={defaultProps.text}\n            link={defaultProps.link}\n            iconRight=\"arrow-head-right\"\n          />\n        )\n      });\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-menu-item>\n          <!---->\n          <phn-p-button-pure align-label=\"left\" data-id=\"shop/mainmenu.shops.test\" icon=\"arrow-head-right\" size=\"inherit\" stretch=\"true\">\n            <div class=\"phn-align-center phn-flex-row\">\n              <div class=\"skeleton-item\">\n                <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                  Text\n                </phn-p-text>\n              </div>\n            </div>\n          </phn-p-button-pure>\n        </phn-menu-item>\n      `);\n    });\n\n    it('should have text from text item', async () => {\n      page = await getPage();\n\n      const link = getHTMLElement(page.root?.querySelector('phn-p-button-pure'));\n      const actualText = link?.innerText;\n      const expectedText = defaultProps.text;\n\n      expect(actualText).toEqual(expectedText);\n    });\n\n    it('should show icon if icon is provided', async () => {\n      const page = await newSpecPage({\n        components: [MenuItem],\n        template: () => (\n          <phn-menu-item\n            elementId={constructRoutingKey(RoutingKeys.SHOP, defaultProps.id)}\n            analyticsId={defaultProps.id}\n            text={defaultProps.text}\n            link={defaultProps.link}\n            iconLeft=\"icon\"\n          />\n        )\n      });\n\n      expect(page.root?.querySelector('phn-p-icon')).toBeTruthy();\n    });\n\n    it('should not show icon if no icon is provided', async () => {\n      const page = await newSpecPage({\n        components: [MenuItem],\n        template: () => (\n          <phn-menu-item\n            elementId={constructRoutingKey(RoutingKeys.SHOP, defaultProps.id)}\n            analyticsId={defaultProps.id}\n            text={defaultProps.text}\n            link={defaultProps.link}\n          />\n        )\n      });\n\n      expect(page.root?.querySelector('phn-p-icon')).toBeNull();\n    });\n\n    it('should render suffix slot if provided', async () => {\n      const page = await newSpecPage({\n        components: [MenuItem],\n        template: () => (\n          <phn-menu-item\n            elementId={constructRoutingKey(RoutingKeys.SHOP, defaultProps.id)}\n            analyticsId={defaultProps.id}\n            text={defaultProps.text}\n          >\n            <div slot=\"suffix\" />\n          </phn-menu-item>\n        )\n      });\n\n      expect(page.root?.querySelector('[slot=\"suffix\"]')).not.toBeNull();\n    });\n\n    it('should render media slot if provided', async () => {\n      const page = await newSpecPage({\n        components: [MenuItem],\n        template: () => (\n          <phn-menu-item\n            elementId={constructRoutingKey(RoutingKeys.SHOP, defaultProps.id)}\n            analyticsId={defaultProps.id}\n            text={defaultProps.text}\n          >\n            <div slot=\"media\" />\n          </phn-menu-item>\n        )\n      });\n\n      expect(page.root?.querySelector('[slot=\"media\"]')).not.toBeNull();\n    });\n\n    it('renders button pure item for one ui with separated icon', async () => {\n      const page = await newSpecPage({\n        components: [MenuItem],\n        template: () => (\n          <phn-menu-item\n            elementId={constructRoutingKey(RoutingKeys.SHOP, defaultProps.id)}\n            analyticsId={defaultProps.id}\n            text={defaultProps.text}\n            link={defaultProps.link}\n            iconRight=\"arrow-head-right\"\n          />\n        )\n      });\n\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-menu-item>\n          <!---->\n          <phn-p-button-pure align-label=\"left\" data-id=\"shop/mainmenu.shops.test\" icon=\"arrow-head-right\" size=\"inherit\" stretch=\"true\">\n            <div class=\"phn-align-center phn-flex-row\">\n              <div class=\"skeleton-item\">\n                <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                  Text\n                </phn-p-text>\n              </div>\n            </div>\n          </phn-p-button-pure>\n        </phn-menu-item>\n      `);\n    });\n\n    describe('data analytics', () => {\n      it('should send default NAVIGATION_CLICK data event after button text is clicked', async () => {\n        page = await getPage();\n        getHTMLElement(page.root?.querySelector('phn-p-button-pure'))?.click();\n\n        expect(globalDataLayerService.gdl.DataLayerStore).toHaveLength(1);\n\n        const event = globalDataLayerService.gdl.DataLayerStore[0];\n\n        expect(event.context?.eventAction).toEqual(EventActions.NAVIGATION_CLICK);\n        expect(event.componentClick).toEqual({\n          clickElementId: defaultProps.id,\n          clickElementName: defaultProps.text,\n          clickElementType: ClickElementTypes.Button\n        });\n        expect(event.componentDisplay).toEqual({\n          displayElementId: 'level2-shop',\n          displayElementType: 'level2_menu-item',\n          displayElementName: defaultProps.text\n        });\n      });\n\n      it('should send MODEL_RANGE_CLICK data event after models button is clicked', async () => {\n        const defaultProps = {\n          id: 'mainmenu.taycan',\n          text: 'Taycan'\n        };\n\n        page = await newSpecPage({\n          components: [MenuItem],\n          template: () => (\n            <phn-menu-item\n              elementId={constructRoutingKey(RoutingKeys.MODELS, defaultProps.id)}\n              analyticsId={defaultProps.id}\n              text={defaultProps.text}\n              datalayerEventAction={EventActions.MODEL_RANGE_CLICK}\n            />\n          )\n        });\n        getHTMLElement(page.root?.querySelector('phn-p-button-pure'))?.click();\n\n        expect(globalDataLayerService.gdl.DataLayerStore).toHaveLength(1);\n\n        const event = globalDataLayerService.gdl.DataLayerStore[0];\n\n        expect(event.context?.eventAction).toEqual(EventActions.MODEL_RANGE_CLICK);\n        expect(event.componentClick).toEqual({\n          clickElementId: defaultProps.id,\n          clickElementName: defaultProps.text,\n          clickElementType: ClickElementTypes.Button,\n          targetElement: 'level3_taycan'\n        });\n        expect(event.componentDisplay).toEqual({\n          displayElementId: 'level2-models',\n          displayElementType: 'level2_menu-item',\n          displayElementName: defaultProps.text\n        });\n        expect(event.car).toEqual({\n          modelRangeName: 'taycan'\n        });\n      });\n    });\n  });\n\n  describe('as link', () => {\n    const item = {\n      id: 'mainmenu.shops.test',\n      text: 'Text',\n      link: 'http://www.porsche.com'\n    };\n\n    const defaultProps = {\n      elementId: constructRoutingKey(RoutingKeys.SHOP, item.id),\n      analyticsId: 'mainmenu.shops.test',\n      text: 'Text',\n      link: 'http://www.porsche.com',\n      iconRight: 'arrow-head-right'\n    };\n\n    beforeEach(async () => {\n      page = await newSpecPage({\n        components: [MenuItem],\n        template: () => <phn-menu-item {...defaultProps} />\n      });\n    });\n\n    it('renders without subtext', async () => {\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-menu-item>\n          <!---->\n          <phn-p-link-pure align-label=\"left\" data-id=\"shop/mainmenu.shops.test\" icon=\"arrow-head-right\" stretch=\"true\" target=\"_self\">\n            <a href=\"http://www.porsche.com\">\n              <div class=\"phn-align-center phn-flex-row\">\n                <div class=\"skeleton-item\">\n                  <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                    Text\n                  </phn-p-text>\n                </div>\n              </div>\n            </a>\n          </phn-p-link-pure>\n        </phn-menu-item>\n      `);\n    });\n\n    it('should have subtext when subtext is given', async () => {\n      const page = await newSpecPage({\n        components: [MenuItem],\n        template: () => <phn-menu-item {...defaultProps} subtext=\"this is subtext\" />\n      });\n\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-menu-item>\n          <!---->\n          <phn-p-link-pure align-label=\"left\" data-id=\"shop/mainmenu.shops.test\" icon=\"arrow-head-right\" stretch=\"true\" target=\"_self\">\n            <a href=\"http://www.porsche.com\">\n              <div class=\"phn-align-center phn-flex-row\">\n                <div class=\"skeleton-item\">\n                  <phn-p-text color=\"inherit\" size=\"inherit\" tag=\"div\" weight=\"regular\">\n                    Text\n                  </phn-p-text>\n                  <div class=\"text-limit\">\n                    <phn-p-text class=\"subtext\" color=\"inherit\" data-test-id=\"subtext\" ellipsis=\"true\" size=\"x-small\" tag=\"div\" weight=\"regular\">\n                      this is subtext\n                    </phn-p-text>\n                  </div>\n                </div>\n              </div>\n            </a>\n          </phn-p-link-pure>\n        </phn-menu-item>\n      `);\n    });\n\n    it('should have text from menu item', () => {\n      const link = getHTMLElement(page.root?.querySelector('a'));\n      expect(link?.innerText).toEqual(item.text);\n      expect(link?.getAttribute('href')).toEqual(item.link);\n    });\n\n    it('should show icon if icon is provided', async () => {\n      const page = await newSpecPage({\n        components: [MenuItem],\n        template: () => <phn-menu-item {...defaultProps} iconLeft=\"icon\" />\n      });\n\n      expect(page.root?.querySelector('phn-p-icon')).toBeTruthy();\n    });\n\n    it('should not show icon if no icon is provided', async () => {\n      const page = await newSpecPage({\n        components: [MenuItem],\n        template: () => <phn-menu-item {...defaultProps} />\n      });\n\n      expect(page.root?.querySelector('phn-p-icon')).toBeNull();\n    });\n\n    it('should show spinner if loading', async () => {\n      const page = await newSpecPage({\n        components: [MenuItem],\n        template: () => <phn-menu-item {...defaultProps} iconLeft=\"icon\" isLoading />\n      });\n\n      expect(page.root?.querySelector('phn-p-spinner')).toBeTruthy();\n    });\n\n    it('should render suffix slot if provided', async () => {\n      const page = await newSpecPage({\n        components: [MenuItem],\n        template: () => (\n          <phn-menu-item {...defaultProps}>\n            <div slot=\"suffix\" />\n          </phn-menu-item>\n        )\n      });\n\n      expect(page.root?.querySelector('[slot=\"suffix\"]')).not.toBeNull();\n    });\n\n    it('should render media slot if provided', async () => {\n      const page = await newSpecPage({\n        components: [MenuItem],\n        template: () => (\n          <phn-menu-item {...defaultProps}>\n            <div slot=\"media\" />\n          </phn-menu-item>\n        )\n      });\n\n      expect(page.root?.querySelector('[slot=\"media\"]')).not.toBeNull();\n    });\n\n    describe('data analytics', () => {\n      it('should send default NAVIGATION_LINK_CLICK data event after link is clicked', async () => {\n        const page = await newSpecPage({\n          components: [MenuItem],\n          template: () => (\n            <phn-menu-item {...defaultProps} datalayerEventAction={EventActions.NAVIGATION_LINK_CLICK}>\n              <div slot=\"suffix\" />\n            </phn-menu-item>\n          )\n        });\n\n        getHTMLElement(page.root?.querySelector('phn-p-link-pure'))?.click();\n\n        expect(globalDataLayerService.gdl.DataLayerStore).toHaveLength(1);\n\n        const event = globalDataLayerService.gdl.DataLayerStore[0];\n\n        expect(event.context?.eventAction).toEqual(EventActions.NAVIGATION_LINK_CLICK);\n        expect(event.componentClick).toEqual({\n          clickElementId: item.id,\n          clickElementName: item.text,\n          clickElementType: ClickElementTypes.Link,\n          targetUrl: item.link\n        });\n        expect(event.componentDisplay).toEqual({\n          displayElementId: 'level2-shop',\n          displayElementType: 'level2_menu-item',\n          displayElementName: item.text\n        });\n      });\n\n      it('should send META_FUNCTION_CLICK data event after any myporsche link is clicked', async () => {\n        const page = await newSpecPage({\n          components: [MenuItem],\n          template: () => (\n            <phn-menu-item {...defaultProps} datalayerEventAction={EventActions.META_FUNCTION_CLICK} iconLeft=\"icon\" />\n          )\n        });\n\n        getHTMLElement(page.root?.querySelector('phn-p-link-pure'))?.click();\n\n        expect(globalDataLayerService.gdl.DataLayerStore).toHaveLength(1);\n\n        const event = globalDataLayerService.gdl.DataLayerStore[0];\n\n        expect(event.context?.eventAction).toEqual(EventActions.META_FUNCTION_CLICK);\n        expect(event.componentClick).toEqual({\n          clickElementId: item.id,\n          clickElementName: item.text,\n          clickElementType: ClickElementTypes.Link,\n          targetUrl: item.link\n        });\n        expect(event.componentDisplay).toEqual({\n          displayElementId: 'level2-shop',\n          displayElementType: 'level2_menu-item',\n          displayElementName: item.text\n        });\n      });\n\n      it('should send DEALER_CONTACT_CLICK data event with custom data', async () => {\n        const searchTerm = 'Fancy search term';\n        const phoneLink = 'Call me baby';\n        const elementId = 'mainmenu.finddealer.phone';\n\n        const page = await newSpecPage({\n          components: [MenuItem],\n          template: () => (\n            <phn-menu-item\n              elementId=\"routing key\"\n              analyticsId={elementId}\n              text={mockPPNDealer.contactDetails.phoneNumber}\n              link={phoneLink}\n              datalayerEventAction={EventActions.DEALER_CONTACT_CLICK}\n              customDatalayerProperties={{\n                partner: {\n                  companyId: mockPPNDealer.porschePartnerNo,\n                  companyName: mockPPNDealer.name\n                },\n                componentSearch: {\n                  searchTerm\n                }\n              }}\n              iconLeft=\"icon\"\n            />\n          )\n        });\n\n        getHTMLElement(page.root?.querySelector('phn-p-link-pure'))?.click();\n\n        expect(globalDataLayerService.gdl.DataLayerStore).toHaveLength(1);\n\n        const event = globalDataLayerService.gdl.DataLayerStore[0];\n\n        expect(event.context?.eventAction).toEqual(EventActions.DEALER_CONTACT_CLICK);\n        expect(event.componentClick).toEqual({\n          clickElementId: elementId,\n          clickElementName: mockPPNDealer.contactDetails.phoneNumber,\n          clickElementType: ClickElementTypes.Link,\n          targetUrl: phoneLink\n        });\n        expect(event.partner).toEqual({\n          companyId: mockPPNDealer.porschePartnerNo,\n          companyName: mockPPNDealer.name\n        });\n        expect(event.componentSearch).toEqual({\n          searchTerm\n        });\n      });\n    });\n  });\n});\n"]}