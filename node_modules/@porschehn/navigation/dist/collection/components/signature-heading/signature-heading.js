import { Fragment, h } from "@stencil/core";
import { isModelFuelTypeGasoline, isString } from "../../utility/helper";
export class SignatureHeading {
  constructor() {
    this.text = undefined;
    this.subtext = undefined;
  }
  render() {
    return (h(Fragment, null, h("phn-p-model-signature", { model: this.text.toLowerCase(), size: "inherit", class: "model-signature" }), isString(this.subtext) && !isModelFuelTypeGasoline(this.text) ? (h("phn-p-text", { color: "inherit", class: "subtext", weight: "regular", size: "x-small", tag: "div", ellipsis: "true", "data-test-id": "subtext" }, this.subtext)) : null));
  }
  static get is() { return "phn-signature-heading"; }
  static get encapsulation() { return "scoped"; }
  static get originalStyleUrls() {
    return {
      "$": ["signature-heading.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["signature-heading.css"]
    };
  }
  static get properties() {
    return {
      "text": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "text",
        "reflect": false
      },
      "subtext": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string | undefined",
          "references": {}
        },
        "required": false,
        "optional": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "subtext",
        "reflect": false
      }
    };
  }
}
//# sourceMappingURL=signature-heading.js.map
