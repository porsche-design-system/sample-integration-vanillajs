{"version":3,"file":"dealer-search-by-number-of-dealers.js","sourceRoot":"","sources":["../../../../src/components/dealer-search-by-number-of-dealers/dealer-search-by-number-of-dealers.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, h, Prop, State } from '@stencil/core';\nimport { splitLocale } from '../../entities/locale';\nimport { dealerSearchResultsStore } from '../../state/dealer-search-results-store';\nimport { navStateStore } from '../../state/nav-state-store';\nimport { getAllPPNDealersForMarket } from '../../services/dealer-service';\nimport { getConfig, isString } from '../../utility/helper';\nimport logger from '../../services/logger';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { getErrorMessage } from '../../utility/navi-error';\nimport ErrorMessage from '../dealer-search-form/error-message';\nimport { componentsOnReady } from '../../utility/ready';\nimport { Timeout } from '../../utility/timeout';\nimport analyticsManager from '../../services/analytics/analytics-manager';\nimport {\n  DEALER_MARKET_SEARCH_TERM,\n  DEALER_SEARCH_RESULT_DISPLAY_ELEMENT_ID_DOUBLE_DRAWER,\n  ElementTypes,\n  EventActions\n} from '../../utility/constants';\nimport globalDataLayerService from '../../services/analytics/global-data-layer-service';\n\n@Component({\n  tag: 'phn-dealer-search-by-number-of-dealers',\n  styleUrl: 'dealer-search-by-number-of-dealers.scss',\n  scoped: true\n})\nexport class DealerSearchByNumberOfDealers {\n  @State() isLoading = false;\n  @State() formErrorMessage: string | null = null;\n\n  @Prop() locale!: string;\n\n  @Element() el!: HTMLPhnDealerSearchByNumberOfDealersElement;\n\n  @Event() removeSkeletonOnDealerSearchForm!: EventEmitter;\n\n  componentWillLoad(): void {\n    this.waitForComponentsToLoad().then(() => {\n      const { dealer } = navContentStore.state;\n      if (dealer.numberOfDealers <= 5) {\n        this.fetchAllDealersForMarket();\n      }\n    });\n  }\n\n  componentDidLoad(): void {\n    this.emitPageLoadEvent();\n  }\n\n  private async waitForComponentsToLoad() {\n    await componentsOnReady(this.el, new Timeout(5000));\n    this.removeSkeletonOnDealerSearchForm.emit();\n  }\n\n  private async fetchAllDealersForMarket() {\n    const { error: errorContent } = navContentStore.state;\n\n    try {\n      this.isLoading = true;\n\n      const { country } = splitLocale(this.locale);\n      const { env } = navStateStore.state;\n\n      const ppnDealerSearchResults = await getAllPPNDealersForMarket(\n        env,\n        getConfig(env).DEALER_API_URL_ALL_DEALERS,\n        country\n      );\n\n      dealerSearchResultsStore.state.results = ppnDealerSearchResults.map(({ ppnDealer: dealer }) => dealer.id);\n      dealerSearchResultsStore.state.ppnDealers = ppnDealerSearchResults.reduce(\n        (dealers, dealerSearchResult) => ({\n          ...dealers,\n          [dealerSearchResult.ppnDealer.id]: dealerSearchResult\n        }),\n        dealerSearchResultsStore.state.ppnDealers\n      );\n    } catch (err) {\n      logger.error('FETCH_DEALERS', err as Error);\n      this.formErrorMessage = getErrorMessage(errorContent, err as Error);\n    } finally {\n      this.isLoading = false;\n      this.emitResultsLoadEvent();\n    }\n  }\n\n  private emitPageLoadEvent() {\n    const { dealer } = navContentStore.state;\n\n    globalDataLayerService.pushDataLayerEvent(EventActions.DEALER_SEARCH_SCREEN_LOAD, {\n      componentDisplay: {\n        displayElementId: analyticsManager.calculateDisplayElementId(),\n        displayElementType: analyticsManager.calculateDisplayElementType('', ElementTypes.dealerSearchForm),\n        displayElementName: dealer.text\n      },\n      componentSearch: {\n        searchTerm: DEALER_MARKET_SEARCH_TERM,\n        numberOfResults: dealer.numberOfDealers\n      }\n    });\n  }\n\n  private emitResultsLoadEvent() {\n    const { dealer } = navContentStore.state;\n\n    globalDataLayerService.pushDataLayerEvent(EventActions.DEALER_RESULTS_SCREEN_LOAD, {\n      componentDisplay: {\n        displayElementId: analyticsManager.getDealerResultsLoadDisplayElementId(\n          DEALER_SEARCH_RESULT_DISPLAY_ELEMENT_ID_DOUBLE_DRAWER\n        ),\n        displayElementType: analyticsManager.getDealerResultsLoadDisplayElementType(),\n        displayElementName: dealer.text\n      },\n      componentSearch: {\n        searchTerm: DEALER_MARKET_SEARCH_TERM,\n        numberOfResults: dealer.numberOfDealers\n      }\n    });\n  }\n\n  private reset() {\n    this.formErrorMessage = null;\n    this.isLoading = false;\n    dealerSearchResultsStore.state.results = null;\n  }\n\n  render() {\n    if (this.isLoading) {\n      return (\n        <div class=\"spinner\">\n          <phn-p-spinner size=\"medium\" aria={{ 'aria-label': 'Loading page content' }} />\n        </div>\n      );\n    }\n\n    if (isString(this.formErrorMessage))\n      return <ErrorMessage errorMessage={this.formErrorMessage} onDismiss={() => this.reset()} />;\n  }\n}\n"]}