{"version":3,"file":"autocomplete-search-field.spec.js","sourceRoot":"","sources":["../../../../../src/components/autocomplete-search-field/test/autocomplete-search-field.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage, SpecPage } from '@stencil/core/testing';\nimport * as el from '../../../test/element-helpers';\nimport { mockPredictions } from '../../../test/test-data';\nimport { getHTMLElement } from '../../../utility/helper';\nimport { AutocompleteSearchField } from '../autocomplete-search-field';\nimport { dealerSearchResultsStore } from '../../../state/dealer-search-results-store';\n\ndescribe('autocomplete-search-field', () => {\n  let page: SpecPage;\n  let inputField: HTMLInputElement;\n\n  const defaultProps = {\n    placeholder: 'City or ZIP',\n    predictions: mockPredictions\n  };\n\n  beforeEach(async () => {\n    page = await newSpecPage({\n      components: [AutocompleteSearchField],\n      template: () => <phn-autocomplete-search-field {...defaultProps} />\n    });\n\n    inputField = page.doc.querySelector('input') as HTMLInputElement;\n  });\n\n  describe('snapshot testing', () => {\n    it('should render autocomplete input', async () => {\n      const page = await newSpecPage({\n        components: [AutocompleteSearchField],\n        template: () => <phn-autocomplete-search-field {...{ ...defaultProps, predictions: [] }} />\n      });\n\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-autocomplete-search-field>\n          <form class=\"form-container\">\n            <phn-p-text-field-wrapper data-test-id=\"dealer-search-form-input\" message=\"\" state=\"none\">\n              <input aria-autocomplete=\"list\" aria-controls=\"predictions\" aria-expanded=\"false\" aria-label=\"Find a dealer by typing a city name or zip code\" autocomplete=\"off\" class=\"autofocus\" data-validate=\"required\" placeholder=\"City or ZIP\" role=\"combobox\" type=\"search\" value=\"\">\n            </phn-p-text-field-wrapper>\n          </form>\n        </phn-autocomplete-search-field>\n      `);\n    });\n\n    it('should render autocomplete input with predictions', async () => {\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-autocomplete-search-field>\n          <form class=\"form-container\">\n            <phn-p-text-field-wrapper data-test-id=\"dealer-search-form-input\" message=\"\" state=\"none\">\n              <input aria-autocomplete=\"list\" aria-controls=\"predictions\" aria-expanded=\"false\" aria-label=\"Find a dealer by typing a city name or zip code\" autocomplete=\"off\" class=\"autofocus\" data-validate=\"required\" placeholder=\"City or ZIP\" role=\"combobox\" type=\"search\" value=\"\">\n            </phn-p-text-field-wrapper>\n          </form>\n        </phn-autocomplete-search-field>\n      `);\n    });\n  });\n\n  it('should show predictions when user starts typing in search field', async () => {\n    el.sendInput(inputField, 'Stu');\n\n    await page.waitForChanges();\n\n    expect(page.doc.querySelectorAll('li')).toHaveLength(3);\n  });\n\n  it('should not show predictions when search is submitted', async () => {\n    el.sendInput(inputField, 'Stu');\n\n    await page.waitForChanges();\n\n    expect(page.doc.querySelector('[data-test-id=\"dealer-search-autocomplete-predictions\"]')).not.toBeNull();\n    expect(page.doc.querySelectorAll('li')).toHaveLength(3);\n\n    el.submit(inputField);\n\n    await page.waitForChanges();\n\n    expect(page.doc.querySelector('[data-test-id=\"dealer-search-autocomplete-predictions\"]')).toBeNull();\n  });\n\n  it('should not show predictions after search is cleared', async () => {\n    el.sendInput(inputField, 'Stu');\n\n    await page.waitForChanges();\n\n    expect(page.doc.querySelector('[data-test-id=\"dealer-search-autocomplete-predictions\"]')).not.toBeNull();\n    expect(page.doc.querySelectorAll('li')).toHaveLength(3);\n\n    inputField.value = '';\n    inputField.dispatchEvent(new Event('input'));\n\n    await page.waitForChanges();\n\n    expect(page.doc.querySelector('[data-test-id=\"dealer-search-autocomplete-predictions\"]')).toBeNull();\n  });\n\n  it('should not show predictions after search is cleared', async () => {\n    dealerSearchResultsStore.state.savedDealerCookie = { id: '1', latitude: 0, longitude: 0 };\n    el.sendInput(inputField, 'Stu');\n\n    await page.waitForChanges();\n\n    inputField.value = '';\n    inputField.dispatchEvent(new Event('input'));\n\n    expect(dealerSearchResultsStore.state.savedDealerCookie).toBeNull();\n  });\n\n  it('should hide predictions on blur', async () => {\n    el.sendInput(inputField, 'Stu');\n\n    await page.waitForChanges();\n\n    expect(page.doc.querySelector('[data-test-id=\"dealer-search-autocomplete-predictions\"]')).not.toBeNull();\n    expect(page.doc.querySelectorAll('li')).toHaveLength(3);\n\n    page.root?.click();\n\n    await page.waitForChanges();\n\n    expect(page.doc.querySelector('[data-test-id=\"dealer-search-autocomplete-predictions\"]')).toBeNull();\n  });\n\n  it('should make predictions reappear when clicking on input with text', async () => {\n    el.sendInput(inputField, 'Stu');\n\n    await page.waitForChanges();\n\n    expect(page.doc.querySelector('[data-test-id=\"dealer-search-autocomplete-predictions\"]')).not.toBeNull();\n    expect(page.doc.querySelectorAll('li')).toHaveLength(3);\n\n    page.root?.click();\n\n    await page.waitForChanges();\n\n    expect(page.doc.querySelector('[data-test-id=\"dealer-search-autocomplete-predictions\"]')).toBeNull();\n\n    inputField.click();\n\n    await page.waitForChanges();\n\n    expect(page.doc.querySelector('[data-test-id=\"dealer-search-autocomplete-predictions\"]')).not.toBeNull();\n    expect(page.doc.querySelectorAll('li')).toHaveLength(3);\n  });\n\n  it('should choose the prediction that is being clicked on', async () => {\n    el.sendInput(inputField, 'Stu');\n\n    await page.waitForChanges();\n\n    expect(page.doc.querySelector('[data-test-id=\"dealer-search-autocomplete-predictions\"]')).not.toBeNull();\n    expect(page.doc.querySelectorAll('li')).toHaveLength(3);\n\n    getHTMLElement(\n      page.root?.querySelectorAll('[data-test-id=\"dealer-search-autocomplete-predictions\"] li')[1]\n    )?.click();\n\n    await page.waitForChanges();\n\n    expect(inputField.value).toEqual(mockPredictions[1].text);\n  });\n\n  it('should emit searchInput event when form is submitted', async () => {\n    const searchInputSpy = jest.spyOn(page.rootInstance.searchInput, 'emit');\n    const searchTerm = 'Stu';\n\n    el.sendInput(inputField, searchTerm);\n\n    await page.waitForChanges();\n\n    el.submit(inputField);\n\n    await page.waitForChanges();\n\n    expect(searchInputSpy).toBeCalledTimes(1);\n    expect(searchInputSpy).toBeCalledWith(searchTerm);\n  });\n\n  it('should emit searchInput event when user selects prediction', async () => {\n    const searchInputSpy = jest.spyOn(page.rootInstance.searchInput, 'emit');\n    const searchTerm = 'Stu';\n\n    el.sendInput(inputField, searchTerm);\n    await page.waitForChanges();\n\n    page.doc.querySelectorAll('li')[0].click();\n    await page.waitForChanges();\n\n    expect(searchInputSpy).toBeCalledTimes(1);\n    expect(searchInputSpy).toBeCalledWith(searchTerm);\n  });\n\n  it('should show powered by google logo when predictions are visible', async () => {\n    el.sendInput(inputField, 'Stu');\n\n    await page.waitForChanges();\n\n    expect(page.doc.querySelector('img')).not.toBeNull();\n    expect(page.root?.querySelector('img')?.getAttribute('src')).toBe(\n      'http://assets/url/icon-assets/powered_by_google_on_white.png'\n    );\n    expect(page.doc.querySelector('.powered-by-google')).not.toBeNull();\n  });\n\n  describe('Keyboard navigation', () => {\n    it('should highlight first prediction in dropdown on down arrow down after cycling through all predictions once', async () => {\n      el.sendInput(inputField, 'Stu');\n      await page.waitForChanges();\n\n      mockPredictions.forEach(async () => {\n        el.keyDown(inputField, 'ArrowDown');\n        await page.waitForChanges();\n      });\n\n      el.keyDown(inputField, 'ArrowDown');\n      await page.waitForChanges();\n\n      const firstPrediction = page.doc.querySelectorAll('li')[0];\n\n      expect(firstPrediction).toHaveClass('highlighted-prediction');\n      expect(inputField.value).toBe(mockPredictions[0].text);\n    });\n\n    it('should highlight second prediction in dropdown when pressing twice the arrow down key', async () => {\n      el.sendInput(inputField, 'Stu');\n\n      await page.waitForChanges();\n\n      el.keyDown(inputField, 'ArrowDown');\n      await page.waitForChanges();\n\n      el.keyDown(inputField, 'ArrowDown');\n      await page.waitForChanges();\n\n      const secondPrediction = page.doc.querySelectorAll('li')[1];\n\n      expect(secondPrediction).toHaveClass('highlighted-prediction');\n    });\n\n    it('should highlight first prediction in dropdown on up arrow down', async () => {\n      el.sendInput(inputField, 'Stu');\n\n      await page.waitForChanges();\n\n      el.keyDown(inputField, 'ArrowUp');\n      await page.waitForChanges();\n\n      const firstPrediction = page.doc.querySelectorAll('li')[0];\n\n      expect(firstPrediction).toHaveClass('highlighted-prediction');\n    });\n\n    it('should highlight pre-last prediction in dropdown on hitting the arrow up twice when the first prediction is highlighted', async () => {\n      el.sendInput(inputField, 'Stu');\n\n      await page.waitForChanges();\n\n      //Highlight the first element\n      el.keyDown(inputField, 'ArrowUp');\n      await page.waitForChanges();\n\n      //Highlight the last element\n      el.keyDown(inputField, 'ArrowUp');\n      await page.waitForChanges();\n\n      //Highlight the pre-last element\n      el.keyDown(inputField, 'ArrowUp');\n      await page.waitForChanges();\n\n      const predictions = page.doc.querySelectorAll('li');\n      const prelastPrediction = predictions[predictions.length - 2];\n\n      expect(prelastPrediction).toHaveClass('highlighted-prediction');\n    });\n\n    it('should not highlight a prediction when arrow down is pressed', async () => {\n      expect(page.root?.querySelector('.prediction-container')).toBeNull();\n\n      el.keyDown(inputField, 'ArrowDown');\n      await page.waitForChanges();\n\n      expect(page.root?.querySelector('.prediction-container')).toBeNull();\n      expect(page.root?.querySelector('.highlighted-prediction')).toBeNull();\n    });\n\n    it('should not highlight a prediction when arrow up is pressed', async () => {\n      expect(page.root?.querySelector('.prediction-container')).toBeNull();\n\n      el.keyDown(inputField, 'ArrowUp');\n      await page.waitForChanges();\n\n      expect(page.root?.querySelector('.prediction-container')).toBeNull();\n      expect(page.root?.querySelector('.highlighted-prediction')).toBeNull();\n    });\n\n    it('should not have a highlighted prediction if input field is cleared', async () => {\n      el.sendInput(inputField, 'Stu');\n      await page.waitForChanges();\n\n      el.keyDown(inputField, 'ArrowUp');\n      await page.waitForChanges();\n\n      el.sendInput(inputField, '');\n      await page.waitForChanges();\n\n      el.sendInput(inputField, 'Ber');\n      await page.waitForChanges();\n\n      expect(page.root?.querySelector('.highlighted-prediction')).toBeNull();\n    });\n\n    it('should hide predictions when Escape button is pressed', async () => {\n      el.sendInput(inputField, 'Stu');\n      await page.waitForChanges();\n\n      expect(page.root?.querySelector('.prediction-container')).not.toBeNull();\n\n      el.keyDown(inputField, 'Escape');\n      await page.waitForChanges();\n\n      expect(page.root?.querySelector('.prediction-container')).toBeNull();\n    });\n\n    it('should search predictions with the input text after selecting the second prediction and submitting form', async () => {\n      const dealerSearchSpy = jest.spyOn(page.rootInstance.searchInput, 'emit');\n      const searchTerm = 'Stu';\n\n      el.sendInput(inputField, searchTerm);\n      await page.waitForChanges();\n\n      el.keyDown(inputField, 'ArrowDown');\n      await page.waitForChanges();\n\n      el.keyDown(inputField, 'ArrowDown');\n      await page.waitForChanges();\n\n      el.submit(inputField);\n\n      await page.waitForChanges();\n\n      expect(dealerSearchSpy).toBeCalledTimes(1);\n      expect(dealerSearchSpy).toBeCalledWith(searchTerm);\n    });\n  });\n});\n"]}