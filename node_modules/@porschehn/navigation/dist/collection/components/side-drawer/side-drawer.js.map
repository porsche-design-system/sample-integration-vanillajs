{"version":3,"file":"side-drawer.js","sourceRoot":"","sources":["../../../../src/components/side-drawer/side-drawer.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAClF,OAAO,EAAE,kBAAkB,EAAE,MAAM,mCAAmC,CAAC;AACvE,OAAO,EAAE,wBAAwB,EAAE,MAAM,yCAAyC,CAAC;AACnF,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAChE,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAC5D,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAO7D,MAAM,OAAO,UAAU;;;;;EAKrB,MAAM;IACJ,MAAM,EAAE,aAAa,EAAE,mBAAmB,EAAE,WAAW,EAAE,GAAG,aAAa,CAAC,KAAK,CAAC;IAEhF,MAAM,eAAe,GAAG,kBAAkB,CACxC,eAAe,CAAC,KAAK,EACrB,wBAAwB,CAAC,KAAK,EAC9B,IAAI,CAAC,MAAM,EACX,aAAa,EACb,mBAAmB,EACnB,IAAI,CAAC,gBAAgB,EACrB,WAAW,CACZ,CAAC;IAEF,OAAO,CACL,eACG,eAAe,CAAC,GAAG,CAAC,CAAC,EAAkC,EAAE,EAAE;UAAtC,EAAE,WAAW,OAAqB,EAAhB,cAAc,cAAhC,eAAkC,CAAF;MACpD,MAAM,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;MAE7D,OAAO,CACL,EAAC,QAAQ;QACP,0CACE,GAAG,EAAE,cAAc,CAAC,SAAS,EAC7B,OAAO,EAAE,GAAG,EAAE;YACZ,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;cAC/C,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAC5C;UACH,CAAC,EACD,QAAQ,EAAE,QAAQ,EAClB,KAAK,EAAE,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IACnD,cAAc,EAClB;QACD,QAAQ,CAAC,CAAC,CAAC,WAAK,KAAK,EAAE,gBAAgB,GAAI,CAAC,CAAC,CAAC,IAAI,CAC1C,CACZ,CAAC;IACJ,CAAC,CAAC,CACE,CACP,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Event, EventEmitter, Fragment, h, Prop } from '@stencil/core';\nimport { getSideDrawerItems } from '../../services/menu-items-service';\nimport { dealerSearchResultsStore } from '../../state/dealer-search-results-store';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { navStateStore } from '../../state/nav-state-store';\nimport { isModelName, isString } from '../../utility/helper';\n\n@Component({\n  tag: 'phn-side-drawer',\n  styleUrl: 'side-drawer.scss',\n  scoped: true\n})\nexport class SideDrawer {\n  @Prop() activeRoutingKey!: string;\n  @Prop() locale!: string;\n  @Event() sideDrawerItemClick!: EventEmitter<string[]>;\n\n  render(): HTMLPhnSideDrawerElement {\n    const { loggedInState, unreadMessagesCount, userConsent } = navStateStore.state;\n\n    const sideDrawerItems = getSideDrawerItems(\n      navContentStore.state,\n      dealerSearchResultsStore.state,\n      this.locale,\n      loggedInState,\n      unreadMessagesCount,\n      this.activeRoutingKey,\n      userConsent\n    );\n\n    return (\n      <nav>\n        {sideDrawerItems.map(({ routingKeys, ...sideDrawerItem }) => {\n          const isActive = routingKeys.includes(this.activeRoutingKey);\n\n          return (\n            <Fragment>\n              <phn-side-drawer-item\n                key={sideDrawerItem.elementId}\n                onClick={() => {\n                  if (!isString(sideDrawerItem.link) && !isActive) {\n                    this.sideDrawerItemClick.emit(routingKeys);\n                  }\n                }}\n                isActive={isActive}\n                class={isModelName(sideDrawerItem.text) ? 'models' : ''}\n                {...sideDrawerItem}\n              />\n              {isActive ? <div class={`item-highlight`} /> : null}\n            </Fragment>\n          );\n        })}\n      </nav>\n    );\n  }\n}\n"]}