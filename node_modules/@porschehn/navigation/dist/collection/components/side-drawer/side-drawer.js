var __rest = (this && this.__rest) || function (s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
import { Fragment, h } from "@stencil/core";
import { getSideDrawerItems } from "../../services/menu-items-service";
import { dealerSearchResultsStore } from "../../state/dealer-search-results-store";
import { navContentStore } from "../../state/nav-content-store";
import { navStateStore } from "../../state/nav-state-store";
import { isModelName, isString } from "../../utility/helper";
export class SideDrawer {
  constructor() {
    this.activeRoutingKey = undefined;
    this.locale = undefined;
  }
  render() {
    const { loggedInState, unreadMessagesCount, userConsent } = navStateStore.state;
    const sideDrawerItems = getSideDrawerItems(navContentStore.state, dealerSearchResultsStore.state, this.locale, loggedInState, unreadMessagesCount, this.activeRoutingKey, userConsent);
    return (h("nav", null, sideDrawerItems.map((_a) => {
      var { routingKeys } = _a, sideDrawerItem = __rest(_a, ["routingKeys"]);
      const isActive = routingKeys.includes(this.activeRoutingKey);
      return (h(Fragment, null, h("phn-side-drawer-item", Object.assign({ key: sideDrawerItem.elementId, onClick: () => {
          if (!isString(sideDrawerItem.link) && !isActive) {
            this.sideDrawerItemClick.emit(routingKeys);
          }
        }, isActive: isActive, class: isModelName(sideDrawerItem.text) ? 'models' : '' }, sideDrawerItem)), isActive ? h("div", { class: `item-highlight` }) : null));
    })));
  }
  static get is() { return "phn-side-drawer"; }
  static get encapsulation() { return "scoped"; }
  static get originalStyleUrls() {
    return {
      "$": ["side-drawer.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["side-drawer.css"]
    };
  }
  static get properties() {
    return {
      "activeRoutingKey": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "active-routing-key",
        "reflect": false
      },
      "locale": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "locale",
        "reflect": false
      }
    };
  }
  static get events() {
    return [{
        "method": "sideDrawerItemClick",
        "name": "sideDrawerItemClick",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "string[]",
          "resolved": "string[]",
          "references": {}
        }
      }];
  }
}
//# sourceMappingURL=side-drawer.js.map
