{"version":3,"file":"double-drawer.spec.js","sourceRoot":"","sources":["../../../../../src/components/double-drawer/test/double-drawer.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { breakpoint } from '@porsche-design-system/components-js/styles';\nimport { h } from '@stencil/core';\nimport { newSpecPage, SpecPage } from '@stencil/core/testing';\nimport {\n  constructRoutingKey,\n  getDealerDetailsRoutingKey,\n  getModelsRoutingKey,\n  getSeriesRoutingKey,\n  RoutingKeys\n} from '../../../entities/routing-key';\nimport globalDataLayerService from '../../../services/analytics/global-data-layer-service';\nimport animationManager from '../../../services/animations/animation-manager';\nimport { navContentStore } from '../../../state/nav-content-store';\nimport { routerStore } from '../../../state/router-store';\nimport * as el from '../../../test/element-helpers';\nimport {\n  mockDealerContent,\n  mockModelsContent,\n  mockMoreContent,\n  mockPPNDealer,\n  mockShopContent\n} from '../../../test/test-data';\nimport { AnimationSequences, ClickElementTypes, EventActions } from '../../../utility/constants';\nimport { DrawerStatusValues } from '../../../utility/constants/app';\nimport * as helper from '../../../utility/helper';\nimport { getHTMLElement } from '../../../utility/helper';\nimport { AutocompleteSearchField } from '../../autocomplete-search-field/autocomplete-search-field';\nimport { Backdrop } from '../../backdrop/backdrop';\nimport { DealerSearchForm } from '../../dealer-search-form/dealer-search-form';\nimport { Level1 } from '../../level-1/level-1';\nimport { MenuItem } from '../../menu-item/menu-item';\nimport { Menu } from '../../menu/menu';\nimport { Models } from '../../models/models';\nimport { Router } from '../../router/router';\nimport { SideDrawerItem } from '../../side-drawer-item/side-drawer-item';\nimport { SideDrawer } from '../../side-drawer/side-drawer';\nimport { DoubleDrawer } from '../double-drawer';\nimport { DealerSearchFormGeolocation } from '../../dealer-search-form-geolocation/dealer-search-form-geolocation';\n\ndescribe('double-drawer', () => {\n  let defaultProps = {\n    breakpoint: 0,\n    locale: 'xx-XX',\n    routingKeyHistory: [RoutingKeys.MAIN_MENU, RoutingKeys.MODELS],\n    routingKeyPointer: 1,\n    receivedContent: true\n  };\n\n  describe('snapshot tests', () => {\n    let page: SpecPage;\n\n    beforeEach(async () => {\n      page = await newSpecPage({\n        components: [DoubleDrawer],\n        template: () => <phn-double-drawer {...defaultProps} />\n      });\n      if (page.root) animationManager.initialize(page.root);\n    });\n\n    it('renders both drawer contents', async () => {\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-double-drawer aria-label=\"navigation modal dialog\" aria-modal=\"true\" role=\"dialog\">\n          <phn-p-button aria=\"{ 'aria-label': 'close modal dialog' }\" class=\"close-button\" data-test-id=\"close-button\" hide-label=\"true\" icon=\"close\" theme=\"dark\" variant=\"secondary\"></phn-p-button>\n          <div class=\"drawer\" id=\"side-drawer\">\n            <div class=\"drawer-content\">\n              <span aria-hidden=\"true\" class=\"first-focus\" tabindex=\"-1\"></span>\n              <div class=\"side-drawer-header\"></div>\n              <phn-side-drawer activeroutingkey=\"models\" locale=\"xx-XX\"></phn-side-drawer>\n            </div>\n          </div>\n          <div class=\"drawer\" id=\"main-drawer\">\n            <div class=\"drawer-content\">\n              <div class=\"main-drawer-header\"></div>\n              <phn-router activeroutingkey=\"models\" breakpoint=\"0\" locale=\"xx-XX\" receivedcontent=\"\"></phn-router>\n            </div>\n            <div class=\"bottom-gradient\"></div>\n          </div>\n        </phn-double-drawer>\n      `);\n    });\n\n    it('should render correct content in side and main drawer when clicking on an item inside of more', async () => {\n      // note that the line below will NOT actually apply the animation and run before and after cleanups for the double-drawer or backdrop.\n      // however, it will run their onStart and onEnd callbacks. all other double drawer animations are also not affected (as long as the element is rendered in the dom)\n      // this is because querySelector is not able to find the element it is being called on (or any of its parents for that matter).\n      // in this case that drawback is intentionally accepted. however, this should be kept in mind for any future tests.\n      await animationManager.play(AnimationSequences.OPEN_DOUBLE_DRAWER);\n      await page.waitForChanges();\n\n      // given\n      if (page.root !== undefined) {\n        page.root.routingKeyHistory = [RoutingKeys.MAIN_MENU, RoutingKeys.MORE, getSeriesRoutingKey('mainmenu.911')];\n        page.root.routingKeyPointer = 2;\n      }\n\n      await page.waitForChanges();\n\n      if (animationManager.isPlaying(AnimationSequences.TRANSITION_NEXT_LEVEL_DOUBLE_DRAWER))\n        await animationManager.play(AnimationSequences.TRANSITION_NEXT_LEVEL_DOUBLE_DRAWER);\n\n      await page.waitForChanges();\n\n      // then\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-double-drawer aria-label=\"navigation modal dialog\" aria-modal=\"true\" role=\"dialog\">\n          <phn-p-button aria=\"{ 'aria-label': 'close modal dialog' }\" class=\"close-button\" data-test-id=\"close-button\" hide-label=\"true\" icon=\"close\" theme=\"dark\" variant=\"secondary\"></phn-p-button>\n          <div class=\"drawer\" id=\"side-drawer\">\n            <div class=\"drawer-content\">\n              <span aria-hidden=\"true\" class=\"first-focus\" tabindex=\"-1\"></span>\n              <div class=\"side-drawer-header\"></div>\n              <phn-side-drawer activeroutingkey=\"series/mainmenu.911\" locale=\"xx-XX\"></phn-side-drawer>\n            </div>\n          </div>\n          <div class=\"drawer\" id=\"main-drawer\">\n            <div class=\"drawer-content\">\n              <div class=\"main-drawer-header\"></div>\n              <phn-router activeroutingkey=\"series/mainmenu.911\" breakpoint=\"0\" locale=\"xx-XX\" receivedcontent=\"\"></phn-router>\n            </div>\n            <div class=\"bottom-gradient\"></div>\n          </div>\n        </phn-double-drawer>\n      `);\n    });\n\n    it('should move backwards from 911 to models when back button is clicked', async () => {\n      const page = await newSpecPage({\n        components: [DoubleDrawer],\n        template: () => (\n          <phn-double-drawer\n            {...defaultProps}\n            routingKeyPointer={2}\n            routingKeyHistory={[RoutingKeys.MAIN_MENU, RoutingKeys.MODELS, getSeriesRoutingKey('mainmenu.911')]}\n          />\n        )\n      });\n\n      if (page.root) animationManager.initialize(page.root);\n\n      await animationManager.play('openDoubleDrawer');\n      await page.waitForChanges();\n\n      if (page.root !== undefined) {\n        page.rootInstance.goBackToPreviousMenu();\n\n        page.root.routingKeyPointer = 1;\n      }\n\n      await page.waitForChanges();\n\n      // then\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-double-drawer aria-label=\"navigation modal dialog\" aria-modal=\"true\" role=\"dialog\">\n          <phn-p-button aria=\"{ 'aria-label': 'close modal dialog' }\" class=\"close-button\" data-test-id=\"close-button\" hide-label=\"true\" icon=\"close\" theme=\"dark\" variant=\"secondary\"></phn-p-button>\n          <div class=\"drawer\" id=\"side-drawer\">\n            <div class=\"drawer-content\">\n              <span aria-hidden=\"true\" class=\"first-focus\" tabindex=\"-1\"></span>\n              <div class=\"side-drawer-header\"></div>\n              <phn-side-drawer activeroutingkey=\"models\" locale=\"xx-XX\"></phn-side-drawer>\n            </div>\n          </div>\n          <div class=\"drawer\" id=\"main-drawer\">\n            <div class=\"drawer-content\">\n              <div class=\"main-drawer-header\"></div>\n              <phn-router activeroutingkey=\"models\" breakpoint=\"0\" locale=\"xx-XX\" receivedcontent=\"\"></phn-router>\n            </div>\n            <div class=\"bottom-gradient\"></div>\n          </div>\n        </phn-double-drawer>\n      `);\n    });\n\n    it('should return empty if routingHistory is empty', async () => {\n      const page = await newSpecPage({\n        components: [DoubleDrawer],\n        template: () => <phn-double-drawer {...defaultProps} routingKeyHistory={[]} routingKeyPointer={-1} />\n      });\n      if (page.root) animationManager.initialize(page.root);\n\n      expect(page.root).toMatchInlineSnapshot(`\n        <phn-double-drawer aria-label=\"navigation modal dialog\" aria-modal=\"true\" role=\"dialog\">\n          <phn-p-button aria=\"{ 'aria-label': 'close modal dialog' }\" class=\"close-button\" data-test-id=\"close-button\" hide-label=\"true\" icon=\"close\" theme=\"dark\" variant=\"secondary\"></phn-p-button>\n        </phn-double-drawer>\n      `);\n    });\n  });\n\n  describe('keyboard navigation', () => {\n    let page: SpecPage;\n\n    let sideDrawer: HTMLElement | null;\n    let mainDrawer: HTMLElement | null;\n\n    beforeEach(async () => {\n      navContentStore.state.legacyMore = mockMoreContent;\n      navContentStore.state.legacyShop = mockShopContent;\n      navContentStore.state.shop = mockShopContent;\n      navContentStore.state.models = mockModelsContent;\n\n      page = await newSpecPage({\n        components: [DoubleDrawer, Router, SideDrawer, Level1, Models, Menu, MenuItem, SideDrawerItem],\n        template: () => <phn-double-drawer {...defaultProps} />\n      });\n      if (page.root) animationManager.initialize(page.root);\n\n      sideDrawer = getHTMLElement(page.root?.querySelector('#side-drawer'));\n      mainDrawer = getHTMLElement(page.root?.querySelector('#main-drawer'));\n    });\n\n    it('should focus on first main-drawer item when tabbing on the active side-drawer item', () => {\n      const firstFocusableMainDrawerElement = el.getFirstFocusable(mainDrawer);\n      const activeFocusableSideDrawerElement = el.getFocusableByDataId(sideDrawer, RoutingKeys.MODELS);\n\n      el.tabKeyDown(activeFocusableSideDrawerElement);\n\n      expect(helper.focusOnElement).toBeCalledTimes(1);\n      expect(helper.focusOnElement).toBeCalledWith(firstFocusableMainDrawerElement);\n    });\n\n    it('should focus on next side-drawer item after tabbing on last main-drawer item', () => {\n      const lastFocusableMainDrawerElement = el.getLastFocusable(mainDrawer);\n      const focusableSideDrawerElements = el.getAllFocusables(sideDrawer);\n\n      el.tabKeyDown(lastFocusableMainDrawerElement);\n\n      expect(helper.focusOnElement).toBeCalledTimes(1);\n      if (focusableSideDrawerElements !== null) {\n        expect(helper.focusOnElement).toBeCalledWith(focusableSideDrawerElements[1]);\n      }\n    });\n\n    it('should focus on close button after tabbing on last side-drawer item', () => {\n      const lastFocusableSideDrawerElement = el.getLastFocusable(sideDrawer);\n      const closeButton = getHTMLElement(page.root?.querySelector('.close-button'));\n\n      el.tabKeyDown(lastFocusableSideDrawerElement);\n\n      expect(helper.focusOnElement).toBeCalledTimes(1);\n      expect(helper.focusOnElement).toBeCalledWith(closeButton);\n    });\n\n    it('should focus on first side-drawer item after tabbing on close-button', () => {\n      const firstFocusableSideDrawerElement = el.getFirstFocusable(sideDrawer);\n      const closeButton = getHTMLElement(page.root?.querySelector('.close-button'));\n\n      el.tabKeyDown(closeButton);\n\n      expect(helper.focusOnElement).toBeCalledTimes(1);\n      expect(helper.focusOnElement).toBeCalledWith(firstFocusableSideDrawerElement);\n    });\n\n    it('should focus on last side-drawer item after shift tabbing on close-button', () => {\n      const lastFocusableSideDrawerElement = el.getLastFocusable(sideDrawer);\n      const closeButton = getHTMLElement(page.root?.querySelector('.close-button'));\n\n      el.tabKeyDown(closeButton, true);\n      expect(helper.focusOnElement).toBeCalledTimes(1);\n      expect(helper.focusOnElement).toBeCalledWith(lastFocusableSideDrawerElement);\n    });\n\n    it('should focus on active side-drawer item when shift tabbing on the first main-drawer item', () => {\n      const firstFocusableMainDrawerElement = el.getFirstFocusable(mainDrawer);\n      const activeFocusableSideDrawerElement = el.getFocusableByDataId(sideDrawer, RoutingKeys.MODELS);\n\n      el.tabKeyDown(firstFocusableMainDrawerElement, true);\n\n      expect(helper.focusOnElement).toBeCalledTimes(1);\n      expect(helper.focusOnElement).toBeCalledWith(activeFocusableSideDrawerElement);\n    });\n\n    it('should focus on first side-drawer item when last side-drawer item is active and tabbing on last main-drawer item', async () => {\n      const page = await newSpecPage({\n        components: [DoubleDrawer, Router, Level1, Menu, MenuItem, SideDrawer, SideDrawerItem],\n        template: () => (\n          <phn-double-drawer {...defaultProps} routingKeyHistory={[RoutingKeys.MAIN_MENU, RoutingKeys.MORE]} />\n        )\n      });\n      if (page.root) animationManager.initialize(page.root);\n\n      const sideDrawer = getHTMLElement(page.root?.querySelector('#side-drawer'));\n      const mainDrawer = getHTMLElement(page.root?.querySelector('#main-drawer'));\n\n      const firstFocusableSideDrawerElement = el.getFirstFocusable(sideDrawer);\n      const lastFocusableMainDrawerElement = el.getLastFocusable(mainDrawer);\n\n      el.tabKeyDown(lastFocusableMainDrawerElement);\n\n      expect(helper.focusOnElement).toBeCalledTimes(1);\n      expect(helper.focusOnElement).toBeCalledWith(firstFocusableSideDrawerElement);\n    });\n\n    it('should focus on first main-drawer item when tabbing on the active find-a-dealer side-drawer item', async () => {\n      navContentStore.state.dealer = mockDealerContent;\n\n      const page = await newSpecPage({\n        components: [\n          DoubleDrawer,\n          Router,\n          Level1,\n          Menu,\n          MenuItem,\n          DealerSearchForm,\n          AutocompleteSearchField,\n          SideDrawer,\n          SideDrawerItem,\n          DealerSearchFormGeolocation\n        ],\n        template: () => (\n          <phn-double-drawer {...defaultProps} routingKeyHistory={[RoutingKeys.MAIN_MENU, RoutingKeys.DEALER_SEARCH]} />\n        )\n      });\n      const sideDrawer = getHTMLElement(page.root?.querySelector('#side-drawer'));\n      const mainDrawer = getHTMLElement(page.root?.querySelector('#main-drawer'));\n\n      const firstFocusableMainDrawerElement = el.getFirstFocusable(mainDrawer);\n      const activeFocusableSideDrawerElement = el.getFocusableByDataId(sideDrawer, RoutingKeys.DEALER_SEARCH);\n\n      el.tabKeyDown(activeFocusableSideDrawerElement);\n\n      expect(helper.focusOnElement).toBeCalledTimes(1);\n      expect(helper.focusOnElement).toBeCalledWith(firstFocusableMainDrawerElement);\n    });\n\n    it('should do nothing if any key but tab is pressed', () => {\n      el.keyDown(getHTMLElement(page.root), 'escape');\n\n      expect(helper.focusOnElement).toBeCalledTimes(0);\n    });\n  });\n\n  describe('close button', () => {\n    it('should emit clickDrawerHeaderClose event when close button is clicked', async () => {\n      const page = await newSpecPage({\n        components: [DoubleDrawer],\n        template: () => <phn-double-drawer {...defaultProps} />\n      });\n      if (page.root) animationManager.initialize(page.root);\n\n      const closeEventSpy = jest.spyOn(page.rootInstance.clickDrawerHeaderClose, 'emit');\n\n      const closeButton = getHTMLElement(page.root?.querySelector('.close-button'));\n      closeButton?.click();\n\n      expect(closeEventSpy).toBeCalledTimes(1);\n    });\n  });\n\n  describe('back button', () => {\n    const mockMenuButton = {\n      id: 'menuId',\n      text: 'Menu',\n      description: 'Menu'\n    };\n\n    it('renders back button for nested models level', async () => {\n      navContentStore.state.models = mockModelsContent;\n      navContentStore.state.menu = mockMenuButton;\n\n      const page = await newSpecPage({\n        components: [DoubleDrawer],\n        template: () => (\n          <phn-double-drawer\n            {...defaultProps}\n            routingKeyHistory={[\n              RoutingKeys.MAIN_MENU,\n              constructRoutingKey(RoutingKeys.MODELS),\n              constructRoutingKey(RoutingKeys.MODELS, getModelsRoutingKey(navContentStore.state.models.series[0].id))\n            ]}\n            routingKeyPointer={2}\n          />\n        )\n      });\n      if (page.root) animationManager.initialize(page.root);\n\n      expect(page.root?.querySelector('phn-back-button')).toMatchInlineSnapshot(`\n        <phn-back-button\n          activeroutingkey=\"models/models/mainmenu.718\"\n          analyticsid=\"menuId\"\n          class=\"back-button\"\n          text=\"Models\"\n        />\n      `);\n    });\n\n    it('renders no back button for broken child id', async () => {\n      navContentStore.state.shop = mockShopContent;\n\n      const page = await newSpecPage({\n        components: [DoubleDrawer],\n        template: () => (\n          <phn-double-drawer\n            {...defaultProps}\n            routingKeyHistory={[\n              RoutingKeys.MAIN_MENU,\n              constructRoutingKey(RoutingKeys.SHOP),\n              constructRoutingKey(RoutingKeys.SHOP, 'broken-id'),\n              constructRoutingKey(RoutingKeys.SHOP, 'broken-id', 'other-broken-id')\n            ]}\n            routingKeyPointer={3}\n          />\n        )\n      });\n      if (page.root) animationManager.initialize(page.root);\n\n      expect(page.root?.querySelector('phn-back-button')).toBeNull();\n    });\n\n    it('should not render back button in side-drawer if user goes from dealers detail page to shop', async () => {\n      navContentStore.state.shop = mockShopContent;\n      navContentStore.state.menu = mockMenuButton;\n\n      const page = await newSpecPage({\n        components: [DoubleDrawer],\n        template: () => (\n          <phn-double-drawer\n            {...defaultProps}\n            routingKeyHistory={[\n              RoutingKeys.MAIN_MENU,\n              RoutingKeys.DEALER_SEARCH,\n              constructRoutingKey(RoutingKeys.SHOP)\n            ]}\n            routingKeyPointer={2}\n          />\n        )\n      });\n      if (page.root) animationManager.initialize(page.root);\n\n      expect(page.root?.querySelector('phn-back-button')).toBeNull();\n    });\n\n    it('renders back button in main drawer for dealer-details-page', async () => {\n      navContentStore.state.dealer = mockDealerContent;\n\n      const page = await newSpecPage({\n        components: [DoubleDrawer],\n        template: () => (\n          <phn-double-drawer\n            {...defaultProps}\n            routingKeyHistory={[\n              RoutingKeys.MAIN_MENU,\n              RoutingKeys.DEALER_SEARCH,\n              getDealerDetailsRoutingKey(mockPPNDealer.id)\n            ]}\n            routingKeyPointer={2}\n          />\n        )\n      });\n      if (page.root) animationManager.initialize(page.root);\n\n      const clickDrawerHeaderBackSpy = jest.spyOn(page.rootInstance.clickDrawerHeaderBack, 'emit');\n\n      getHTMLElement(page.root?.querySelector('phn-back-button'))?.click();\n\n      expect(clickDrawerHeaderBackSpy).toHaveBeenCalled();\n    });\n  });\n\n  describe('animations', () => {\n    let page: SpecPage;\n\n    beforeEach(async () => {\n      page = await newSpecPage({\n        components: [DoubleDrawer, Backdrop],\n        template: () => <phn-double-drawer {...defaultProps} />\n      });\n      if (page.root) animationManager.initialize(page.root);\n    });\n\n    it('should call focusOnElement with .first-focus when animations are complete if no focusable main-drawer elements', async () => {\n      const page = await newSpecPage({\n        components: [DoubleDrawer, Router, Level1],\n        template: () => <phn-double-drawer {...defaultProps} />\n      });\n      if (page.root) animationManager.initialize(page.root);\n      await animationManager.play('openDoubleDrawer');\n\n      expect(helper.focusOnElement).toBeCalledTimes(1);\n      expect(helper.focusOnElement).toBeCalledWith(getHTMLElement(page.root?.querySelector('.first-focus')));\n    });\n\n    it('should focus on input field element after animations are complete when going to a main drawer with dealer-search', async () => {\n      navContentStore.state.dealer = mockDealerContent;\n\n      const page = await newSpecPage({\n        components: [\n          DoubleDrawer,\n          Router,\n          Level1,\n          Menu,\n          MenuItem,\n          DealerSearchForm,\n          AutocompleteSearchField,\n          SideDrawer,\n          SideDrawerItem,\n          DealerSearchFormGeolocation\n        ],\n        template: () => (\n          <phn-double-drawer {...defaultProps} routingKeyHistory={[RoutingKeys.MAIN_MENU, RoutingKeys.DEALER_SEARCH]} />\n        )\n      });\n      if (page.root) animationManager.initialize(page.root);\n\n      const mainDrawer = getHTMLElement(page.root?.querySelector('#main-drawer'));\n\n      await animationManager.play('openDoubleDrawer');\n\n      const autoFocusElement = getHTMLElement(mainDrawer?.querySelector('.autofocus'));\n\n      expect(helper.focusOnElement).toBeCalledTimes(1);\n      expect(helper.focusOnElement).toBeCalledWith(autoFocusElement);\n    });\n\n    it('should focus on active sidedrawer item after animations are complete when rendering the double-drawer with the keyboard', async () => {\n      const page = await newSpecPage({\n        components: [DoubleDrawer, Router, Level1, Menu, MenuItem, SideDrawer, SideDrawerItem],\n        template: () => <phn-double-drawer {...defaultProps} initialUsingKeyboard={true} />\n      });\n      if (page.root) animationManager.initialize(page.root);\n\n      const sideDrawer = getHTMLElement(page.root?.querySelector('#side-drawer'));\n\n      await animationManager.play('openDoubleDrawer');\n\n      expect(helper.focusOnElement).toBeCalledTimes(1);\n      expect(helper.focusOnElement).toBeCalledWith(el.getFocusableByDataId(sideDrawer, RoutingKeys.MODELS));\n    });\n\n    it('should focus on previous main drawer item after animations are complete when rendering the double-drawer after navigating back with the keyboard', async () => {\n      navContentStore.state.shop = mockShopContent;\n\n      const accessoriesRoutingKey = 'shop/mainmenu.services.accessories';\n\n      const page = await newSpecPage({\n        components: [DoubleDrawer, Router, Level1, Menu, MenuItem, SideDrawer, SideDrawerItem],\n        template: () => (\n          <phn-double-drawer\n            {...defaultProps}\n            initialUsingKeyboard={true}\n            routingKeyHistory={[RoutingKeys.MAIN_MENU, RoutingKeys.SHOP, accessoriesRoutingKey]}\n          />\n        )\n      });\n      if (page.root) animationManager.initialize(page.root);\n\n      const mainDrawer = getHTMLElement(page.root?.querySelector('#main-drawer'));\n      const accessoriesMenuItem = el.getFocusableByDataId(mainDrawer, accessoriesRoutingKey);\n\n      await animationManager.play('openDoubleDrawer');\n\n      expect(helper.focusOnElement).toBeCalledTimes(1);\n      expect(helper.focusOnElement).toBeCalledWith(accessoriesMenuItem);\n    });\n\n    it('Should animate Side Drawer and Main Drawer when click on Main Drawer Links', async () => {\n      if (page.root !== undefined) {\n        page.root.routingKeyHistory = [\n          RoutingKeys.MAIN_MENU,\n          RoutingKeys.MORE,\n          constructRoutingKey(RoutingKeys.MORE, 'mainmenu.services')\n        ];\n        page.root.routingKeyPointer = 2;\n      }\n\n      expect(animationManager.play).toBeCalledWith(AnimationSequences.TRANSITION_NEXT_LEVEL_DOUBLE_DRAWER);\n    });\n\n    it('Should animate Main Drawer when clicking on Side Drawer Links', async () => {\n      if (page.root !== undefined) {\n        page.root.routingKeyHistory = [RoutingKeys.MAIN_MENU, RoutingKeys.MORE];\n      }\n\n      await page.waitForChanges();\n\n      expect(animationManager.play).toBeCalledWith(AnimationSequences.TRANSITION_SAME_LEVEL_DOUBLE_DRAWER);\n    });\n\n    it('Should intercept and cancel mobileMenuItemClick event while next level double drawer transition is playing', async () => {\n      const testEvent = new CustomEvent('mobileMenuItemClick');\n      const stopPropagationSpy = jest.spyOn(testEvent, 'stopPropagation');\n      const promise = animationManager.play('transitionNextLevelDoubleDrawer');\n\n      page.rootInstance.handleMobileMenuItemClick(testEvent);\n      await promise;\n\n      expect(stopPropagationSpy).toHaveBeenCalledTimes(1);\n    });\n\n    it('Should intercept and cancel sideDrawerItemClick event while same level double drawer transition is playing', async () => {\n      const testEvent = new CustomEvent('sideDrawerItemClick');\n      const stopPropagationSpy = jest.spyOn(testEvent, 'stopPropagation');\n      const promise = animationManager.play('transitionSameLevelDoubleDrawer');\n\n      page.rootInstance.handleSideDrawerItemClick(testEvent);\n      await promise;\n\n      expect(stopPropagationSpy).toHaveBeenCalledTimes(1);\n    });\n\n    it('Should play samelevel animation when navigating through dealer Search', async () => {\n      const animationPlayMock = jest.spyOn(animationManager, 'play');\n\n      if (page.root !== undefined) {\n        page.root.routingKeyHistory = [\n          RoutingKeys.MAIN_MENU,\n          RoutingKeys.DEALER_SEARCH,\n          getDealerDetailsRoutingKey(mockPPNDealer.id)\n        ];\n        page.root.routingKeyPointer = 1;\n      }\n\n      await page.waitForChanges();\n\n      page.rootInstance.watchRoutingKeyPointer(2, 1);\n\n      expect(animationPlayMock).toHaveBeenCalledTimes(1);\n      expect(animationPlayMock).toHaveBeenCalledWith('transitionSameLevelDoubleDrawer');\n    });\n\n    describe('phnDrawerStatus event', () => {\n      let page: SpecPage;\n\n      beforeEach(async () => {\n        page = await newSpecPage({\n          components: [DoubleDrawer, Backdrop],\n          template: () => <phn-double-drawer {...defaultProps} />\n        });\n        if (page.root) animationManager.initialize(page.root);\n      });\n\n      it('should dispatch phnDrawerStatus event with correct status when double drawer starts opening', async () => {\n        const phnDrawerStatusEvent = jest.spyOn(page.rootInstance.phnDrawerStatus, 'emit');\n\n        await animationManager.play(AnimationSequences.OPEN_DOUBLE_DRAWER);\n\n        expect(phnDrawerStatusEvent).toHaveBeenCalled();\n        expect(phnDrawerStatusEvent).toHaveBeenCalledWith({ status: DrawerStatusValues.startOpening });\n      });\n\n      it('should dispatch phnDrawerStatus event with correct status when double drawer finishes opening', async () => {\n        const phnDrawerStatusEvent = jest.spyOn(page.rootInstance.phnDrawerStatus, 'emit');\n\n        await animationManager.play(AnimationSequences.OPEN_DOUBLE_DRAWER);\n\n        expect(phnDrawerStatusEvent).toHaveBeenCalled();\n        expect(phnDrawerStatusEvent).toHaveBeenCalledWith({ status: DrawerStatusValues.finishOpening });\n      });\n\n      it('should dispatch phnDrawerStatus event with correct status when double drawer starts closing', async () => {\n        const phnDrawerStatusEvent = jest.spyOn(page.rootInstance.phnDrawerStatus, 'emit');\n\n        await animationManager.play(AnimationSequences.CLOSE_DOUBLE_DRAWER);\n\n        expect(phnDrawerStatusEvent).toHaveBeenCalled();\n        expect(phnDrawerStatusEvent).toHaveBeenCalledWith({ status: DrawerStatusValues.startClosing });\n      });\n\n      it('should dispatch phnDrawerStatus event with correct status when double drawer finishes closing', async () => {\n        const phnDrawerStatusEvent = jest.spyOn(page.rootInstance.phnDrawerStatus, 'emit');\n\n        await animationManager.play(AnimationSequences.CLOSE_DOUBLE_DRAWER);\n\n        expect(phnDrawerStatusEvent).toHaveBeenCalled();\n        expect(phnDrawerStatusEvent).toHaveBeenCalledWith({ status: DrawerStatusValues.finishClosing });\n      });\n    });\n  });\n\n  describe('data analytics', () => {\n    it('should send data event after double drawer is loaded', async () => {\n      routerStore.state.routingKeyHistory = ['mainmenu', 'models'];\n      routerStore.state.routingKeyPointer = 1;\n      const page = await newSpecPage({\n        components: [DoubleDrawer],\n        template: () => <phn-double-drawer {...defaultProps} />\n      });\n\n      if (page.root) animationManager.initialize(page.root);\n\n      const event = globalDataLayerService.gdl.DataLayerStore[0];\n\n      expect(event.context?.eventAction).toEqual(EventActions.DRAWER_LOAD);\n      expect(event.componentDisplay).toEqual({\n        displayElementType: 'level2_double-drawer',\n        displayElementId: 'level1-mainmenu_level2-models',\n        displayElementName: 'Double Drawer'\n      });\n    });\n\n    it('should send data event after close button is clicked', async () => {\n      const page = await newSpecPage({\n        components: [DoubleDrawer],\n        template: () => <phn-double-drawer {...defaultProps} />\n      });\n\n      el.mouseClick(getHTMLElement(page.root?.querySelector('.close-button')));\n\n      const event = globalDataLayerService.gdl.DataLayerStore[1];\n\n      expect(event.context?.eventAction).toEqual(EventActions.MENU_CLOSE_CLICK);\n      expect(event.componentClick).toEqual({\n        clickElementId: 'mainmenu.drawer.close',\n        clickElementName: 'X',\n        clickElementType: ClickElementTypes.Button,\n        targetElement: 'level-0'\n      });\n      expect(event.componentDisplay).toEqual({\n        displayElementType: 'level2_close-button',\n        displayElementId: 'level1-mainmenu_level2-models',\n        displayElementName: 'Double Drawer'\n      });\n    });\n\n    it('should send data event after transitioning to next menu', async () => {\n      routerStore.state.routingKeyHistory = ['mainmenu', 'models'];\n      routerStore.state.routingKeyPointer = 1;\n      const page = await newSpecPage({\n        components: [DoubleDrawer],\n        template: () => <phn-double-drawer {...defaultProps} />\n      });\n\n      if (page.root === undefined) {\n        throw Error('Page root should not be null');\n      }\n\n      animationManager.initialize(page.root);\n\n      const mockRoutingKeyHistory = ['mainmenu', 'models', 'models/mainmenu.911'];\n      const mockRoutingKeyPointer = 2;\n      page.root.routingKeyHistory = mockRoutingKeyHistory;\n      page.root.routingKeyPointer = mockRoutingKeyPointer;\n      routerStore.state.routingKeyHistory = mockRoutingKeyHistory;\n      routerStore.state.routingKeyPointer = mockRoutingKeyPointer;\n\n      if (animationManager.isPlaying('transitionNextLevelDoubleDrawer'))\n        await animationManager.play('transitionNextLevelDoubleDrawer');\n\n      await page.waitForChanges();\n\n      const event = globalDataLayerService.gdl.DataLayerStore[1];\n\n      expect(event.context?.eventAction).toEqual(EventActions.DRAWER_LOAD);\n      expect(event.componentDisplay).toEqual({\n        displayElementType: 'level3_double-drawer',\n        displayElementId: 'level2-models_level3-mainmenu.911',\n        displayElementName: 'Double Drawer'\n      });\n    });\n\n    it('should send data event after transitioning back to previous menu', async () => {\n      const initialRoutingKeyHistory = ['mainmenu', 'models', 'models/mainmenu.911'];\n      const initialRoutingKeyPointer = 2;\n      routerStore.state.routingKeyHistory = initialRoutingKeyHistory;\n      routerStore.state.routingKeyPointer = initialRoutingKeyPointer;\n\n      const page = await newSpecPage({\n        components: [DoubleDrawer],\n        template: () => (\n          <phn-double-drawer\n            {...defaultProps}\n            routingKeyHistory={initialRoutingKeyHistory}\n            routingKeyPointer={initialRoutingKeyPointer}\n          />\n        )\n      });\n\n      if (page.root === undefined) {\n        throw Error('Page root should not be null');\n      }\n\n      animationManager.initialize(page.root);\n\n      const mockRoutingKeyHistory = ['mainmenu', 'models'];\n      const mockRoutingKeyPointer = 1;\n      page.root.routingKeyHistory = mockRoutingKeyHistory;\n      page.root.routingKeyPointer = mockRoutingKeyPointer;\n      routerStore.state.routingKeyHistory = mockRoutingKeyHistory;\n      routerStore.state.routingKeyPointer = mockRoutingKeyPointer;\n\n      if (animationManager.isPlaying('transitionPreviousLevelDoubleDrawer'))\n        await animationManager.play('transitionPreviousLevelDoubleDrawer');\n\n      await page.waitForChanges();\n\n      const event = globalDataLayerService.gdl.DataLayerStore[1];\n\n      expect(event.context?.eventAction).toEqual(EventActions.DRAWER_LOAD);\n      expect(event.componentDisplay).toEqual({\n        displayElementType: 'level2_double-drawer',\n        displayElementId: 'level1-mainmenu_level2-models',\n        displayElementName: 'Double Drawer'\n      });\n    });\n  });\n\n  describe('resize window', () => {\n    it('resizes window when resized', async () => {\n      defaultProps = {\n        breakpoint: breakpoint.l,\n        locale: 'xx-XX',\n        routingKeyHistory: [RoutingKeys.MAIN_MENU, RoutingKeys.MODELS],\n        routingKeyPointer: 1,\n        receivedContent: true\n      };\n\n      const page = await newSpecPage({\n        components: [DoubleDrawer],\n        template: () => <phn-double-drawer {...defaultProps} />\n      });\n      if (page.root) animationManager.initialize(page.root);\n\n      const onResizeWindowSpy = jest.spyOn(page.rootInstance, 'onResizeWindow');\n\n      page.win?.dispatchEvent(new Event('resize'));\n\n      expect(onResizeWindowSpy).toBeCalled();\n    });\n\n    it('updates animating routing keys when resizing the window', async () => {\n      defaultProps = {\n        breakpoint: breakpoint.base,\n        locale: 'xx-XX',\n        routingKeyHistory: [RoutingKeys.MAIN_MENU, RoutingKeys.MODELS],\n        routingKeyPointer: 0,\n        receivedContent: true\n      };\n\n      const page = await newSpecPage({\n        components: [DoubleDrawer],\n        template: () => <phn-double-drawer {...defaultProps} />\n      });\n      if (page.root) animationManager.initialize(page.root);\n\n      page.rootInstance.animatingRoutingKeyPointer = 0;\n      page.rootInstance.routingKeyPointer = 1;\n      page.rootInstance.onResizeWindow();\n\n      expect(page.rootInstance.animatingRoutingKeyPointer).toEqual(1);\n      expect(page.rootInstance.animatingRoutingKey).toEqual(RoutingKeys.MODELS);\n    });\n  });\n});\n"]}