{"version":3,"file":"dealer-search-results.spec.js","sourceRoot":"","sources":["../../../../../src/components/dealer-search-results/test/dealer-search-results.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AACzD,OAAO,EAAE,wBAAwB,EAAE,MAAM,4CAA4C,CAAC;AACtF,OAAO,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAClC,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,eAAe,EAAE,MAAM,kCAAkC,CAAC;AACnE,OAAO,EACL,iBAAiB,EACjB,uCAAuC,EACvC,6BAA6B,EAC7B,8CAA8C,EAC/C,MAAM,yBAAyB,CAAC;AACjC,OAAO,sBAAsB,MAAM,uDAAuD,CAAC;AAC3F,OAAO,EAAE,iBAAiB,EAAE,YAAY,EAAE,8BAA8B,EAAE,MAAM,4BAA4B,CAAC;AAE7G,IAAI,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;AAC/C,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;EACrC,MAAM,YAAY,GAAG;IACnB,YAAY,EAAE,IAAI;IAClB,UAAU,EAAE,CAAC;IACb,MAAM,EAAE,OAAO;GAChB,CAAC;EAEF,KAAK,UAAU,OAAO;IACpB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,mBAAmB,CAAC;MACjC,QAAQ,EAAE,GAAG,EAAE,CAAC,iDAA+B,YAAY,EAAI;KAChE,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;EACd,CAAC;EAED,UAAU,CAAC,GAAG,EAAE;IACd,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;EACnD,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;IACvB,EAAE,CAAC,6DAA6D,EAAE,KAAK,IAAI,EAAE;;MAC3E,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;MAEjD,MAAM,UAAU,GAAG,8CAA8C,CAAC,CAAC,CAAC,CAAC;MACrE,MAAM,aAAa,GAAG,UAAU,CAAC,SAAS,CAAC;MAE3C,wBAAwB,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC;MAC/E,wBAAwB,CAAC,KAAK,CAAC,OAAO,GAAG,8CAA8C,CAAC,GAAG,CACzF,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CACrC,CAAC;MACF,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;MAC7B,MAAM,sBAAsB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;MAEzF,MAAA,cAAc,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,gBAAgB,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,0CAAE,KAAK,EAAE,CAAC;MACxE,MAAM,CAAC,sBAAsB,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iFAAiF,EAAE,KAAK,IAAI,EAAE;;MAC/F,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;MAE7B,wBAAwB,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC;MACjD,wBAAwB,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;MAE/C,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;MAE5B,MAAM,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;;MAChD,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;MAE7B,wBAAwB,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;MAC5C,wBAAwB,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;MAE/C,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;MAE5B,MAAM,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;MAC5D,MAAM,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;IAClE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;;MACvE,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;MAEjD,MAAM,UAAU,GAAG,8CAA8C,CAAC,CAAC,CAAC,CAAC;MACrE,MAAM,aAAa,GAAG,UAAU,CAAC,SAAS,CAAC;MAE3C,wBAAwB,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC;MAC/E,wBAAwB,CAAC,KAAK,CAAC,OAAO,GAAG,8CAA8C,CAAC,GAAG,CACzF,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CACrC,CAAC;MACF,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;MAE7B,MAAM,KAAK,GAAG,MAAA,IAAI,CAAC,IAAI,0CAAE,gBAAgB,CAAC,oBAAoB,CAAC,CAAC;MAChE,IAAI,KAAK,EAAE;QACT,MAAM,CAAC,MAAA,MAAA,KAAK,CAAC,CAAC,CAAC,0CAAE,aAAa,CAAC,WAAW,CAAC,0CAAE,WAAW,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;OAC1E;WAAM;QACL,MAAM,KAAK,CAAC,sBAAsB,CAAC,CAAC;OACrC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qEAAqE,EAAE,KAAK,IAAI,EAAE;;MACnF,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;MAEjD,MAAM,UAAU,GAAG,8CAA8C,CAAC,CAAC,CAAC,CAAC;MACrE,MAAM,aAAa,GAAG,UAAU,CAAC,SAAS,CAAC;MAE3C,wBAAwB,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC;MAC/E,wBAAwB,CAAC,KAAK,CAAC,OAAO,GAAG,8CAA8C,CAAC,GAAG,CACzF,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CACrC,CAAC;MACF,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,GAAG,CAAC,CAAC;MACjD,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;MAE7B,MAAM,KAAK,GAAG,MAAA,IAAI,CAAC,IAAI,0CAAE,gBAAgB,CAAC,oBAAoB,CAAC,CAAC;MAChE,IAAI,KAAK,EAAE;QACT,MAAM,CAAC,MAAA,KAAK,CAAC,CAAC,CAAC,0CAAE,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;OACzD;WAAM;QACL,MAAM,KAAK,CAAC,sBAAsB,CAAC,CAAC;OACrC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6FAA6F,EAAE,KAAK,IAAI,EAAE;;MAC3G,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,uCAAuC,CAAC,CAAC;MAEvE,MAAM,UAAU,GAAG,6BAA6B,CAAC,CAAC,CAAC,CAAC;MAEpD,wBAAwB,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC;MACtF,wBAAwB,CAAC,KAAK,CAAC,OAAO,GAAG,6BAA6B,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;MACjH,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;MAE7B,MAAM,sBAAsB,GAAG,cAAc,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,2BAA2B,CAAC,CAAC,CAAC;MAErG,MAAM,CAAC,cAAc,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;MAC5E,MAAM,CAAC,cAAc,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;MAC5E,MAAM,CAAC,sBAAsB,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;MAC9C,MAAM,CAAC,sBAAsB,aAAtB,sBAAsB,uBAAtB,sBAAsB,CAAE,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAC5F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;;MAC9D,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,uCAAuC,CAAC,CAAC;MAEvE,MAAM,UAAU,GAAG,6BAA6B,CAAC,CAAC,CAAC,CAAC;MAEpD,wBAAwB,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC;MACtF,wBAAwB,CAAC,KAAK,CAAC,OAAO,GAAG,6BAA6B,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;MACjH,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;MAE7B,MAAM,sBAAsB,GAAG,cAAc,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,2BAA2B,CAAC,CAAC,CAAC;MAErG,MAAM,CAAC,sBAAsB,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;MAC9C,MAAM,CAAC,wBAAwB,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC;QAC/D,EAAE,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE;QAC3B,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ;QACnD,SAAS,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS;OACtD,CAAC,CAAC;MACH,MAAM,CAAC,sBAAsB,aAAtB,sBAAsB,uBAAtB,sBAAsB,CAAE,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAC5F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE,KAAK,IAAI,EAAE;;MAClE,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,uCAAuC,CAAC,CAAC;MAEvE,MAAM,UAAU,GAAG,6BAA6B,CAAC,CAAC,CAAC,CAAC;MAEpD,wBAAwB,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC;MACtF,wBAAwB,CAAC,KAAK,CAAC,OAAO,GAAG,6BAA6B,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;MACjH,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;MAE7B,MAAM,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mFAAmF,EAAE,KAAK,IAAI,EAAE;;MACjG,eAAe,CAAC,GAAG,CAAC,QAAQ,kCAAO,uCAAuC,KAAE,eAAe,EAAE,CAAC,IAAG,CAAC;MAElG,MAAM,UAAU,GAAG,6BAA6B,CAAC,CAAC,CAAC,CAAC;MAEpD,wBAAwB,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC;MACtF,wBAAwB,CAAC,KAAK,CAAC,OAAO,GAAG,6BAA6B,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;MACjH,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;MAE7B,MAAM,sBAAsB,GAAG,cAAc,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,2BAA2B,CAAC,CAAC,CAAC;MAErG,MAAM,CAAC,cAAc,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;MAC5E,MAAM,CAAC,cAAc,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;MAC5E,MAAM,CAAC,sBAAsB,CAAC,CAAC,UAAU,EAAE,CAAC;MAC5C,MAAM,CAAC,sBAAsB,aAAtB,sBAAsB,uBAAtB,sBAAsB,CAAE,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAC5F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;;MAC3D,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;MACjD,MAAM,UAAU,GAAG,8CAA8C,CAAC,CAAC,CAAC,CAAC;MACrE,wBAAwB,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC;MACtF,wBAAwB,CAAC,KAAK,CAAC,OAAO,GAAG,8CAA8C,CAAC,GAAG,CACzF,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CACrC,CAAC;MAEF,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;QAC7B,UAAU,EAAE,CAAC,mBAAmB,CAAC;QACjC,QAAQ,EAAE,GAAG,EAAE,CAAC,iDAA+B,YAAY,IAAE,WAAW,EAAE,IAAI,IAAI;OACnF,CAAC,CAAC;MAEH,MAAM,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;MAC9D,MAAM,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,sBAAsB,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;IACxE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;;MAC/D,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;MACjD,MAAM,UAAU,GAAG,8CAA8C,CAAC,CAAC,CAAC,CAAC;MACrE,wBAAwB,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC;MACtF,wBAAwB,CAAC,KAAK,CAAC,OAAO,GAAG,8CAA8C,CAAC,GAAG,CACzF,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CACrC,CAAC;MAEF,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;QAC7B,UAAU,EAAE,CAAC,mBAAmB,CAAC;QACjC,QAAQ,EAAE,GAAG,EAAE,CAAC,iDAA+B,YAAY,IAAE,WAAW,EAAE,KAAK,IAAI;OACpF,CAAC,CAAC;MAEH,MAAM,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;MAC9D,MAAM,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,sBAAsB,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IACtE,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,UAAU,CAAC,GAAG,EAAE;MACd,wBAAwB,CAAC,KAAK,CAAC,OAAO,GAAG,8CAA8C,CAAC,GAAG,CACzF,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CACrC,CAAC;MACF,wBAAwB,CAAC,KAAK,CAAC,UAAU,GAAG,8CAA8C,CAAC,MAAM,CAC/F,CAAC,UAAU,EAAE,kBAAkB,EAAE,EAAE,CAAC,iCAC/B,UAAU,KACb,CAAC,kBAAkB,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kBAAkB,IACrD,EACF,EAAE,CACH,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;;MAChE,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;MAE7B,MAAA,cAAc,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,gBAAgB,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,0CAAE,KAAK,EAAE,CAAC;MAExE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,wBAAwB,CAAC,KAAK,CAAC;MAE/D,MAAM,CAAC,sBAAsB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;MAElE,MAAM,KAAK,GAAG,sBAAsB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;MAE3D,MAAM,CAAC,MAAA,KAAK,CAAC,OAAO,0CAAE,WAAW,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;MAC7E,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC;QACnC,cAAc,EAAE,8CAA8C,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE;QAC9E,gBAAgB,EAAE,8CAA8C,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI;QAClF,gBAAgB,EAAE,iBAAiB,CAAC,MAAM;QAC1C,aAAa,EAAE,2DAA2D;OAC3E,CAAC,CAAC;MACH,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC;QACpC,eAAe,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM;QAChC,UAAU,EAAE,UAAU;OACvB,CAAC,CAAC;MACH,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC;QAC5B,WAAW,EAAE,8CAA8C,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI;QAC7E,SAAS,EAAE,8CAA8C,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,gBAAgB;OACxF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE,KAAK,IAAI,EAAE;;MAC7E,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;MAE7B,MAAA,cAAc,CAAC,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,cAAc,CAAC,CAAC,0CAAE,KAAK,EAAE,CAAC;MAElE,MAAM,CAAC,sBAAsB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;MAElE,MAAM,KAAK,GAAG,sBAAsB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;MAE3D,MAAM,CAAC,MAAA,KAAK,CAAC,OAAO,0CAAE,WAAW,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;MAC1E,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC;QACnC,cAAc,EAAE,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;QAC/C,gBAAgB,EAAE,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI;QACnD,gBAAgB,EAAE,iBAAiB,CAAC,IAAI;QACxC,SAAS,EAAE,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI;OAC7C,CAAC,CAAC;MACH,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC;QACpC,eAAe,EAAE,8CAA8C,CAAC,MAAM;QACtE,UAAU,EAAE,8BAA8B;OAC3C,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { getHTMLElement } from '../../../utility/helper';\nimport { dealerSearchResultsStore } from '../../../state/dealer-search-results-store';\nimport { h } from '@stencil/core';\nimport { DealerSearchResults } from '../dealer-search-results';\nimport { navContentStore } from '../../../state/nav-content-store';\nimport {\n  mockDealerContent,\n  mockDealerContentForMarketWithOneDealer,\n  mockPPNDealerOneSearchResults,\n  mockPPNDealerSearchResultsWithLocalizedAddress\n} from '../../../test/test-data';\nimport globalDataLayerService from '../../../services/analytics/global-data-layer-service';\nimport { ClickElementTypes, EventActions, GEOLOCATION_BUTTON_SEARCH_TERM } from '../../../utility/constants';\n\njest.mock('../../../services/maps-service.ts');\ndescribe('Dealer Search Results', () => {\n  const defaultProps = {\n    errorMessage: null,\n    breakpoint: 0,\n    locale: 'xx-XX'\n  };\n\n  async function getPage() {\n    const page = await newSpecPage({\n      components: [DealerSearchResults],\n      template: () => <phn-dealer-search-results {...defaultProps} />\n    });\n\n    return page;\n  }\n\n  beforeEach(() => {\n    navContentStore.set('dealer', mockDealerContent);\n  });\n\n  describe('Results', () => {\n    it('should emit menuItemClick event if dealer result is clicked', async () => {\n      navContentStore.set('dealer', mockDealerContent);\n\n      const mockDealer = mockPPNDealerSearchResultsWithLocalizedAddress[0];\n      const mockPPNDealer = mockDealer.ppnDealer;\n\n      dealerSearchResultsStore.state.ppnDealers = { [mockPPNDealer.id]: mockDealer };\n      dealerSearchResultsStore.state.results = mockPPNDealerSearchResultsWithLocalizedAddress.map(\n        ({ ppnDealer: dealer }) => dealer.id\n      );\n      const page = await getPage();\n      const mobileMenuItemClickSpy = jest.spyOn(page.rootInstance.mobileMenuItemClick, 'emit');\n\n      getHTMLElement(page.root?.querySelectorAll('.dealer-card')[0])?.click();\n      expect(mobileMenuItemClickSpy).toBeCalledTimes(1);\n    });\n\n    it('should not render dealer if dealer id is in the store but not the dealer itself', async () => {\n      const page = await getPage();\n\n      dealerSearchResultsStore.state.results = ['abc'];\n      dealerSearchResultsStore.state.ppnDealers = {};\n\n      await page.waitForChanges();\n\n      expect(page.root?.querySelector('.dealer-card')).toBeNull();\n    });\n\n    it('should render no results message', async () => {\n      const page = await getPage();\n\n      dealerSearchResultsStore.state.results = [];\n      dealerSearchResultsStore.state.ppnDealers = {};\n\n      await page.waitForChanges();\n\n      expect(page.root?.querySelector('.dealer-card')).toBeNull();\n      expect(page.root?.querySelector('.error-message')).toBeTruthy();\n    });\n\n    it('should display distance from dealer on card if provided', async () => {\n      navContentStore.set('dealer', mockDealerContent);\n\n      const mockDealer = mockPPNDealerSearchResultsWithLocalizedAddress[0];\n      const mockPPNDealer = mockDealer.ppnDealer;\n\n      dealerSearchResultsStore.state.ppnDealers = { [mockPPNDealer.id]: mockDealer };\n      dealerSearchResultsStore.state.results = mockPPNDealerSearchResultsWithLocalizedAddress.map(\n        ({ ppnDealer: dealer }) => dealer.id\n      );\n      const page = await getPage();\n\n      const cards = page.root?.querySelectorAll('phn-menu-item-card');\n      if (cards) {\n        expect(cards[0]?.querySelector('phn-p-tag')?.textContent).toEqual('3km');\n      } else {\n        throw Error('It should have cards');\n      }\n    });\n\n    it('should not show dealer distance if number of dealers in market is 1', async () => {\n      navContentStore.set('dealer', mockDealerContent);\n\n      const mockDealer = mockPPNDealerSearchResultsWithLocalizedAddress[0];\n      const mockPPNDealer = mockDealer.ppnDealer;\n\n      dealerSearchResultsStore.state.ppnDealers = { [mockPPNDealer.id]: mockDealer };\n      dealerSearchResultsStore.state.results = mockPPNDealerSearchResultsWithLocalizedAddress.map(\n        ({ ppnDealer: dealer }) => dealer.id\n      );\n      navContentStore.state.dealer.numberOfDealers = 1;\n      const page = await getPage();\n\n      const cards = page.root?.querySelectorAll('phn-menu-item-card');\n      if (cards) {\n        expect(cards[0]?.querySelector('phn-p-tag')).toBeNull();\n      } else {\n        throw Error('It should have cards');\n      }\n    });\n\n    it('should show dealer details page if results length is 1 and number of dealers in market is 1', async () => {\n      navContentStore.set('dealer', mockDealerContentForMarketWithOneDealer);\n\n      const mockDealer = mockPPNDealerOneSearchResults[0];\n\n      dealerSearchResultsStore.state.ppnDealers = { [mockDealer.ppnDealer.id]: mockDealer };\n      dealerSearchResultsStore.state.results = mockPPNDealerOneSearchResults.map(({ ppnDealer: dealer }) => dealer.id);\n      const page = await getPage();\n\n      const dealerDetailsComponent = getHTMLElement(page.root?.querySelector('phn-dealer-details-drawer'));\n\n      expect(getHTMLElement(page.root?.querySelector('phn-p-button'))).toBeNull();\n      expect(getHTMLElement(page.root?.querySelector('.dealer-card'))).toBeNull();\n      expect(dealerDetailsComponent).not.toBeNull();\n      expect(dealerDetailsComponent?.getAttribute('dealerId')).toEqual(mockDealer.ppnDealer.id);\n    });\n\n    it('should set dealer cookie if search result is 1', async () => {\n      navContentStore.set('dealer', mockDealerContentForMarketWithOneDealer);\n\n      const mockDealer = mockPPNDealerOneSearchResults[0];\n\n      dealerSearchResultsStore.state.ppnDealers = { [mockDealer.ppnDealer.id]: mockDealer };\n      dealerSearchResultsStore.state.results = mockPPNDealerOneSearchResults.map(({ ppnDealer: dealer }) => dealer.id);\n      const page = await getPage();\n\n      const dealerDetailsComponent = getHTMLElement(page.root?.querySelector('phn-dealer-details-drawer'));\n\n      expect(dealerDetailsComponent).not.toBeNull();\n      expect(dealerSearchResultsStore.state.savedDealerCookie).toEqual({\n        id: mockDealer.ppnDealer.id,\n        latitude: mockDealer.ppnDealer.coordinates.latitude,\n        longitude: mockDealer.ppnDealer.coordinates.longitude\n      });\n      expect(dealerDetailsComponent?.getAttribute('dealerId')).toEqual(mockDealer.ppnDealer.id);\n    });\n\n    it('should not show error message if there are results', async () => {\n      navContentStore.set('dealer', mockDealerContentForMarketWithOneDealer);\n\n      const mockDealer = mockPPNDealerOneSearchResults[0];\n\n      dealerSearchResultsStore.state.ppnDealers = { [mockDealer.ppnDealer.id]: mockDealer };\n      dealerSearchResultsStore.state.results = mockPPNDealerOneSearchResults.map(({ ppnDealer: dealer }) => dealer.id);\n      const page = await getPage();\n\n      expect(page.root?.querySelector('.error-message')).toBeNull();\n    });\n\n    it('should show dealer cards if results is 1 and number of dealers in market is >1<=5', async () => {\n      navContentStore.set('dealer', { ...mockDealerContentForMarketWithOneDealer, numberOfDealers: 3 });\n\n      const mockDealer = mockPPNDealerOneSearchResults[0];\n\n      dealerSearchResultsStore.state.ppnDealers = { [mockDealer.ppnDealer.id]: mockDealer };\n      dealerSearchResultsStore.state.results = mockPPNDealerOneSearchResults.map(({ ppnDealer: dealer }) => dealer.id);\n      const page = await getPage();\n\n      const dealerDetailsComponent = getHTMLElement(page.root?.querySelector('phn-dealer-details-drawer'));\n\n      expect(getHTMLElement(page.root?.querySelector('phn-p-button'))).toBeNull();\n      expect(getHTMLElement(page.root?.querySelector('.dealer-card'))).toBeNull();\n      expect(dealerDetailsComponent).toBeTruthy();\n      expect(dealerDetailsComponent?.getAttribute('dealerId')).toEqual(mockDealer.ppnDealer.id);\n    });\n\n    it('should show opacity overlay on result cards', async () => {\n      navContentStore.set('dealer', mockDealerContent);\n      const mockDealer = mockPPNDealerSearchResultsWithLocalizedAddress[0];\n      dealerSearchResultsStore.state.ppnDealers = { [mockDealer.ppnDealer.id]: mockDealer };\n      dealerSearchResultsStore.state.results = mockPPNDealerSearchResultsWithLocalizedAddress.map(\n        ({ ppnDealer: dealer }) => dealer.id\n      );\n\n      const page = await newSpecPage({\n        components: [DealerSearchResults],\n        template: () => <phn-dealer-search-results {...defaultProps} showOverlay={true} />\n      });\n\n      expect(page.root?.querySelector('.dealer-card')).toBeTruthy();\n      expect(page.root?.querySelector('.dealer-card-overlay')).toBeTruthy();\n    });\n\n    it('should not show opacity overlay on result cards', async () => {\n      navContentStore.set('dealer', mockDealerContent);\n      const mockDealer = mockPPNDealerSearchResultsWithLocalizedAddress[0];\n      dealerSearchResultsStore.state.ppnDealers = { [mockDealer.ppnDealer.id]: mockDealer };\n      dealerSearchResultsStore.state.results = mockPPNDealerSearchResultsWithLocalizedAddress.map(\n        ({ ppnDealer: dealer }) => dealer.id\n      );\n\n      const page = await newSpecPage({\n        components: [DealerSearchResults],\n        template: () => <phn-dealer-search-results {...defaultProps} showOverlay={false} />\n      });\n\n      expect(page.root?.querySelector('.dealer-card')).toBeTruthy();\n      expect(page.root?.querySelector('.dealer-card-overlay')).toBeNull();\n    });\n  });\n\n  describe('Analytics', () => {\n    beforeEach(() => {\n      dealerSearchResultsStore.state.results = mockPPNDealerSearchResultsWithLocalizedAddress.map(\n        ({ ppnDealer: dealer }) => dealer.id\n      );\n      dealerSearchResultsStore.state.ppnDealers = mockPPNDealerSearchResultsWithLocalizedAddress.reduce(\n        (ppnDealers, dealerSearchResult) => ({\n          ...ppnDealers,\n          [dealerSearchResult.ppnDealer.id]: dealerSearchResult\n        }),\n        {}\n      );\n    });\n\n    it('emits DEALER_RESULT_CLICK when result is clicked', async () => {\n      const page = await getPage();\n\n      getHTMLElement(page.root?.querySelectorAll('.dealer-card')[0])?.click();\n\n      const { results, searchTerm } = dealerSearchResultsStore.state;\n\n      expect(globalDataLayerService.gdl.DataLayerStore).toHaveLength(1);\n\n      const event = globalDataLayerService.gdl.DataLayerStore[0];\n\n      expect(event.context?.eventAction).toEqual(EventActions.DEALER_RESULT_CLICK);\n      expect(event.componentClick).toEqual({\n        clickElementId: mockPPNDealerSearchResultsWithLocalizedAddress[0].ppnDealer.id,\n        clickElementName: mockPPNDealerSearchResultsWithLocalizedAddress[0].ppnDealer.name,\n        clickElementType: ClickElementTypes.Button,\n        targetElement: 'level2_find_a_dealer/6a6d8e8c-5b04-4a4b-a119-66021b528788'\n      });\n      expect(event.componentSearch).toEqual({\n        numberOfResults: results?.length,\n        searchTerm: searchTerm\n      });\n      expect(event.partner).toEqual({\n        companyName: mockPPNDealerSearchResultsWithLocalizedAddress[0].ppnDealer.name,\n        companyId: mockPPNDealerSearchResultsWithLocalizedAddress[0].ppnDealer.porschePartnerNo\n      });\n    });\n\n    it('emits DEALER_MAP_CLICK when all dealers map button is clicked', async () => {\n      const page = await getPage();\n\n      getHTMLElement(page.root?.querySelector('phn-p-button'))?.click();\n\n      expect(globalDataLayerService.gdl.DataLayerStore).toHaveLength(1);\n\n      const event = globalDataLayerService.gdl.DataLayerStore[0];\n\n      expect(event.context?.eventAction).toEqual(EventActions.DEALER_MAP_CLICK);\n      expect(event.componentClick).toEqual({\n        clickElementId: mockDealerContent.search.map.id,\n        clickElementName: mockDealerContent.search.map.text,\n        clickElementType: ClickElementTypes.Link,\n        targetUrl: mockDealerContent.search.map.link\n      });\n      expect(event.componentSearch).toEqual({\n        numberOfResults: mockPPNDealerSearchResultsWithLocalizedAddress.length,\n        searchTerm: GEOLOCATION_BUTTON_SEARCH_TERM\n      });\n    });\n  });\n});\n"]}