{"version":3,"file":"dealer-search-form-geolocation.js","sourceRoot":"","sources":["../../../../src/components/dealer-search-form-geolocation/dealer-search-form-geolocation.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, Fragment, h, Host, Listen, Prop, State } from '@stencil/core';\nimport { LatLong, Prediction } from '../../entities/places';\nimport { splitLocale } from '../../entities/locale';\nimport { navStateStore } from '../../state/nav-state-store';\nimport { getPPNDealers } from '../../services/dealer-service';\nimport { getConfig, getString, isString } from '../../utility/helper';\nimport { dealerSearchResultsStore } from '../../state/dealer-search-results-store';\nimport logger from '../../services/logger';\nimport { getErrorMessage, NaviError, NaviErrorTypes } from '../../utility/navi-error';\nimport globalDataLayerService from '../../services/analytics/global-data-layer-service';\nimport {\n  ClickElementTypes,\n  DEALER_SEARCH_DISPLAY_ELEMENT_ID,\n  DEALER_SEARCH_RESULT_DISPLAY_ELEMENT_ID_DOUBLE_DRAWER,\n  DEALER_SEARCH_TARGET_ELEMENT,\n  ElementTypes,\n  EventActions,\n  GEOLOCATION_BUTTON_SEARCH_TERM\n} from '../../utility/constants';\nimport analyticsManager from '../../services/analytics/analytics-manager';\nimport { RoutingKeys } from '../../entities/routing-key';\nimport mapsService from '../../services/maps-service';\nimport windowService from '../../services/window-service';\nimport { Timeout } from '../../utility/timeout';\nimport { navContentStore } from '../../state/nav-content-store';\nimport ErrorMessage from '../dealer-search-form/error-message';\nimport { componentsOnReady } from '../../utility/ready';\nimport { getRegionSpecificCountry } from '../../utility/helpers/dealer-search-helper';\n\n@Component({\n  tag: 'phn-dealer-search-form-geolocation',\n  styleUrl: 'dealer-search-form-geolocation.scss',\n  scoped: true\n})\nexport class DealerSearchFormGeolocation {\n  @Prop() locale!: string;\n\n  @State() predictions: Prediction[] = [];\n  @State() errorMessage: string | null = null;\n  @State() formErrorMessage: string | null = null;\n  @State() isLoading = false;\n  @State() showGeolocationButton = dealerSearchResultsStore.state.results === null;\n  @State() animateResults = false;\n  @State() searchTerm = dealerSearchResultsStore.state.searchTerm;\n  @State() showSkeleton = true;\n\n  @Event() dealerSearchFormEvent!: EventEmitter;\n  @Event() clearSearchEvent!: EventEmitter;\n  @Event() removeSkeletonOnDealerSearchForm!: EventEmitter;\n\n  @Element() el!: HTMLPhnDealerSearchFormGeolocationElement;\n\n  private debounceTimeout = new Timeout(100);\n\n  @Listen('autoCompleteLoaded')\n  loadedAutoCompleteListener(): void {\n    this.showSkeleton = false;\n  }\n\n  private async waitForComponentsToLoad() {\n    await componentsOnReady(this.el, new Timeout(5000));\n    this.removeSkeletonOnDealerSearchForm.emit();\n  }\n\n  disconnectedCallback(): void {\n    dealerSearchResultsStore.state.searchTerm = this.searchTerm;\n    this.debounceTimeout.cancel();\n  }\n\n  componentWillLoad(): void {\n    this.waitForComponentsToLoad().then(() => {\n      const { error: errorContent } = navContentStore.state;\n\n      mapsService.init('GOOGLE_API_KEY').catch((err: Error) => {\n        logger.error('INIT_MAPS_SERVICE', err);\n        this.formErrorMessage = getErrorMessage(errorContent, err);\n        this.errorMessage = null;\n      });\n    });\n  }\n\n  componentDidLoad(): void {\n    this.emitPageLoadEvent();\n  }\n\n  private emitPageLoadEvent() {\n    const { dealer } = navContentStore.state;\n    globalDataLayerService.pushDataLayerEvent(EventActions.DEALER_SEARCH_SCREEN_LOAD, {\n      componentDisplay: {\n        displayElementId: analyticsManager.calculateDisplayElementId(),\n        displayElementType: analyticsManager.calculateDisplayElementType('', ElementTypes.dealerSearchForm, true),\n        displayElementName: dealer.text\n      }\n    });\n  }\n\n  private emitResultsLoadEvent(searchTerm: string) {\n    const { results } = dealerSearchResultsStore.state;\n    const { dealer: dealerContent } = navContentStore.state;\n\n    const componentSearchSearchTerm = isString(searchTerm) ? searchTerm : GEOLOCATION_BUTTON_SEARCH_TERM;\n    const numberOfResults = results?.length || 0;\n\n    globalDataLayerService.pushDataLayerEvent(EventActions.DEALER_RESULTS_SCREEN_LOAD, {\n      componentDisplay: {\n        displayElementId: analyticsManager.getDealerResultsLoadDisplayElementId(\n          DEALER_SEARCH_RESULT_DISPLAY_ELEMENT_ID_DOUBLE_DRAWER\n        ),\n        displayElementType: analyticsManager.getDealerResultsLoadDisplayElementType(),\n        displayElementName: dealerContent.text\n      },\n      componentSearch: {\n        searchTerm: componentSearchSearchTerm,\n        numberOfResults: numberOfResults\n      }\n    });\n  }\n\n  private async fetchDealers(getSearchTerms: () => Promise<[string, LatLong]>) {\n    const { error: errorContent } = navContentStore.state;\n    try {\n      this.reset();\n      this.isLoading = true;\n\n      const [searchTerm, placeCoordinates] = await getSearchTerms();\n      const { env } = navStateStore.state;\n\n      const ppnDealerSearchResults = await getPPNDealers(\n        env,\n        getConfig(env).DEALER_API_URL,\n        placeCoordinates,\n        getRegionSpecificCountry(splitLocale(this.locale).country)\n      );\n\n      dealerSearchResultsStore.state.searchTerm = searchTerm;\n      dealerSearchResultsStore.state.results = ppnDealerSearchResults.map(({ ppnDealer: dealer }) => dealer.id);\n      dealerSearchResultsStore.state.ppnDealers = ppnDealerSearchResults.reduce(\n        (dealers, dealerSearchResult) => ({\n          ...dealers,\n          [dealerSearchResult.ppnDealer.id]: dealerSearchResult\n        }),\n        dealerSearchResultsStore.state.ppnDealers\n      );\n      this.showGeolocationButton = false;\n    } catch (err) {\n      logger.error('FETCH_DEALERS', err as Error);\n      this.formErrorMessage = getErrorMessage(errorContent, err as Error);\n      this.errorMessage = null;\n    } finally {\n      this.isLoading = false;\n      this.animateResults = true;\n    }\n  }\n\n  private async onSubmit(prediction: Prediction | null) {\n    const { dealer: dealerContent, error: errorContent } = navContentStore.state;\n\n    if (!isString(this.searchTerm)) {\n      this.errorMessage = errorContent.noInput;\n      this.formErrorMessage = '';\n      return;\n    }\n\n    await this.fetchDealers(async () => {\n      if (prediction === null) {\n        throw new NaviError('Dealer search form submitted without prediction', NaviErrorTypes.INVALID_INPUT);\n      }\n\n      this.searchTerm = prediction.text;\n\n      globalDataLayerService.pushDataLayerEvent(EventActions.DEALER_SEARCH_CLICK, {\n        componentClick: {\n          clickElementId: prediction.id,\n          clickElementName: prediction.text,\n          clickElementType: ClickElementTypes.Button,\n          targetElement: DEALER_SEARCH_TARGET_ELEMENT\n        },\n        componentDisplay: {\n          displayElementId: DEALER_SEARCH_DISPLAY_ELEMENT_ID,\n          displayElementType: analyticsManager.calculateDisplayElementType(\n            RoutingKeys.DEALER_SEARCH,\n            ElementTypes.dealerSearchForm\n          ),\n          displayElementName: dealerContent.text\n        },\n        componentSearch: {\n          searchTerm: prediction.text\n        }\n      });\n\n      const placeCoordinates = await mapsService.getPlaceCoordinates(prediction.id);\n\n      return [prediction.text, placeCoordinates];\n    });\n\n    this.emitResultsLoadEvent(this.searchTerm);\n  }\n\n  private async getCurrentLocation(): Promise<void> {\n    const { dealer: dealerContent } = navContentStore.state;\n\n    await this.fetchDealers(async () => {\n      const placeCoordinates = await windowService.getNavigatorLatLong();\n      const formattedAddress = await mapsService.getFormattedAddressFromCoordinates(placeCoordinates);\n\n      this.searchTerm = '';\n\n      globalDataLayerService.pushDataLayerEvent(EventActions.DEALER_GEOLOCATION_CLICK, {\n        componentClick: {\n          clickElementId: dealerContent.search.geolocation.id,\n          clickElementName: dealerContent.search.geolocation.text,\n          clickElementType: ClickElementTypes.Button,\n          targetElement: DEALER_SEARCH_TARGET_ELEMENT\n        },\n        componentDisplay: {\n          displayElementId: DEALER_SEARCH_DISPLAY_ELEMENT_ID,\n          displayElementType: analyticsManager.calculateDisplayElementType(\n            RoutingKeys.DEALER_SEARCH,\n            ElementTypes.dealerSearchForm\n          ),\n          displayElementName: dealerContent.text\n        },\n        componentSearch: {\n          searchTerm: GEOLOCATION_BUTTON_SEARCH_TERM\n        }\n      });\n\n      return [formattedAddress, placeCoordinates];\n    });\n\n    this.emitResultsLoadEvent(GEOLOCATION_BUTTON_SEARCH_TERM);\n  }\n\n  private async onDealerSearchEntry(searchTerm: string): Promise<void> {\n    const { error } = navContentStore.state;\n    try {\n      this.searchTerm = searchTerm;\n      this.errorMessage = null;\n      this.formErrorMessage = null;\n      this.showGeolocationButton = dealerSearchResultsStore.state.results === null;\n      this.predictions = await mapsService.getPredictions(searchTerm, this.locale);\n    } catch (err) {\n      logger.error('GET_PREDICTIONS', err as Error);\n      this.errorMessage = getErrorMessage(error, err as Error);\n      this.predictions = [];\n    }\n  }\n\n  private reset() {\n    this.errorMessage = null;\n    this.formErrorMessage = null;\n    this.animateResults = false;\n    this.showGeolocationButton = true;\n    this.isLoading = false;\n\n    dealerSearchResultsStore.state.results = null;\n  }\n\n  render(): HTMLPhnDealerSearchFormElement {\n    const { dealer: dealerContent } = navContentStore.state;\n    const { results } = dealerSearchResultsStore.state;\n\n    return (\n      <Host class={this.showSkeleton ? 'skeleton' : ''}>\n        <div class=\"input-container\">\n          {this.showSkeleton ? <div class=\"skeleton-autocomplete-search-field\" /> : null}\n          <phn-autocomplete-search-field\n            placeholder={dealerContent.search.form.inputPlaceholder}\n            initialValue={dealerSearchResultsStore.state.searchTerm}\n            predictions={this.predictions}\n            onSearchInput={(e) => this.debounceTimeout.set(() => this.onDealerSearchEntry(e.detail))}\n            onClearSearch={() => {\n              this.predictions = [];\n              dealerSearchResultsStore.state.searchTerm = '';\n              this.searchTerm = '';\n              this.reset();\n              this.clearSearchEvent.emit();\n              this.showGeolocationButton = true;\n            }}\n            onSubmitSearch={(e) => this.onSubmit(e.detail)}\n            errorMessage={getString(this.errorMessage)}\n            style={{ display: this.showSkeleton ? 'none' : '' }}\n          />\n        </div>\n\n        {this.isLoading && (\n          <div class=\"spinner\">\n            <phn-p-spinner size=\"medium\" aria={{ 'aria-label': 'Loading page content' }} />\n          </div>\n        )}\n\n        {this.showGeolocationButton && results === null ? (\n          <Fragment>\n            <div\n              class={`or-container ${this.isLoading ? 'animate-out' : ''}`}\n              onAnimationEnd={() => {\n                this.showGeolocationButton = false;\n              }}\n            >\n              {this.showSkeleton ? <div class=\"skeleton-or-text\" /> : null}\n              <phn-p-text\n                color=\"inherit\"\n                size=\"inherit\"\n                tag=\"div\"\n                data-test-id=\"dealer-search-or-label\"\n                style={{ display: this.showSkeleton ? 'none' : '' }}\n              >\n                {dealerContent.search.or}\n              </phn-p-text>\n              {this.showSkeleton ? <div class=\"skeleton-geolocation-button\" /> : null}\n              <phn-p-button\n                class={'geolocation'}\n                onClick={() => this.getCurrentLocation()}\n                variant=\"tertiary\"\n                icon=\"locate\"\n                style={{ display: this.showSkeleton ? 'none' : '' }}\n              >\n                {dealerContent.search.geolocation.text}\n              </phn-p-button>\n            </div>\n          </Fragment>\n        ) : null}\n\n        {isString(this.formErrorMessage) ? (\n          <ErrorMessage errorMessage={this.formErrorMessage} onDismiss={() => this.reset()} />\n        ) : null}\n      </Host>\n    );\n  }\n}\n"]}