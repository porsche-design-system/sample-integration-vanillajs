{"version":3,"file":"drawer-header.spec.js","sourceRoot":"","sources":["../../../../../src/components/drawer-header/test/drawer-header.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport globalDataLayerService from '../../../services/analytics/global-data-layer-service';\nimport { navContentStore } from '../../../state/nav-content-store';\nimport * as el from '../../../test/element-helpers';\nimport { ClickElementTypes, EventActions } from '../../../utility/constants';\nimport { getHTMLElement } from '../../../utility/helper';\nimport { DrawerHeader } from '../drawer-header';\nimport { routerStore } from '../../../state/router-store';\nimport { mockModelsContent } from '../../../test/test-data';\nimport { breakpoint } from '@porsche-design-system/components-js/styles';\nimport { RoutingKeys } from '../../../entities/routing-key';\nimport { goTo } from '../../../services/routing-manager';\nimport * as routingManager from '../../../services/routing-manager';\n\ndescribe('Drawer Header', () => {\n  beforeEach(() => {\n    navContentStore.state.menu = { id: 'menu', text: 'Menu', description: '' };\n  });\n\n  describe('snapshot tests', () => {\n    describe('mobile snapshot tests', () => {\n      it('hides heading & backButton in level1 menu', async () => {\n        const page = await newSpecPage({\n          components: [DrawerHeader],\n          template: () => (\n            <phn-drawer-header\n              backButtonAnalyticsId=\"menu\"\n              route=\"mainmenu\"\n              breakpoint={breakpoint.xs}\n              receivedContent={true}\n            />\n          )\n        });\n\n        expect(page.root).toMatchInlineSnapshot(`\n          <phn-drawer-header>\n            <div class=\"drawer-header\">\n              <div class=\"spacer\"></div>\n              <phn-heading class=\"heading-items\" subtext=\"\" text=\"\" style=\"display: none;\"></phn-heading>\n              <phn-p-button-pure class=\"close-button\" data-test-id=\"close-button\" hidelabel=\"true\" icon=\"close\" size=\"small\">\n                Close Dialog\n              </phn-p-button-pure>\n            </div>\n          </phn-drawer-header>\n        `);\n      });\n\n      it('shows models heading text in models overview', async () => {\n        navContentStore.state.models = mockModelsContent;\n\n        const page = await newSpecPage({\n          components: [DrawerHeader],\n          template: () => (\n            <phn-drawer-header\n              showBackButton={true}\n              backButtonAnalyticsId=\"menu\"\n              route=\"models\"\n              breakpoint={breakpoint.xs}\n              receivedContent={true}\n            ></phn-drawer-header>\n          )\n        });\n\n        expect(page.root).toMatchInlineSnapshot(`\n          <phn-drawer-header>\n            <div class=\"drawer-header\">\n              <phn-back-button analyticsid=\"menu\" class=\"back-button\" text=\"\"></phn-back-button>\n              <phn-heading class=\"heading-items\" subtext=\"\" text=\"Models\"></phn-heading>\n              <phn-p-button-pure class=\"close-button\" data-test-id=\"close-button\" hidelabel=\"true\" icon=\"close\" size=\"small\">\n                Close Dialog\n              </phn-p-button-pure>\n            </div>\n          </phn-drawer-header>\n        `);\n      });\n\n      it('model signature of 911 is shown for the 911 model', async () => {\n        navContentStore.state.models = mockModelsContent;\n        const page = await newSpecPage({\n          components: [DrawerHeader],\n          template: () => (\n            <phn-drawer-header\n              showBackButton={true}\n              backButtonAnalyticsId=\"menu\"\n              route=\"models/mainmenu.911\"\n              breakpoint={breakpoint.xs}\n              receivedContent={true}\n            ></phn-drawer-header>\n          )\n        });\n\n        expect(page.root).toMatchInlineSnapshot(`\n          <phn-drawer-header>\n            <div class=\"drawer-header\">\n              <phn-back-button analyticsid=\"menu\" class=\"back-button\" text=\"\"></phn-back-button>\n              <phn-signature-heading subtext=\"Gasoline\" text=\"911\"></phn-signature-heading>\n              <phn-p-button-pure class=\"close-button\" data-test-id=\"close-button\" hidelabel=\"true\" icon=\"close\" size=\"small\">\n                Close Dialog\n              </phn-p-button-pure>\n            </div>\n          </phn-drawer-header>\n        `);\n      });\n\n      it('displays skeleton for the close button', async () => {\n        const page = await newSpecPage({\n          components: [DrawerHeader],\n          template: () => (\n            <phn-drawer-header\n              backButtonAnalyticsId=\"menu\"\n              route=\"mainmenu\"\n              breakpoint={breakpoint.xs}\n              receivedContent={false}\n            />\n          )\n        });\n\n        expect(page.root).toMatchInlineSnapshot(`\n          <phn-drawer-header>\n            <div class=\"drawer-header\">\n              <div class=\"spacer\"></div>\n              <phn-heading class=\"heading-items\" subtext=\"\" text=\"\" style=\"display: none;\"></phn-heading>\n              <phn-p-button-pure class=\"close-button\" data-test-id=\"close-button\" hidelabel=\"true\" icon=\"close\" size=\"small\" style=\"display: none;\">\n                Close Dialog\n              </phn-p-button-pure>\n              <div class=\"button-skeleton\"></div>\n            </div>\n          </phn-drawer-header>\n        `);\n      });\n\n      it('displays skeleton for models menu drawer header, back & close button', async () => {\n        navContentStore.state.models = mockModelsContent;\n        const page = await newSpecPage({\n          components: [DrawerHeader],\n          template: () => (\n            <phn-drawer-header\n              showBackButton\n              backButtonAnalyticsId=\"menu\"\n              route=\"models\"\n              breakpoint={breakpoint.xs}\n              receivedContent={false}\n            ></phn-drawer-header>\n          )\n        });\n\n        expect(page.root).toMatchInlineSnapshot(`\n          <phn-drawer-header>\n            <div class=\"drawer-header\">\n              <phn-back-button analyticsid=\"menu\" class=\"back-button\" text=\"\" style=\"display: none;\"></phn-back-button>\n              <div class=\"button-skeleton\"></div>\n              <div class=\"skeleton-headline\"></div>\n              <phn-heading class=\"heading-items\" subtext=\"\" text=\"Models\" style=\"display: none;\"></phn-heading>\n              <phn-p-button-pure class=\"close-button\" data-test-id=\"close-button\" hidelabel=\"true\" icon=\"close\" size=\"small\" style=\"display: none;\">\n                Close Dialog\n              </phn-p-button-pure>\n              <div class=\"button-skeleton\"></div>\n            </div>\n          </phn-drawer-header>\n        `);\n      });\n\n      it('displays skeleton for model-signature, back & close button', async () => {\n        navContentStore.state.models = mockModelsContent;\n        const page = await newSpecPage({\n          components: [DrawerHeader],\n          template: () => (\n            <phn-drawer-header\n              showBackButton\n              backButtonAnalyticsId=\"menu\"\n              route=\"models/mainmenu.911\"\n              breakpoint={breakpoint.xs}\n              receivedContent={false}\n            ></phn-drawer-header>\n          )\n        });\n\n        expect(page.root).toMatchInlineSnapshot(`\n          <phn-drawer-header>\n            <div class=\"drawer-header\">\n              <phn-back-button analyticsid=\"menu\" class=\"back-button\" text=\"\" style=\"display: none;\"></phn-back-button>\n              <div class=\"button-skeleton\"></div>\n              <div class=\"skeleton-headline\"></div>\n              <phn-signature-heading subtext=\"Gasoline\" text=\"911\"></phn-signature-heading>\n              <phn-p-button-pure class=\"close-button\" data-test-id=\"close-button\" hidelabel=\"true\" icon=\"close\" size=\"small\" style=\"display: none;\">\n                Close Dialog\n              </phn-p-button-pure>\n              <div class=\"button-skeleton\"></div>\n            </div>\n          </phn-drawer-header>\n        `);\n      });\n    });\n\n    describe('desktop snapshot tests', () => {\n      it('hides back button when showBackButton prop not passed', async () => {\n        const page = await newSpecPage({\n          components: [DrawerHeader],\n          template: () => (\n            <phn-drawer-header backButtonAnalyticsId=\"menu\" route=\"mainmenu\" breakpoint={0} receivedContent={true} />\n          )\n        });\n\n        expect(page.root).toMatchInlineSnapshot(`\n          <phn-drawer-header>\n            <div class=\"drawer-header\">\n              <div class=\"spacer\"></div>\n              <phn-heading class=\"heading-items\" subtext=\"\" text=\"\" style=\"display: none;\"></phn-heading>\n              <phn-p-button-pure class=\"close-button\" data-test-id=\"close-button\" hidelabel=\"true\" icon=\"close\" size=\"small\">\n                Close Dialog\n              </phn-p-button-pure>\n            </div>\n          </phn-drawer-header>\n        `);\n      });\n\n      it('uses default text for back button when backButtonText prop not passed', async () => {\n        const page = await newSpecPage({\n          components: [DrawerHeader],\n          template: () => (\n            <phn-drawer-header\n              showBackButton\n              backButtonAnalyticsId=\"menu\"\n              route=\"mainmenu\"\n              breakpoint={0}\n              receivedContent={true}\n            />\n          )\n        });\n\n        expect(page.root).toMatchInlineSnapshot(`\n          <phn-drawer-header>\n            <div class=\"drawer-header\">\n              <phn-back-button analyticsid=\"menu\" class=\"back-button\" text=\"\"></phn-back-button>\n              <phn-heading class=\"heading-items\" subtext=\"\" text=\"\" style=\"display: none;\"></phn-heading>\n              <phn-p-button-pure class=\"close-button\" data-test-id=\"close-button\" hidelabel=\"true\" icon=\"close\" size=\"small\">\n                Close Dialog\n              </phn-p-button-pure>\n            </div>\n          </phn-drawer-header>\n        `);\n      });\n\n      it('uses custom text for back button when backButtonText prop is passed', async () => {\n        const page = await newSpecPage({\n          components: [DrawerHeader],\n          template: () => (\n            <phn-drawer-header\n              showBackButton\n              backButtonText=\"Back\"\n              backButtonAnalyticsId=\"menu\"\n              route=\"series/mainmenu.718\"\n              breakpoint={0}\n              receivedContent={true}\n            />\n          )\n        });\n\n        expect(page.root).toMatchInlineSnapshot(`\n          <phn-drawer-header>\n            <div class=\"drawer-header\">\n              <phn-back-button analyticsid=\"menu\" class=\"back-button\" text=\"\"></phn-back-button>\n              <phn-heading class=\"heading-items\" subtext=\"\" text=\"\" style=\"display: none;\"></phn-heading>\n              <phn-p-button-pure class=\"close-button\" data-test-id=\"close-button\" hidelabel=\"true\" icon=\"close\" size=\"small\">\n                Close Dialog\n              </phn-p-button-pure>\n            </div>\n          </phn-drawer-header>\n        `);\n      });\n    });\n  });\n\n  describe('button is clicked', () => {\n    it('call back function when back button is clicked', async () => {\n      goTo(RoutingKeys.MODELS, 'series/mainmenu.718');\n\n      const page = await newSpecPage({\n        components: [DrawerHeader],\n        template: () => (\n          <phn-drawer-header showBackButton backButtonAnalyticsId=\"menu\" route=\"series/mainmenu.718\" breakpoint={0} />\n        )\n      });\n      const routingManagerBackSpy: jest.SpyInstance = jest.spyOn(routingManager, 'back');\n\n      el.mouseClick(getHTMLElement(page.root?.querySelector('phn-back-button')));\n\n      expect(routingManagerBackSpy).toHaveBeenCalledTimes(1);\n    });\n\n    it('emits clickDrawerHeaderClose event when close button is clicked', async () => {\n      const page = await newSpecPage({\n        components: [DrawerHeader],\n        template: () => <phn-drawer-header backButtonAnalyticsId=\"menu\" route=\"series/mainmenu.718\" breakpoint={0} />\n      });\n\n      page.rootInstance.clickDrawerHeaderClose.emit = jest.fn();\n\n      el.mouseClick(getHTMLElement(page.root?.querySelector('.close-button')));\n\n      expect(page.rootInstance.clickDrawerHeaderClose.emit).toHaveBeenCalled();\n    });\n\n    it('sends MENU_CLOSE_CLICK data event after close button is clicked', async () => {\n      const page = await newSpecPage({\n        components: [DrawerHeader],\n        template: () => <phn-drawer-header backButtonAnalyticsId=\"menu\" route=\"series/mainmenu.718\" breakpoint={0} />\n      });\n      routerStore.state.routingKeyHistory = ['mainmenu', 'series', 'series/mainmenu.718'];\n      routerStore.state.routingKeyPointer = 2;\n\n      el.mouseClick(getHTMLElement(page.root?.querySelector('.close-button')));\n\n      const event = globalDataLayerService.gdl.DataLayerStore[0];\n\n      expect(event.context?.eventAction).toEqual(EventActions.MENU_CLOSE_CLICK);\n      expect(event.componentClick).toEqual({\n        clickElementId: 'mainmenu.drawer.close',\n        clickElementName: 'X',\n        clickElementType: ClickElementTypes.Button,\n        targetElement: 'level-0'\n      });\n      expect(event.componentDisplay).toEqual({\n        displayElementId: 'level3-mainmenu.718',\n        displayElementType: 'level3_close-button',\n        displayElementName: 'X'\n      });\n    });\n  });\n\n  describe('mobile headings', () => {\n    it('displays drawer header without heading', async () => {\n      const page = await newSpecPage({\n        components: [DrawerHeader],\n        template: () => <phn-drawer-header backButtonAnalyticsId=\"menu\" route=\"mainmenu\" breakpoint={breakpoint.xs} />\n      });\n      expect(page.root?.querySelector('phn-heading')?.getAttribute('text')).toBe('');\n    });\n\n    it('displays models drawer header with heading', async () => {\n      navContentStore.state.models = mockModelsContent;\n      const page = await newSpecPage({\n        components: [DrawerHeader],\n        template: () => (\n          <phn-drawer-header\n            showBackButton\n            backButtonAnalyticsId=\"menu\"\n            route=\"models\"\n            breakpoint={breakpoint.xs}\n          ></phn-drawer-header>\n        )\n      });\n\n      expect(page.root?.querySelector('phn-heading')).toBeTruthy();\n      expect(page.root?.querySelector('phn-heading')?.getAttribute('text')).toEqual('Models');\n    });\n\n    it('displays signature-heading for 911', async () => {\n      navContentStore.state.models = mockModelsContent;\n      const page = await newSpecPage({\n        components: [DrawerHeader],\n        template: () => (\n          <phn-drawer-header\n            showBackButton\n            backButtonAnalyticsId=\"menu\"\n            route=\"models/mainmenu.911\"\n            breakpoint={breakpoint.xs}\n          ></phn-drawer-header>\n        )\n      });\n\n      expect(page.root?.querySelector('phn-heading')).toBeFalsy();\n      expect(page.root?.querySelector('phn-signature-heading')?.getAttribute('text')).toEqual('911');\n    });\n  });\n});\n"]}