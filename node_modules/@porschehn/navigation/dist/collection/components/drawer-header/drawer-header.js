import { Fragment, h } from "@stencil/core";
import globalDataLayerService from "../../services/analytics/global-data-layer-service";
import { ClickElementTypes, ElementTypes, EventActions } from "../../utility/constants";
import analyticsManager from "../../services/analytics/analytics-manager";
import { navContentStore } from "../../state/nav-content-store";
import { isDesktop, isString } from "../../utility/helper";
import { getHeadlineText, getSubtext } from "../../services/menu-items-service";
import { findTopLevelRoutingKey } from "../../entities/routing-key";
import { componentsOnReady } from "../../utility/ready";
import { Timeout } from "../../utility/timeout";
export class DrawerHeader {
  constructor() {
    this.backButtonText = '';
    this.backButtonAnalyticsId = undefined;
    this.showBackButton = false;
    this.activeRoutingKey = undefined;
    this.breakpoint = undefined;
    this.receivedContent = false;
    this.locale = undefined;
    this.showSkeleton = true;
  }
  componentWillLoad() {
    this.waitForComponentsToLoad();
  }
  async waitForComponentsToLoad() {
    await componentsOnReady(this.el, new Timeout(5000));
    this.showSkeleton = !this.receivedContent;
  }
  sendDataLayerEvent() {
    globalDataLayerService.pushDataLayerEvent(EventActions.MENU_CLOSE_CLICK, {
      componentClick: {
        clickElementId: 'mainmenu.drawer.close',
        clickElementName: 'X',
        clickElementType: ClickElementTypes.Button,
        targetElement: 'level-0'
      },
      componentDisplay: {
        displayElementId: analyticsManager.calculateDisplayElementId(),
        displayElementType: analyticsManager.calculateDisplayElementType(this.activeRoutingKey, ElementTypes.closeButton),
        displayElementName: 'X'
      }
    });
  }
  render() {
    const topLevelRoutingKey = findTopLevelRoutingKey(this.activeRoutingKey);
    const isMobile = !isDesktop(this.breakpoint);
    const displayHeadlineContent = topLevelRoutingKey !== undefined
      ? getHeadlineText(navContentStore.state, this.activeRoutingKey, topLevelRoutingKey)
      : '';
    const modelType = displayHeadlineContent.includes('mainmenu.') ? displayHeadlineContent.split('mainmenu.')[1] : '';
    const subtext = getSubtext(topLevelRoutingKey, this.activeRoutingKey, this.locale);
    return (h("div", { class: "drawer-header" }, this.showBackButton ? (h(Fragment, null, h("phn-back-button", { class: "back-button", onClick: () => {
        this.clickDrawerHeaderBack.emit();
      }, analyticsId: this.backButtonAnalyticsId, text: isMobile ? '' : this.backButtonText, activeRoutingKey: this.activeRoutingKey, style: !this.showSkeleton ? {} : { display: 'none' } }), this.showSkeleton ? h("div", { class: "button-skeleton" }) : null)) : (h("div", { class: "spacer" })), isMobile ? (modelType === '' ? (h(Fragment, null, this.showSkeleton && this.showBackButton ? h("div", { class: "skeleton-headline" }) : null, h("phn-heading", { text: displayHeadlineContent, style: this.showSkeleton || !isString(displayHeadlineContent) ? { display: 'none' } : {}, class: "heading-items", subtext: subtext }))) : (h(Fragment, null, this.showSkeleton ? h("div", { class: "skeleton-headline" }) : null, h("phn-signature-heading", { text: modelType, subtext: subtext })))) : null, h(Fragment, null, h("phn-p-button-pure", { class: "close-button", icon: "close", hideLabel: "true", aria: { 'aria-label': 'close dialog' }, size: "small", style: !this.showSkeleton ? {} : { display: 'none' }, "data-test-id": "close-button", onClick: () => {
        this.sendDataLayerEvent();
        this.clickDrawerHeaderClose.emit();
      } }, "Close Dialog"), this.showSkeleton ? h("div", { class: "button-skeleton" }) : null)));
  }
  static get is() { return "phn-drawer-header"; }
  static get encapsulation() { return "scoped"; }
  static get originalStyleUrls() {
    return {
      "$": ["drawer-header.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["drawer-header.css"]
    };
  }
  static get properties() {
    return {
      "backButtonText": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "back-button-text",
        "reflect": false,
        "defaultValue": "''"
      },
      "backButtonAnalyticsId": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "back-button-analytics-id",
        "reflect": false
      },
      "showBackButton": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "show-back-button",
        "reflect": false,
        "defaultValue": "false"
      },
      "activeRoutingKey": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "active-routing-key",
        "reflect": false
      },
      "breakpoint": {
        "type": "number",
        "mutable": false,
        "complexType": {
          "original": "number",
          "resolved": "number",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "breakpoint",
        "reflect": false
      },
      "receivedContent": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "received-content",
        "reflect": false,
        "defaultValue": "false"
      },
      "locale": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string | undefined",
          "references": {}
        },
        "required": false,
        "optional": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "locale",
        "reflect": false
      }
    };
  }
  static get states() {
    return {
      "showSkeleton": {}
    };
  }
  static get events() {
    return [{
        "method": "clickDrawerHeaderBack",
        "name": "clickDrawerHeaderBack",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "void",
          "resolved": "void",
          "references": {}
        }
      }, {
        "method": "clickDrawerHeaderClose",
        "name": "clickDrawerHeaderClose",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "void",
          "resolved": "void",
          "references": {}
        }
      }];
  }
  static get elementRef() { return "el"; }
}
//# sourceMappingURL=drawer-header.js.map
