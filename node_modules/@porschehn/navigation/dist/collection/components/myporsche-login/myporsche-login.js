import { Fragment, h } from "@stencil/core";
import globalDataLayerService from "../../services/analytics/global-data-layer-service";
import { ClickElementTypes, ElementTypes, EventActions } from "../../utility/constants";
import { isString } from "../../utility/helper";
import analyticsManager from "../../services/analytics/analytics-manager";
import { RoutingKeys } from "../../entities/routing-key";
export class MyPorscheLogin {
  constructor() {
    this.login = undefined;
    this.more = null;
    this.signup = undefined;
    this.signupText = undefined;
  }
  sendDataLayerEvent(link) {
    globalDataLayerService.pushDataLayerEvent(EventActions.NAVIGATION_LINK_CLICK, {
      componentClick: {
        clickElementId: link === null || link === void 0 ? void 0 : link.id,
        clickElementName: link === null || link === void 0 ? void 0 : link.text,
        clickElementType: ClickElementTypes.Link,
        targetUrl: link === null || link === void 0 ? void 0 : link.link
      },
      componentDisplay: {
        displayElementId: analyticsManager.calculateDisplayElementId(),
        displayElementType: analyticsManager.calculateDisplayElementType(RoutingKeys.MY_PORSCHE, ElementTypes.myPorscheDrawer),
        displayElementName: link === null || link === void 0 ? void 0 : link.text
      }
    });
  }
  render() {
    return (h(Fragment, null, h("div", { class: "button-container" }, h("phn-p-button", { variant: "primary", class: "login", onClick: () => {
        this.loginEvent.emit();
        this.sendDataLayerEvent(this.login);
      } }, this.login.text), this.more && isString(this.more.link) ? (h("phn-p-link", { variant: "tertiary", class: "more", href: this.more.link, onClick: () => {
        this.sendDataLayerEvent(this.more);
      } }, this.more.text)) : null), h("div", null, h("phn-p-link-pure", { icon: "none", onClick: () => {
        this.sendDataLayerEvent(this.signup);
      } }, h("a", { href: this.signup.link }, this.signup.text)), h("phn-p-text", null, "\u00A0", this.signupText))));
  }
  static get is() { return "phn-myporsche-login"; }
  static get encapsulation() { return "scoped"; }
  static get originalStyleUrls() {
    return {
      "$": ["myporsche-login.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["myporsche-login.css"]
    };
  }
  static get properties() {
    return {
      "login": {
        "type": "unknown",
        "mutable": false,
        "complexType": {
          "original": "TLink",
          "resolved": "{ id: string; text: string; link: string; icon: string; description: string; }",
          "references": {
            "TLink": {
              "location": "import",
              "path": "../../entities/content",
              "id": "src/entities/content.ts::TLink"
            }
          }
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        }
      },
      "more": {
        "type": "unknown",
        "mutable": false,
        "complexType": {
          "original": "TLink | null",
          "resolved": "null | { id: string; text: string; link: string; icon: string; description: string; }",
          "references": {
            "TLink": {
              "location": "import",
              "path": "../../entities/content",
              "id": "src/entities/content.ts::TLink"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "defaultValue": "null"
      },
      "signup": {
        "type": "unknown",
        "mutable": false,
        "complexType": {
          "original": "TLink",
          "resolved": "{ id: string; text: string; link: string; icon: string; description: string; }",
          "references": {
            "TLink": {
              "location": "import",
              "path": "../../entities/content",
              "id": "src/entities/content.ts::TLink"
            }
          }
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        }
      },
      "signupText": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "signup-text",
        "reflect": false
      }
    };
  }
  static get events() {
    return [{
        "method": "loginEvent",
        "name": "loginEvent",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "void",
          "resolved": "void",
          "references": {}
        }
      }];
  }
}
//# sourceMappingURL=myporsche-login.js.map
