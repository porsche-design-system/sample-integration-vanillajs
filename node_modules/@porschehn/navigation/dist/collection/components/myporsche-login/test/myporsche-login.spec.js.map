{"version":3,"file":"myporsche-login.spec.js","sourceRoot":"","sources":["../../../../../src/components/myporsche-login/test/myporsche-login.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage, SpecPage } from '@stencil/core/testing';\nimport { ClickElementTypes, EventActions } from '../../../utility/constants';\nimport globalDataLayerService from '../../../services/analytics/global-data-layer-service';\nimport { mockMyPorscheContent } from '../../../test/test-data';\nimport { getHTMLElement } from '../../../utility/helper';\nimport { MyPorscheLogin } from '../myporsche-login';\nimport { routerStore } from '../../../state/router-store';\nimport { RoutingKeys } from '../../../entities/routing-key';\nimport { goTo } from '../../../services/routing-manager';\n\ndescribe('myporsche-login', () => {\n  beforeEach(() => {\n    goTo(RoutingKeys.MY_PORSCHE);\n  });\n\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [MyPorscheLogin],\n      template: () => <phn-myporsche-login {...mockMyPorscheContent} />\n    });\n\n    expect(page.root).toMatchInlineSnapshot(`\n      <phn-myporsche-login id=\"mainmenu.myporsche\" link=\"https://my.porsche.com/core/gb/en_GB/home\" loggedinfallback=\"Logged in\" logintext=\"Login / Register\" text=\"My Porsche\">\n        <div class=\"button-container\">\n          <phn-p-button class=\"login\" variant=\"primary\">\n            Log in\n          </phn-p-button>\n          <phn-p-link class=\"more\" href=\"https://www.porsche.com/uk/accessoriesandservice/myporsche/\" variant=\"tertiary\">\n            Discover more\n          </phn-p-link>\n        </div>\n        <div>\n          <phn-p-link-pure icon=\"none\">\n            <a href=\"https://signup.porsche.com/gb/en_GB/register\">\n              Register now\n            </a>\n          </phn-p-link-pure>\n          <phn-p-text>\n            to discover the digital world of Porsche.\n          </phn-p-text>\n        </div>\n      </phn-myporsche-login>\n    `);\n  });\n\n  it('should not render more button if more link content is not provided', async () => {\n    const page = await newSpecPage({\n      components: [MyPorscheLogin],\n      template: () => <phn-myporsche-login {...mockMyPorscheContent} more={null} />\n    });\n    expect(page.root?.querySelector('phn-p-link.more')).toBeNull();\n  });\n\n  it('should emit loginEvent when clicked', async () => {\n    const page = await newSpecPage({\n      components: [MyPorscheLogin],\n      template: () => <phn-myporsche-login {...mockMyPorscheContent} />\n    });\n\n    const loginEventSpy = jest.spyOn(page.rootInstance.loginEvent, 'emit');\n\n    getHTMLElement(page.root?.querySelector('.login'))?.click();\n    expect(loginEventSpy).toHaveBeenCalled();\n  });\n\n  describe('data analytics', () => {\n    let page: SpecPage;\n\n    beforeEach(async () => {\n      page = await newSpecPage({\n        components: [MyPorscheLogin],\n        template: () => <phn-myporsche-login {...mockMyPorscheContent} />\n      });\n    });\n\n    it('should send NAVIGATION_LINK_CLICK data event after login link is clicked', async () => {\n      const myPorscheLogin = getHTMLElement(page.root?.querySelector('.login'));\n      routerStore.state.routingKeyHistory = ['mainmenu', 'my_porsche'];\n      routerStore.state.routingKeyPointer = 1;\n\n      myPorscheLogin?.click();\n\n      expect(globalDataLayerService.gdl.DataLayerStore).toHaveLength(1);\n\n      const event = globalDataLayerService.gdl.DataLayerStore[0];\n\n      expect(event.context?.eventAction).toEqual(EventActions.NAVIGATION_LINK_CLICK);\n      expect(event.componentClick).toEqual({\n        clickElementId: mockMyPorscheContent.login.id,\n        clickElementName: mockMyPorscheContent.login.text,\n        clickElementType: ClickElementTypes.Link,\n        targetUrl: mockMyPorscheContent.login.link\n      });\n      expect(event.componentDisplay).toEqual({\n        displayElementId: 'level2-my_porsche',\n        displayElementType: 'level2_my-porsche-drawer',\n        displayElementName: mockMyPorscheContent.login.text\n      });\n    });\n\n    it('should send NAVIGATION_LINK_CLICK data event after more link is clicked', async () => {\n      const myPorscheMore = getHTMLElement(page.root?.querySelector('.more'));\n\n      myPorscheMore?.click();\n\n      expect(globalDataLayerService.gdl.DataLayerStore).toHaveLength(1);\n\n      const event = globalDataLayerService.gdl.DataLayerStore[0];\n\n      expect(event.context?.eventAction).toEqual(EventActions.NAVIGATION_LINK_CLICK);\n      expect(event.componentClick).toEqual({\n        clickElementId: mockMyPorscheContent.more?.id,\n        clickElementName: mockMyPorscheContent.more?.text,\n        clickElementType: ClickElementTypes.Link,\n        targetUrl: mockMyPorscheContent.more?.link\n      });\n      expect(event.componentDisplay).toEqual({\n        displayElementId: 'level2-my_porsche',\n        displayElementType: 'level2_my-porsche-drawer',\n        displayElementName: mockMyPorscheContent.more?.text\n      });\n    });\n\n    it('should send NAVIGATION_LINK_CLICK data event after sign up link is clicked', async () => {\n      const myPorscheSignup = getHTMLElement(page.root?.querySelector('phn-p-link-pure'));\n\n      myPorscheSignup?.click();\n\n      expect(globalDataLayerService.gdl.DataLayerStore).toHaveLength(1);\n\n      const event = globalDataLayerService.gdl.DataLayerStore[0];\n\n      expect(event.context?.eventAction).toEqual(EventActions.NAVIGATION_LINK_CLICK);\n      expect(event.componentClick).toEqual({\n        clickElementId: mockMyPorscheContent.signup.id,\n        clickElementName: mockMyPorscheContent.signup.text,\n        clickElementType: ClickElementTypes.Link,\n        targetUrl: mockMyPorscheContent.signup.link\n      });\n      expect(event.componentDisplay).toEqual({\n        displayElementId: 'level2-my_porsche',\n        displayElementType: 'level2_my-porsche-drawer',\n        displayElementName: mockMyPorscheContent.signup.text\n      });\n    });\n  });\n});\n"]}