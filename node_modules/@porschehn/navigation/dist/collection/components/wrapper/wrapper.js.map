{"version":3,"file":"wrapper.js","sourceRoot":"","sources":["../../../../src/components/wrapper/wrapper.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACzE,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAC1D,OAAO,aAAa,MAAM,+BAA+B,CAAC;AAC1D,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAChE,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAC5D,OAAO,EACL,cAAc,EAEd,eAAe,EAEf,OAAO,EACR,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAAE,cAAc,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AACvE,OAAO,EAAE,eAAe,EAAE,MAAM,mCAAmC,CAAC;AACpE,OAAO,EAAE,WAAW,EAAmB,MAAM,6BAA6B,CAAC;AAC3E,OAAO,gBAAgB,MAAM,6CAA6C,CAAC;AAO3E,MAAM,OAAO,OAAO;;;;0BAGO,KAAK;2BACJ,KAAK;iBACM,eAAe,CAAC,KAAK;gBACvB,cAAc,CAAC,MAAM;eACzB,WAAW,CAAC,OAAO;2BACxB,KAAK;wBACR,KAAK;kCAEM,aAAa,CAAC,UAAU;oCACtB,KAAK;;EAIzC,iBAAiB;IACf,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,mBAAmB,EAAE,aAAa,CAAC,iBAAiB,EAAE,CAAC,CAAC;IAElF,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzB,gBAAgB,CAAC,UAAU,EAAE,CAAC;EAChC,CAAC;EAED,MAAM;IACJ,MAAM,yBAAyB,GAAG,eAAe,CAAC,KAAK,CAAC,kBAAkB,CAAC;IAC3E,MAAM,sBAAsB,GAC1B,IAAI,CAAC,sBAAsB,IAAI,CAAC,IAAI,CAAC,wBAAwB,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,eAAe,CAAC;IAEhH,MAAM,sBAAsB,GAAG,eAAe,CAAC,KAAK,CAAC,sBAAsB,CAAC;IAE5E,OAAO,CACL,EAAC,IAAI;MACF,aAAa,CAAC,KAAK,CAAC,GAAG,KAAK,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAClD,kBAAY,KAAK,EAAC,MAAM,EAAC,IAAI,EAAC,SAAS,EAAC,KAAK,EAAC,eAAe;;QAClD,OAAO;wBACL,CACd,CAAC,CAAC,CAAC,IAAI;MAEP,sBAAsB,CAAC,CAAC,CAAC,CACxB,+BACE,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,OAAO,EAAE,yBAAyB,EAClC,IAAI,EAAC,QAAQ,gBACF,uCAAuC,EAClD,cAAc,EAAE,GAAG,EAAE;UACnB,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;QACvC,CAAC,GACD,CACH,CAAC,CAAC,CAAC,IAAI;MAEP,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,sBAAsB,KAAK,IAAI,CAAC,CAAC,CAAC,CAC5D,SAAG,KAAK,EAAC,mBAAmB,EAAC,IAAI,EAAE,sBAAsB,CAAC,IAAI,IAC3D,sBAAsB,CAAC,IAAI,CAC1B,CACL,CAAC,CAAC,CAAC,IAAI;MAER,mBACE,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,cAAc,EAAE,IAAI,CAAC,cAAc,EACnC,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,GAAG,EAAE,IAAI,CAAC,GAAG,EACb,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,YAAY,EAAE,IAAI,CAAC,YAAY,IAE9B,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACxC,WAAK,IAAI,EAAC,0BAA0B;QAClC,YAAM,IAAI,EAAC,0BAA0B,GAAQ,CACzC,CACP,CAAC,CAAC,CAAC,IAAI,CACI;MAEd,WACE,EAAE,EAAC,MAAM,EACT,KAAK,EAAC,cAAc,EACpB,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE;UACZ,MAAM,EAAE,GAAG,cAAc,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;UAC3C,IAAI,EAAE,KAAK,IAAI,EAAE;YACf,EAAE,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;WAChC;QACH,CAAC,GACD,CACG,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, h, Host, Prop, State } from '@stencil/core';\nimport { Environments } from '../../entities/environment';\nimport windowService from '../../services/window-service';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { navStateStore } from '../../state/nav-state-store';\nimport {\n  NavigationMode,\n  NavigationModeType,\n  NavigationTheme,\n  NavigationThemeType,\n  VERSION\n} from '../../utility/constants';\nimport { getHTMLElement, loadRootElement } from '../../utility/helper';\nimport { isShopAvailable } from '../../utility/helpers/shop-helper';\nimport { Application, ApplicationType } from '../../utility/constants/app';\nimport animationManager from '../../services/animations/animation-manager';\n\n@Component({\n  tag: 'phn-wrapper',\n  styleUrl: 'wrapper.scss',\n  scoped: true\n})\nexport class Wrapper {\n  @Prop() locale!: string;\n  @Prop() breakpoint!: number;\n  @Prop() loadingContent = false;\n  @Prop() receivedContent = false;\n  @Prop() theme: NavigationThemeType = NavigationTheme.light;\n  @Prop() mode: NavigationModeType = NavigationMode.navbar;\n  @Prop() app: ApplicationType = Application.default;\n  @Prop() displayLogoOnly = false;\n  @Prop() limitedWidth = false;\n\n  @State() showCountryRecommender = windowService.redirected;\n  @State() countryRecommenderClosed = false;\n\n  @Element() el!: HTMLPhnWrapperElement;\n\n  componentWillLoad(): void {\n    this.el.style.setProperty('--scrollbar-width', windowService.getScrollbarWidth());\n\n    loadRootElement(this.el);\n    animationManager.initialize();\n  }\n\n  render(): HTMLPhnWrapperElement {\n    const countryRecommenderContent = navContentStore.state.countryRecommender;\n    const showCountryRecommender =\n      this.showCountryRecommender && !this.countryRecommenderClosed && !this.loadingContent && this.receivedContent;\n\n    const accessibilityStatement = navContentStore.state.accessibilityStatement;\n\n    return (\n      <Host>\n        {navStateStore.state.env === Environments.PREVIEW ? (\n          <phn-p-text theme=\"dark\" size=\"x-small\" class=\"preview-badge\">\n            Header v{VERSION} - PP content\n          </phn-p-text>\n        ) : null}\n\n        {showCountryRecommender ? (\n          <phn-country-recommender\n            locale={this.locale}\n            content={countryRecommenderContent}\n            role=\"region\"\n            aria-label=\"Change recommended Region or Language\"\n            onBannerClosed={() => {\n              this.countryRecommenderClosed = true;\n            }}\n          />\n        ) : null}\n\n        {this.locale === 'en-US' && accessibilityStatement !== null ? (\n          <a class=\"screenreader-only\" href={accessibilityStatement.link}>\n            {accessibilityStatement.text}\n          </a>\n        ) : null}\n\n        <phn-level-0\n          theme={this.theme}\n          mode={this.mode}\n          locale={this.locale}\n          loadingContent={this.loadingContent}\n          receivedContent={this.receivedContent}\n          breakpoint={this.breakpoint}\n          app={this.app}\n          displayLogoOnly={this.displayLogoOnly}\n          limitedWidth={this.limitedWidth}\n        >\n          {isShopAvailable(this.locale, this.app) ? (\n            <div slot=\"contextual_drawer_header\">\n              <slot name=\"contextual_drawer_header\"></slot>\n            </div>\n          ) : null}\n        </phn-level-0>\n\n        <div\n          id=\"main\"\n          class=\"main-content\"\n          onBlur={(e) => {\n            const el = getHTMLElement(e.currentTarget);\n            if (el !== null) {\n              el.removeAttribute('tabIndex');\n            }\n          }}\n        />\n      </Host>\n    );\n  }\n}\n"]}