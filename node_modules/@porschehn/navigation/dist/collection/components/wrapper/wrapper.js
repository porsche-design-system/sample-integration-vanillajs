import { h, Host } from "@stencil/core";
import { Environments } from "../../entities/environment";
import windowService from "../../services/window-service";
import { navContentStore } from "../../state/nav-content-store";
import { navStateStore } from "../../state/nav-state-store";
import { NavigationMode, NavigationTheme, VERSION } from "../../utility/constants";
import { getHTMLElement, loadRootElement } from "../../utility/helper";
import { isShopAvailable } from "../../utility/helpers/shop-helper";
import { Application } from "../../utility/constants/app";
import animationManager from "../../services/animations/animation-manager";
export class Wrapper {
  constructor() {
    this.locale = undefined;
    this.breakpoint = undefined;
    this.loadingContent = false;
    this.receivedContent = false;
    this.theme = NavigationTheme.light;
    this.mode = NavigationMode.navbar;
    this.app = Application.default;
    this.displayLogoOnly = false;
    this.limitedWidth = false;
    this.showCountryRecommender = windowService.redirected;
    this.countryRecommenderClosed = false;
  }
  componentWillLoad() {
    this.el.style.setProperty('--scrollbar-width', windowService.getScrollbarWidth());
    loadRootElement(this.el);
    animationManager.initialize();
  }
  render() {
    const countryRecommenderContent = navContentStore.state.countryRecommender;
    const showCountryRecommender = this.showCountryRecommender && !this.countryRecommenderClosed && !this.loadingContent && this.receivedContent;
    const accessibilityStatement = navContentStore.state.accessibilityStatement;
    return (h(Host, null, navStateStore.state.env === Environments.PREVIEW ? (h("phn-p-text", { theme: "dark", size: "x-small", class: "preview-badge" }, "Header v", VERSION, " - PP content")) : null, showCountryRecommender ? (h("phn-country-recommender", { locale: this.locale, content: countryRecommenderContent, role: "region", "aria-label": "Change recommended Region or Language", onBannerClosed: () => {
        this.countryRecommenderClosed = true;
      } })) : null, this.locale === 'en-US' && accessibilityStatement !== null ? (h("a", { class: "screenreader-only", href: accessibilityStatement.link }, accessibilityStatement.text)) : null, h("phn-level-0", { theme: this.theme, mode: this.mode, locale: this.locale, loadingContent: this.loadingContent, receivedContent: this.receivedContent, breakpoint: this.breakpoint, app: this.app, displayLogoOnly: this.displayLogoOnly, limitedWidth: this.limitedWidth }, isShopAvailable(this.locale, this.app) ? (h("div", { slot: "contextual_drawer_header" }, h("slot", { name: "contextual_drawer_header" }))) : null), h("div", { id: "main", class: "main-content", onBlur: (e) => {
        const el = getHTMLElement(e.currentTarget);
        if (el !== null) {
          el.removeAttribute('tabIndex');
        }
      } })));
  }
  static get is() { return "phn-wrapper"; }
  static get encapsulation() { return "scoped"; }
  static get originalStyleUrls() {
    return {
      "$": ["wrapper.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["wrapper.css"]
    };
  }
  static get properties() {
    return {
      "locale": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "locale",
        "reflect": false
      },
      "breakpoint": {
        "type": "number",
        "mutable": false,
        "complexType": {
          "original": "number",
          "resolved": "number",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "breakpoint",
        "reflect": false
      },
      "loadingContent": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "loading-content",
        "reflect": false,
        "defaultValue": "false"
      },
      "receivedContent": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "received-content",
        "reflect": false,
        "defaultValue": "false"
      },
      "theme": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "NavigationThemeType",
          "resolved": "\"dark\" | \"light\"",
          "references": {
            "NavigationThemeType": {
              "location": "import",
              "path": "../../utility/constants",
              "id": "src/utility/constants/index.ts::NavigationThemeType"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "theme",
        "reflect": false,
        "defaultValue": "NavigationTheme.light"
      },
      "mode": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "NavigationModeType",
          "resolved": "\"hero\" | \"navbar\" | \"transparent\"",
          "references": {
            "NavigationModeType": {
              "location": "import",
              "path": "../../utility/constants",
              "id": "src/utility/constants/index.ts::NavigationModeType"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "mode",
        "reflect": false,
        "defaultValue": "NavigationMode.navbar"
      },
      "app": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "ApplicationType",
          "resolved": "\"default\" | \"pcom\" | \"shop\"",
          "references": {
            "ApplicationType": {
              "location": "import",
              "path": "../../utility/constants/app",
              "id": "src/utility/constants/app.ts::ApplicationType"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "app",
        "reflect": false,
        "defaultValue": "Application.default"
      },
      "displayLogoOnly": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "display-logo-only",
        "reflect": false,
        "defaultValue": "false"
      },
      "limitedWidth": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "limited-width",
        "reflect": false,
        "defaultValue": "false"
      }
    };
  }
  static get states() {
    return {
      "showCountryRecommender": {},
      "countryRecommenderClosed": {}
    };
  }
  static get elementRef() { return "el"; }
}
//# sourceMappingURL=wrapper.js.map
