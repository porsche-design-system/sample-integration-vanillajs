{"version":3,"file":"mock-fetch.js","sourceRoot":"","sources":["../../../src/test/mock-fetch.ts"],"names":[],"mappings":"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","sourcesContent":["/* istanbul ignore file */\n\nimport { Environments } from '../entities/environment';\nimport { LOGGING_ENDPOINT } from '../services/logger';\nimport { getConfig } from '../utility/helper';\nimport {\n  expiredAccessToken,\n  firstAccessToken,\n  firstUserProfileData,\n  mockCoordinates,\n  mockCoordinatesWithInvalidJson,\n  mockFailFetchCoordinates,\n  mockInvalidCoordinates,\n  mockInvalidCountryCode,\n  mockInvalidResponseCoordinates,\n  mockNewContent,\n  mockPPNDealerSearchResultsWithLocalizedAddress,\n  mockShopContentResponse,\n  mockUserInformation,\n  secondAccessToken,\n  secondUserProfileData\n} from './test-data';\n\nfunction getResponse(body = {}, status = 200) {\n  const headers = new Headers();\n  headers.set('content-type', 'application/json');\n\n  return {\n    ok: status === 200,\n    status: status,\n    headers,\n    json: async () => body\n  } as Response;\n}\n\nfunction getInvalidResponse(status: number) {\n  const headers = new Headers();\n  headers.set('content-type', 'text/html');\n\n  return {\n    ok: status === 200,\n    status: status,\n    headers\n  } as Response;\n}\n\nconst testConfig = getConfig(Environments.TEST);\n\nexport default async function mockFetch(input: RequestInfo | URL, init?: RequestInit | undefined): Promise<Response> {\n  const [origin, queryString] = input.toString().split('?');\n  const originArray = origin.split(/\\/|\\./);\n  const locale = originArray[originArray.length - 2];\n\n  switch (origin) {\n    case `${getConfig(Environments.PREVIEW).CONTENT_URL}/preprod-content.json`:\n    case `${testConfig.CONTENT_URL}/content.json`:\n    case `${testConfig.CONTENT_URL}/preprod-content.json`: {\n      return getResponse(mockNewContent);\n    }\n    case `${testConfig.SHOP_CONTENT_URL}/ch/de-CH/navigation`: {\n      return getResponse(mockShopContentResponse);\n    }\n    case `${testConfig.SHOP_CONTENT_URL}/se/sv-SE/navigation`: {\n      return getResponse(mockShopContentResponse);\n    }\n    case `${getConfig(Environments.PREVIEW).CONTENT_URL}/${locale}.json`:\n    case `${testConfig.CONTENT_URL}/${locale}.json`: {\n      if (locale in mockNewContent) {\n        return getResponse(mockNewContent[locale]);\n      }\n      return { status: 404, ok: false } as Response;\n    }\n    case getConfig(Environments.PREVIEW).PROFILE_API_URL:\n    case testConfig.PROFILE_API_URL: {\n      const Authorization = init?.headers ? (init.headers as { Authorization?: string }).Authorization : '';\n\n      switch (Authorization) {\n        case `Bearer ${firstAccessToken}`:\n          return getResponse(firstUserProfileData);\n\n        case `Bearer ${secondAccessToken}`:\n          return getResponse(secondUserProfileData);\n\n        case `Bearer ${expiredAccessToken}`:\n          return getResponse({}, 401);\n\n        default:\n          return getResponse({}, 400);\n      }\n    }\n    case getConfig(Environments.PREVIEW).BFF_ENDPOINT:\n    case `${testConfig.BFF_ENDPOINT}/user-information`: {\n      const Authorization = init?.headers ? (init.headers as { Authorization?: string }).Authorization : '';\n\n      switch (Authorization) {\n        case firstAccessToken:\n          return getResponse(mockUserInformation);\n\n        default:\n          return getResponse({}, 400);\n      }\n    }\n\n    case `${testConfig.LOGIN_BASE_URL}/.well-known/openid-configuration`: {\n      return getResponse({ token_endpoint: `${testConfig.LOGIN_BASE_URL}/get-token` });\n    }\n\n    case `${testConfig.LOGIN_BASE_URL}/get-token`: {\n      return getResponse({ access_token: firstAccessToken });\n    }\n\n    case `${getConfig(Environments.PREVIEW).LOGIN_BASE_URL}/as/revoke_token.oauth2`:\n    case `${testConfig.LOGIN_BASE_URL}/as/revoke_token.oauth2`: {\n      if (init?.body?.toString().includes(secondAccessToken)) {\n        return getResponse({}, 400);\n      }\n\n      return getResponse();\n    }\n\n    case `${testConfig.DEALER_API_URL}/DE/dealers`: {\n      switch (queryString) {\n        case `coordinates=${mockCoordinates.latitude},${mockCoordinates.longitude}`:\n        case `coordinates=${mockCoordinates.latitude}%2C${mockCoordinates.longitude}`: {\n          return getResponse(mockPPNDealerSearchResultsWithLocalizedAddress);\n        }\n\n        case `coordinates=${mockInvalidCoordinates.latitude},${mockInvalidCoordinates.longitude}`:\n        case `coordinates=${mockInvalidCoordinates.latitude}%2C${mockInvalidCoordinates.longitude}`: {\n          return getResponse({}, 400);\n        }\n\n        case `coordinates=${mockInvalidResponseCoordinates.latitude},${mockInvalidResponseCoordinates.longitude}`:\n        case `coordinates=${mockInvalidResponseCoordinates.latitude}%2C${mockInvalidResponseCoordinates.longitude}`: {\n          return getResponse({}, 500);\n        }\n\n        case `coordinates=${mockFailFetchCoordinates.latitude},${mockFailFetchCoordinates.longitude}`:\n        case `coordinates=${mockFailFetchCoordinates.latitude}%2C${mockFailFetchCoordinates.longitude}`: {\n          throw new Error('Failed fetch request.');\n        }\n\n        case `coordinates=${mockCoordinatesWithInvalidJson.latitude},${mockCoordinatesWithInvalidJson.longitude}`:\n        case `coordinates=${mockCoordinatesWithInvalidJson.latitude}%2C${mockCoordinatesWithInvalidJson.longitude}`: {\n          return getInvalidResponse(200);\n        }\n\n        default: {\n          throw new Error(`Unhandled queryString: ${input}, ${queryString}`);\n        }\n      }\n    }\n\n    case `${testConfig.DEALER_API_URL}/${mockInvalidCountryCode}/dealers`: {\n      return getResponse({}, 404);\n    }\n\n    case testConfig.IDP_MIGRATION_ENDPOINT: {\n      return getResponse({ idp: 'old' }, 200);\n    }\n\n    case `${testConfig.FOOTER_ASSETS_URL}/flags/CH.svg`:\n    case `${testConfig.FOOTER_ASSETS_URL}/flags/YY.svg`: {\n      return getResponse();\n    }\n\n    case LOGGING_ENDPOINT:\n      return getResponse();\n\n    default: {\n      throw new Error(`Unhandled request: ${input}`);\n    }\n  }\n}\n"]}