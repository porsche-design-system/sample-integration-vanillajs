import { getHTMLElement } from "../utility/helper";
import * as el from "./element-helpers";
import * as helper from "../utility/helper";
export async function openMenu(page) {
  var _a, _b;
  (_b = (_a = page.root) === null || _a === void 0 ? void 0 : _a.querySelector('phn-burger-button')) === null || _b === void 0 ? void 0 : _b.click();
  await page.waitForChanges();
}
export async function openMenuFromMyPorscheIcon(page) {
  var _a;
  const myPorscheButton = helper.getHTMLElement((_a = page.root) === null || _a === void 0 ? void 0 : _a.querySelector('phn-my-porsche-icon-button'));
  myPorscheButton === null || myPorscheButton === void 0 ? void 0 : myPorscheButton.click();
  await page.waitForChanges();
}
export async function closeMenuFromCloseButton(page) {
  var _a, _b;
  (_b = getHTMLElement((_a = page.root) === null || _a === void 0 ? void 0 : _a.querySelector('.close-button'))) === null || _b === void 0 ? void 0 : _b.click();
  await page.waitForChanges();
}
export async function clickOnBackButton(page) {
  var _a, _b;
  (_b = getHTMLElement((_a = page.root) === null || _a === void 0 ? void 0 : _a.querySelector('phn-back-button'))) === null || _b === void 0 ? void 0 : _b.click();
  await page.waitForChanges();
}
export async function closeMenuFromEscapeKey(page) {
  var _a;
  el.keyDown((_a = page.root) !== null && _a !== void 0 ? _a : null, 'Escape');
  await page.waitForChanges();
}
export function getHTMLElementFromPage(page, selector) {
  var _a;
  return getHTMLElement((_a = page.root) === null || _a === void 0 ? void 0 : _a.querySelector(selector));
}
export async function waitForFocusTimeout() {
  await new Promise((resolve) => {
    setTimeout(resolve, 200);
  });
}
//# sourceMappingURL=actions.js.map
