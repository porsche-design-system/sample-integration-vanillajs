/* istanbul ignore file */
import { mockPlaceFromCoordinates, mockPredictions } from "./test-data";
export const getMapsMock = () => ({
  maps: {
    Map: jest.fn(),
    places: {
      AutocompleteService: jest.fn().mockReturnValue({
        getPlacePredictions: jest.fn().mockImplementation((_, cb) => cb(mockPredictions, 'OK'))
      }),
      PlacesService: jest.fn().mockReturnValue({
        getDetails: jest.fn().mockImplementation((_, cb) => cb({
          geometry: {
            location: {
              lat: () => 0,
              lng: () => 0
            }
          }
        }, 'OK')),
        findPlaceFromQuery: jest.fn().mockImplementation((_, cb) => cb([
          {
            geometry: {
              location: {
                lat: () => 0,
                lng: () => 0
              }
            }
          }
        ], 'OK'))
      })
    },
    Geocoder: jest.fn().mockReturnValue({
      geocode: jest.fn().mockImplementation((_, cb) => cb([{ formatted_address: mockPlaceFromCoordinates }], 'OK'))
    }),
    LatLng: jest.fn()
  }
});
//# sourceMappingURL=maps-mock.js.map
